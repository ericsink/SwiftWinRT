// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import C;

extension Windows.Graphics.Effects {
// type: Windows.Graphics.Effects.IGraphicsEffect
// interface type
open class IGraphicsEffect
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcb51c0ce, Data2: 0x8fe6, Data3 : 0x4636, Data4 : (0xb2, 0x02, 0x86, 0x1f, 0xaa, 0x07, 0xd8, 0xf3)) }
    // [IsSpecialName] System.String get_Name()
    private func _n_get_Name(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CGraphics_CEffects_CIGraphicsEffect.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, __presult))
        }
    }
    public func get_Name() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Name(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Name(System.String)
    private func _n_put_Name(_ name : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CGraphics_CEffects_CIGraphicsEffect.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Name(pThis, name))
        }
    }
    public func put_Name(name : Optional<Swift.String>) throws -> Void {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        try self._n_put_Name(__hstr_name.Raw());
        }
    }
    public var Name : Swift.String {
        get throws {
            return try get_Name();
        }
    }
} // IGraphicsEffect


// type: Windows.Graphics.Effects.IGraphicsEffectSource
// interface type
open class IGraphicsEffectSource
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2d8f9ddc, Data2: 0x4339, Data3 : 0x4eb9, Data4 : (0x92, 0x16, 0xf9, 0xde, 0xb7, 0x56, 0x58, 0xa2)) }
} // IGraphicsEffectSource


}
