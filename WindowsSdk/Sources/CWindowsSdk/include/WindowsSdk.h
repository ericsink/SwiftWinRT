// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.

// forward decls for delegates
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler _q_CWindows_CFoundation_CIAsyncActionCompletedHandler;
// enums
typedef enum _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation
{
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_None = 0,
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_Copy = 1,
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_Move = 2,
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_Link = 4,
} _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef enum _q_CWindows_CData_CXml_CDom_CNodeType
{
    _q_CWindows_CData_CXml_CDom_CNodeType_Invalid = 0,
    _q_CWindows_CData_CXml_CDom_CNodeType_ElementNode = 1,
    _q_CWindows_CData_CXml_CDom_CNodeType_AttributeNode = 2,
    _q_CWindows_CData_CXml_CDom_CNodeType_TextNode = 3,
    _q_CWindows_CData_CXml_CDom_CNodeType_DataSectionNode = 4,
    _q_CWindows_CData_CXml_CDom_CNodeType_EntityReferenceNode = 5,
    _q_CWindows_CData_CXml_CDom_CNodeType_EntityNode = 6,
    _q_CWindows_CData_CXml_CDom_CNodeType_ProcessingInstructionNode = 7,
    _q_CWindows_CData_CXml_CDom_CNodeType_CommentNode = 8,
    _q_CWindows_CData_CXml_CDom_CNodeType_DocumentNode = 9,
    _q_CWindows_CData_CXml_CDom_CNodeType_DocumentTypeNode = 10,
    _q_CWindows_CData_CXml_CDom_CNodeType_DocumentFragmentNode = 11,
    _q_CWindows_CData_CXml_CDom_CNodeType_NotationNode = 12,
} _q_CWindows_CData_CXml_CDom_CNodeType;
typedef enum _q_CWindows_CFoundation_CAsyncStatus
{
    _q_CWindows_CFoundation_CAsyncStatus_Canceled = 2,
    _q_CWindows_CFoundation_CAsyncStatus_Completed = 1,
    _q_CWindows_CFoundation_CAsyncStatus_Error = 3,
    _q_CWindows_CFoundation_CAsyncStatus_Started = 0,
} _q_CWindows_CFoundation_CAsyncStatus;
typedef enum _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat
{
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Unknown = 0,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32Typeless = 1,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32Float = 2,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32UInt = 3,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32Int = 4,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32Typeless = 5,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32Float = 6,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32UInt = 7,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32Int = 8,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16Typeless = 9,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16Float = 10,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16UIntNormalized = 11,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16UInt = 12,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16IntNormalized = 13,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16Int = 14,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32Typeless = 15,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32Float = 16,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32UInt = 17,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32Int = 18,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G8X24Typeless = 19,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D32FloatS8X24UInt = 20,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32FloatX8X24Typeless = 21,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_X32TypelessG8X24UInt = 22,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10A2Typeless = 23,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10A2UIntNormalized = 24,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10A2UInt = 25,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R11G11B10Float = 26,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8Typeless = 27,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8UIntNormalized = 28,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8UIntNormalizedSrgb = 29,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8UInt = 30,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8IntNormalized = 31,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8Int = 32,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16Typeless = 33,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16Float = 34,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16UIntNormalized = 35,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16UInt = 36,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16IntNormalized = 37,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16Int = 38,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32Typeless = 39,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D32Float = 40,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32Float = 41,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32UInt = 42,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32Int = 43,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R24G8Typeless = 44,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D24UIntNormalizedS8UInt = 45,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R24UIntNormalizedX8Typeless = 46,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_X24TypelessG8UInt = 47,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8Typeless = 48,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8UIntNormalized = 49,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8UInt = 50,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8IntNormalized = 51,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8Int = 52,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16Typeless = 53,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16Float = 54,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D16UIntNormalized = 55,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16UIntNormalized = 56,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16UInt = 57,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16IntNormalized = 58,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16Int = 59,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8Typeless = 60,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8UIntNormalized = 61,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8UInt = 62,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8IntNormalized = 63,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8Int = 64,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_A8UIntNormalized = 65,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R1UIntNormalized = 66,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R9G9B9E5SharedExponent = 67,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8G8UIntNormalized = 68,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_G8R8G8B8UIntNormalized = 69,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC1Typeless = 70,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC1UIntNormalized = 71,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC1UIntNormalizedSrgb = 72,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC2Typeless = 73,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC2UIntNormalized = 74,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC2UIntNormalizedSrgb = 75,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC3Typeless = 76,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC3UIntNormalized = 77,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC3UIntNormalizedSrgb = 78,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC4Typeless = 79,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC4UIntNormalized = 80,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC4IntNormalized = 81,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC5Typeless = 82,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC5UIntNormalized = 83,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC5IntNormalized = 84,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B5G6R5UIntNormalized = 85,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B5G5R5A1UIntNormalized = 86,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8A8UIntNormalized = 87,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8X8UIntNormalized = 88,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10XRBiasA2UIntNormalized = 89,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8A8Typeless = 90,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8A8UIntNormalizedSrgb = 91,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8X8Typeless = 92,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8X8UIntNormalizedSrgb = 93,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC6HTypeless = 94,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC6H16UnsignedFloat = 95,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC6H16Float = 96,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC7Typeless = 97,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC7UIntNormalized = 98,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC7UIntNormalizedSrgb = 99,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Ayuv = 100,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y410 = 101,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y416 = 102,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_NV12 = 103,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P010 = 104,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P016 = 105,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Opaque420 = 106,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Yuy2 = 107,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y210 = 108,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y216 = 109,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_NV11 = 110,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_AI44 = 111,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_IA44 = 112,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P8 = 113,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_A8P8 = 114,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B4G4R4A4UIntNormalized = 115,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P208 = 130,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_V208 = 131,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_V408 = 132,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_SamplerFeedbackMinMipOpaque = 189,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_SamplerFeedbackMipRegionUsedOpaque = 190,
} _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;
typedef enum _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode
{
    _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode_Premultiplied = 0,
    _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode_Straight = 1,
    _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode_Ignore = 2,
} _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode;
typedef enum _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat
{
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Unknown = 0,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Rgba16 = 12,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Rgba8 = 30,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Gray16 = 57,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Gray8 = 62,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Bgra8 = 87,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Nv12 = 103,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_P010 = 104,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Yuy2 = 107,
} _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat;
typedef enum _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding
{
    _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding_Utf8 = 0,
    _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding_Utf16LE = 1,
    _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding_Utf16BE = 2,
} _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding;
typedef enum _q_CWindows_CSystem_CProfile_CSystemIdentificationSource
{
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_None = 0,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Tpm = 1,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Uefi = 2,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Registry = 3,
} _q_CWindows_CSystem_CProfile_CSystemIdentificationSource;
typedef enum _q_CWindows_CSystem_CVirtualKey
{
    _q_CWindows_CSystem_CVirtualKey_None = 0,
    _q_CWindows_CSystem_CVirtualKey_LeftButton = 1,
    _q_CWindows_CSystem_CVirtualKey_RightButton = 2,
    _q_CWindows_CSystem_CVirtualKey_Cancel = 3,
    _q_CWindows_CSystem_CVirtualKey_MiddleButton = 4,
    _q_CWindows_CSystem_CVirtualKey_XButton1 = 5,
    _q_CWindows_CSystem_CVirtualKey_XButton2 = 6,
    _q_CWindows_CSystem_CVirtualKey_Back = 8,
    _q_CWindows_CSystem_CVirtualKey_Tab = 9,
    _q_CWindows_CSystem_CVirtualKey_Clear = 12,
    _q_CWindows_CSystem_CVirtualKey_Enter = 13,
    _q_CWindows_CSystem_CVirtualKey_Shift = 16,
    _q_CWindows_CSystem_CVirtualKey_Control = 17,
    _q_CWindows_CSystem_CVirtualKey_Menu = 18,
    _q_CWindows_CSystem_CVirtualKey_Pause = 19,
    _q_CWindows_CSystem_CVirtualKey_CapitalLock = 20,
    _q_CWindows_CSystem_CVirtualKey_Kana = 21,
    _q_CWindows_CSystem_CVirtualKey_Hangul = 21,
    _q_CWindows_CSystem_CVirtualKey_ImeOn = 22,
    _q_CWindows_CSystem_CVirtualKey_Junja = 23,
    _q_CWindows_CSystem_CVirtualKey_Final = 24,
    _q_CWindows_CSystem_CVirtualKey_Hanja = 25,
    _q_CWindows_CSystem_CVirtualKey_Kanji = 25,
    _q_CWindows_CSystem_CVirtualKey_ImeOff = 26,
    _q_CWindows_CSystem_CVirtualKey_Escape = 27,
    _q_CWindows_CSystem_CVirtualKey_Convert = 28,
    _q_CWindows_CSystem_CVirtualKey_NonConvert = 29,
    _q_CWindows_CSystem_CVirtualKey_Accept = 30,
    _q_CWindows_CSystem_CVirtualKey_ModeChange = 31,
    _q_CWindows_CSystem_CVirtualKey_Space = 32,
    _q_CWindows_CSystem_CVirtualKey_PageUp = 33,
    _q_CWindows_CSystem_CVirtualKey_PageDown = 34,
    _q_CWindows_CSystem_CVirtualKey_End = 35,
    _q_CWindows_CSystem_CVirtualKey_Home = 36,
    _q_CWindows_CSystem_CVirtualKey_Left = 37,
    _q_CWindows_CSystem_CVirtualKey_Up = 38,
    _q_CWindows_CSystem_CVirtualKey_Right = 39,
    _q_CWindows_CSystem_CVirtualKey_Down = 40,
    _q_CWindows_CSystem_CVirtualKey_Select = 41,
    _q_CWindows_CSystem_CVirtualKey_Print = 42,
    _q_CWindows_CSystem_CVirtualKey_Execute = 43,
    _q_CWindows_CSystem_CVirtualKey_Snapshot = 44,
    _q_CWindows_CSystem_CVirtualKey_Insert = 45,
    _q_CWindows_CSystem_CVirtualKey_Delete = 46,
    _q_CWindows_CSystem_CVirtualKey_Help = 47,
    _q_CWindows_CSystem_CVirtualKey_Number0 = 48,
    _q_CWindows_CSystem_CVirtualKey_Number1 = 49,
    _q_CWindows_CSystem_CVirtualKey_Number2 = 50,
    _q_CWindows_CSystem_CVirtualKey_Number3 = 51,
    _q_CWindows_CSystem_CVirtualKey_Number4 = 52,
    _q_CWindows_CSystem_CVirtualKey_Number5 = 53,
    _q_CWindows_CSystem_CVirtualKey_Number6 = 54,
    _q_CWindows_CSystem_CVirtualKey_Number7 = 55,
    _q_CWindows_CSystem_CVirtualKey_Number8 = 56,
    _q_CWindows_CSystem_CVirtualKey_Number9 = 57,
    _q_CWindows_CSystem_CVirtualKey_A = 65,
    _q_CWindows_CSystem_CVirtualKey_B = 66,
    _q_CWindows_CSystem_CVirtualKey_C = 67,
    _q_CWindows_CSystem_CVirtualKey_D = 68,
    _q_CWindows_CSystem_CVirtualKey_E = 69,
    _q_CWindows_CSystem_CVirtualKey_F = 70,
    _q_CWindows_CSystem_CVirtualKey_G = 71,
    _q_CWindows_CSystem_CVirtualKey_H = 72,
    _q_CWindows_CSystem_CVirtualKey_I = 73,
    _q_CWindows_CSystem_CVirtualKey_J = 74,
    _q_CWindows_CSystem_CVirtualKey_K = 75,
    _q_CWindows_CSystem_CVirtualKey_L = 76,
    _q_CWindows_CSystem_CVirtualKey_M = 77,
    _q_CWindows_CSystem_CVirtualKey_N = 78,
    _q_CWindows_CSystem_CVirtualKey_O = 79,
    _q_CWindows_CSystem_CVirtualKey_P = 80,
    _q_CWindows_CSystem_CVirtualKey_Q = 81,
    _q_CWindows_CSystem_CVirtualKey_R = 82,
    _q_CWindows_CSystem_CVirtualKey_S = 83,
    _q_CWindows_CSystem_CVirtualKey_T = 84,
    _q_CWindows_CSystem_CVirtualKey_U = 85,
    _q_CWindows_CSystem_CVirtualKey_V = 86,
    _q_CWindows_CSystem_CVirtualKey_W = 87,
    _q_CWindows_CSystem_CVirtualKey_X = 88,
    _q_CWindows_CSystem_CVirtualKey_Y = 89,
    _q_CWindows_CSystem_CVirtualKey_Z = 90,
    _q_CWindows_CSystem_CVirtualKey_LeftWindows = 91,
    _q_CWindows_CSystem_CVirtualKey_RightWindows = 92,
    _q_CWindows_CSystem_CVirtualKey_Application = 93,
    _q_CWindows_CSystem_CVirtualKey_Sleep = 95,
    _q_CWindows_CSystem_CVirtualKey_NumberPad0 = 96,
    _q_CWindows_CSystem_CVirtualKey_NumberPad1 = 97,
    _q_CWindows_CSystem_CVirtualKey_NumberPad2 = 98,
    _q_CWindows_CSystem_CVirtualKey_NumberPad3 = 99,
    _q_CWindows_CSystem_CVirtualKey_NumberPad4 = 100,
    _q_CWindows_CSystem_CVirtualKey_NumberPad5 = 101,
    _q_CWindows_CSystem_CVirtualKey_NumberPad6 = 102,
    _q_CWindows_CSystem_CVirtualKey_NumberPad7 = 103,
    _q_CWindows_CSystem_CVirtualKey_NumberPad8 = 104,
    _q_CWindows_CSystem_CVirtualKey_NumberPad9 = 105,
    _q_CWindows_CSystem_CVirtualKey_Multiply = 106,
    _q_CWindows_CSystem_CVirtualKey_Add = 107,
    _q_CWindows_CSystem_CVirtualKey_Separator = 108,
    _q_CWindows_CSystem_CVirtualKey_Subtract = 109,
    _q_CWindows_CSystem_CVirtualKey_Decimal = 110,
    _q_CWindows_CSystem_CVirtualKey_Divide = 111,
    _q_CWindows_CSystem_CVirtualKey_F1 = 112,
    _q_CWindows_CSystem_CVirtualKey_F2 = 113,
    _q_CWindows_CSystem_CVirtualKey_F3 = 114,
    _q_CWindows_CSystem_CVirtualKey_F4 = 115,
    _q_CWindows_CSystem_CVirtualKey_F5 = 116,
    _q_CWindows_CSystem_CVirtualKey_F6 = 117,
    _q_CWindows_CSystem_CVirtualKey_F7 = 118,
    _q_CWindows_CSystem_CVirtualKey_F8 = 119,
    _q_CWindows_CSystem_CVirtualKey_F9 = 120,
    _q_CWindows_CSystem_CVirtualKey_F10 = 121,
    _q_CWindows_CSystem_CVirtualKey_F11 = 122,
    _q_CWindows_CSystem_CVirtualKey_F12 = 123,
    _q_CWindows_CSystem_CVirtualKey_F13 = 124,
    _q_CWindows_CSystem_CVirtualKey_F14 = 125,
    _q_CWindows_CSystem_CVirtualKey_F15 = 126,
    _q_CWindows_CSystem_CVirtualKey_F16 = 127,
    _q_CWindows_CSystem_CVirtualKey_F17 = 128,
    _q_CWindows_CSystem_CVirtualKey_F18 = 129,
    _q_CWindows_CSystem_CVirtualKey_F19 = 130,
    _q_CWindows_CSystem_CVirtualKey_F20 = 131,
    _q_CWindows_CSystem_CVirtualKey_F21 = 132,
    _q_CWindows_CSystem_CVirtualKey_F22 = 133,
    _q_CWindows_CSystem_CVirtualKey_F23 = 134,
    _q_CWindows_CSystem_CVirtualKey_F24 = 135,
    _q_CWindows_CSystem_CVirtualKey_NavigationView = 136,
    _q_CWindows_CSystem_CVirtualKey_NavigationMenu = 137,
    _q_CWindows_CSystem_CVirtualKey_NavigationUp = 138,
    _q_CWindows_CSystem_CVirtualKey_NavigationDown = 139,
    _q_CWindows_CSystem_CVirtualKey_NavigationLeft = 140,
    _q_CWindows_CSystem_CVirtualKey_NavigationRight = 141,
    _q_CWindows_CSystem_CVirtualKey_NavigationAccept = 142,
    _q_CWindows_CSystem_CVirtualKey_NavigationCancel = 143,
    _q_CWindows_CSystem_CVirtualKey_NumberKeyLock = 144,
    _q_CWindows_CSystem_CVirtualKey_Scroll = 145,
    _q_CWindows_CSystem_CVirtualKey_LeftShift = 160,
    _q_CWindows_CSystem_CVirtualKey_RightShift = 161,
    _q_CWindows_CSystem_CVirtualKey_LeftControl = 162,
    _q_CWindows_CSystem_CVirtualKey_RightControl = 163,
    _q_CWindows_CSystem_CVirtualKey_LeftMenu = 164,
    _q_CWindows_CSystem_CVirtualKey_RightMenu = 165,
    _q_CWindows_CSystem_CVirtualKey_GoBack = 166,
    _q_CWindows_CSystem_CVirtualKey_GoForward = 167,
    _q_CWindows_CSystem_CVirtualKey_Refresh = 168,
    _q_CWindows_CSystem_CVirtualKey_Stop = 169,
    _q_CWindows_CSystem_CVirtualKey_Search = 170,
    _q_CWindows_CSystem_CVirtualKey_Favorites = 171,
    _q_CWindows_CSystem_CVirtualKey_GoHome = 172,
    _q_CWindows_CSystem_CVirtualKey_GamepadA = 195,
    _q_CWindows_CSystem_CVirtualKey_GamepadB = 196,
    _q_CWindows_CSystem_CVirtualKey_GamepadX = 197,
    _q_CWindows_CSystem_CVirtualKey_GamepadY = 198,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightShoulder = 199,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftShoulder = 200,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftTrigger = 201,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightTrigger = 202,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadUp = 203,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadDown = 204,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadLeft = 205,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadRight = 206,
    _q_CWindows_CSystem_CVirtualKey_GamepadMenu = 207,
    _q_CWindows_CSystem_CVirtualKey_GamepadView = 208,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickButton = 209,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickButton = 210,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickUp = 211,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickDown = 212,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickRight = 213,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickLeft = 214,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickUp = 215,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickDown = 216,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickRight = 217,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickLeft = 218,
} _q_CWindows_CSystem_CVirtualKey;
typedef enum _q_CWindows_CUI_CNotifications_CNotificationMirroring
{
    _q_CWindows_CUI_CNotifications_CNotificationMirroring_Allowed = 0,
    _q_CWindows_CUI_CNotifications_CNotificationMirroring_Disabled = 1,
} _q_CWindows_CUI_CNotifications_CNotificationMirroring;
typedef enum _q_CWindows_CUI_CNotifications_CNotificationSetting
{
    _q_CWindows_CUI_CNotifications_CNotificationSetting_Enabled = 0,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledForApplication = 1,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledForUser = 2,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledByGroupPolicy = 3,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledByManifest = 4,
} _q_CWindows_CUI_CNotifications_CNotificationSetting;
typedef enum _q_CWindows_CUI_CNotifications_CNotificationUpdateResult
{
    _q_CWindows_CUI_CNotifications_CNotificationUpdateResult_Succeeded = 0,
    _q_CWindows_CUI_CNotifications_CNotificationUpdateResult_Failed = 1,
    _q_CWindows_CUI_CNotifications_CNotificationUpdateResult_NotificationNotFound = 2,
} _q_CWindows_CUI_CNotifications_CNotificationUpdateResult;
typedef enum _q_CWindows_CUI_CNotifications_CToastNotificationPriority
{
    _q_CWindows_CUI_CNotifications_CToastNotificationPriority_Default = 0,
    _q_CWindows_CUI_CNotifications_CToastNotificationPriority_High = 1,
} _q_CWindows_CUI_CNotifications_CToastNotificationPriority;
typedef enum _q_CWindows_CUI_CNotifications_CToastTemplateType
{
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText01 = 0,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText02 = 1,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText03 = 2,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText04 = 3,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText01 = 4,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText02 = 5,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText03 = 6,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText04 = 7,
} _q_CWindows_CUI_CNotifications_CToastTemplateType;
typedef enum _q_CWindows_CUI_CText_CFontStretch
{
    _q_CWindows_CUI_CText_CFontStretch_Undefined = 0,
    _q_CWindows_CUI_CText_CFontStretch_UltraCondensed = 1,
    _q_CWindows_CUI_CText_CFontStretch_ExtraCondensed = 2,
    _q_CWindows_CUI_CText_CFontStretch_Condensed = 3,
    _q_CWindows_CUI_CText_CFontStretch_SemiCondensed = 4,
    _q_CWindows_CUI_CText_CFontStretch_Normal = 5,
    _q_CWindows_CUI_CText_CFontStretch_SemiExpanded = 6,
    _q_CWindows_CUI_CText_CFontStretch_Expanded = 7,
    _q_CWindows_CUI_CText_CFontStretch_ExtraExpanded = 8,
    _q_CWindows_CUI_CText_CFontStretch_UltraExpanded = 9,
} _q_CWindows_CUI_CText_CFontStretch;
typedef enum _q_CWindows_CUI_CText_CFontStyle
{
    _q_CWindows_CUI_CText_CFontStyle_Normal = 0,
    _q_CWindows_CUI_CText_CFontStyle_Oblique = 1,
    _q_CWindows_CUI_CText_CFontStyle_Italic = 2,
} _q_CWindows_CUI_CText_CFontStyle;
typedef enum _q_CWindows_CUI_CText_CTextDecorations
{
    _q_CWindows_CUI_CText_CTextDecorations_None = 0,
    _q_CWindows_CUI_CText_CTextDecorations_Underline = 1,
    _q_CWindows_CUI_CText_CTextDecorations_Strikethrough = 2,
} _q_CWindows_CUI_CText_CTextDecorations;
typedef enum _q_CWindows_CUI_CXaml_CInterop_CTypeKind
{
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind_Primitive = 0,
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind_Metadata = 1,
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind_Custom = 2,
} _q_CWindows_CUI_CXaml_CInterop_CTypeKind;
typedef enum _q_CWindows_CWeb_CHttp_CHttpProgressStage
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_DetectingProxy = 10,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ResolvingName = 20,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ConnectingToServer = 30,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_NegotiatingSsl = 40,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingHeaders = 50,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingContent = 60,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_WaitingForResponse = 70,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingHeaders = 80,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingContent = 90,
} _q_CWindows_CWeb_CHttp_CHttpProgressStage;
typedef enum _q_CWindows_CWeb_CHttp_CHttpStatusCode
{
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Continue = 100,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SwitchingProtocols = 101,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Processing = 102,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Ok = 200,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Created = 201,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Accepted = 202,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NonAuthoritativeInformation = 203,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NoContent = 204,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ResetContent = 205,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PartialContent = 206,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultiStatus = 207,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_AlreadyReported = 208,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_IMUsed = 226,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultipleChoices = 300,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MovedPermanently = 301,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Found = 302,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SeeOther = 303,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotModified = 304,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UseProxy = 305,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TemporaryRedirect = 307,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PermanentRedirect = 308,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadRequest = 400,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Unauthorized = 401,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PaymentRequired = 402,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Forbidden = 403,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotFound = 404,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MethodNotAllowed = 405,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotAcceptable = 406,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ProxyAuthenticationRequired = 407,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestTimeout = 408,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Conflict = 409,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Gone = 410,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LengthRequired = 411,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionFailed = 412,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestEntityTooLarge = 413,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestUriTooLong = 414,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnsupportedMediaType = 415,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestedRangeNotSatisfiable = 416,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ExpectationFailed = 417,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnprocessableEntity = 422,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Locked = 423,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_FailedDependency = 424,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UpgradeRequired = 426,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionRequired = 428,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TooManyRequests = 429,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestHeaderFieldsTooLarge = 431,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InternalServerError = 500,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotImplemented = 501,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadGateway = 502,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ServiceUnavailable = 503,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_GatewayTimeout = 504,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_HttpVersionNotSupported = 505,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_VariantAlsoNegotiates = 506,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InsufficientStorage = 507,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LoopDetected = 508,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotExtended = 510,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NetworkAuthenticationRequired = 511,
} _q_CWindows_CWeb_CHttp_CHttpStatusCode;
// forward decls for value types
typedef struct _q_CWindows_CFoundation_CDateTime _q_CWindows_CFoundation_CDateTime;
typedef struct _q_CWindows_CFoundation_CEventRegistrationToken _q_CWindows_CFoundation_CEventRegistrationToken;
typedef struct _q_CWindows_CFoundation_CHResult _q_CWindows_CFoundation_CHResult;
typedef struct _q_CWindows_CFoundation_CNumerics_CMatrix3x2 _q_CWindows_CFoundation_CNumerics_CMatrix3x2;
typedef struct _q_CWindows_CFoundation_CNumerics_CMatrix4x4 _q_CWindows_CFoundation_CNumerics_CMatrix4x4;
typedef struct _q_CWindows_CFoundation_CNumerics_CVector2 _q_CWindows_CFoundation_CNumerics_CVector2;
typedef struct _q_CWindows_CFoundation_CNumerics_CVector3 _q_CWindows_CFoundation_CNumerics_CVector3;
typedef struct _q_CWindows_CFoundation_CNumerics_CVector4 _q_CWindows_CFoundation_CNumerics_CVector4;
typedef struct _q_CWindows_CFoundation_CPoint _q_CWindows_CFoundation_CPoint;
typedef struct _q_CWindows_CFoundation_CRect _q_CWindows_CFoundation_CRect;
typedef struct _q_CWindows_CFoundation_CSize _q_CWindows_CFoundation_CSize;
typedef struct _q_CWindows_CFoundation_CTimeSpan _q_CWindows_CFoundation_CTimeSpan;
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription;
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription;
typedef struct _q_CWindows_CGraphics_CImaging_CBitmapSize _q_CWindows_CGraphics_CImaging_CBitmapSize;
typedef struct _q_CWindows_CUI_CColor _q_CWindows_CUI_CColor;
typedef struct _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus;
typedef struct _q_CWindows_CUI_CText_CFontWeight _q_CWindows_CUI_CText_CFontWeight;
typedef struct _q_CWindows_CUI_CXaml_CInterop_CTypeName _q_CWindows_CUI_CXaml_CInterop_CTypeName;
typedef struct _q_CWindows_CWeb_CHttp_CHttpProgress _q_CWindows_CWeb_CHttp_CHttpProgress;
// forward decls for interfaces
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlAttribute _q_CWindows_CData_CXml_CDom_CIXmlAttribute;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCDataSection _q_CWindows_CData_CXml_CDom_CIXmlCDataSection;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlComment _q_CWindows_CData_CXml_CDom_CIXmlComment;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocument _q_CWindows_CData_CXml_CDom_CIXmlDocument;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2 _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics _q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentType _q_CWindows_CData_CXml_CDom_CIXmlDocumentType;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlElement _q_CWindows_CData_CXml_CDom_CIXmlElement;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlEntityReference _q_CWindows_CData_CXml_CDom_CIXmlEntityReference;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNode _q_CWindows_CData_CXml_CDom_CIXmlNode;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeList _q_CWindows_CData_CXml_CDom_CIXmlNodeList;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSelector _q_CWindows_CData_CXml_CDom_CIXmlNodeSelector;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlText _q_CWindows_CData_CXml_CDom_CIXmlText;
typedef struct _q_CWindows_CFoundation_CIAsyncAction _q_CWindows_CFoundation_CIAsyncAction;
typedef struct _q_CWindows_CFoundation_CIAsyncInfo _q_CWindows_CFoundation_CIAsyncInfo;
typedef struct _q_CWindows_CFoundation_CIClosable _q_CWindows_CFoundation_CIClosable;
typedef struct _q_CWindows_CFoundation_CIStringable _q_CWindows_CFoundation_CIStringable;
typedef struct _q_CWindows_CFoundation_CIUriEscapeStatics _q_CWindows_CFoundation_CIUriEscapeStatics;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClass _q_CWindows_CFoundation_CIUriRuntimeClass;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory _q_CWindows_CFoundation_CIUriRuntimeClassFactory;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri;
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass;
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory;
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface;
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmap _q_CWindows_CGraphics_CImaging_CISoftwareBitmap;
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory;
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics;
typedef struct _q_CWindows_CStorage_CIStorageFile _q_CWindows_CStorage_CIStorageFile;
typedef struct _q_CWindows_CStorage_CStreams_CIBuffer _q_CWindows_CStorage_CStreams_CIBuffer;
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStream _q_CWindows_CStorage_CStreams_CIOutputStream;
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStream _q_CWindows_CStorage_CStreams_CIRandomAccessStream;
typedef struct _q_CWindows_CSystem_CIDispatcherQueue _q_CWindows_CSystem_CIDispatcherQueue;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueController _q_CWindows_CSystem_CIDispatcherQueueController;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics _q_CWindows_CSystem_CIDispatcherQueueControllerStatics;
typedef struct _q_CWindows_CSystem_CIUser _q_CWindows_CSystem_CIUser;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics;
typedef struct _q_CWindows_CUI_CCore_CICoreDispatcher _q_CWindows_CUI_CCore_CICoreDispatcher;
typedef struct _q_CWindows_CUI_CCore_CICoreWindow _q_CWindows_CUI_CCore_CICoreWindow;
typedef struct _q_CWindows_CUI_CNotifications_CINotificationData _q_CWindows_CUI_CNotifications_CINotificationData;
typedef struct _q_CWindows_CUI_CNotifications_CINotificationDataFactory _q_CWindows_CUI_CNotifications_CINotificationDataFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotification _q_CWindows_CUI_CNotifications_CIScheduledToastNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs;
typedef struct _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs;
typedef struct _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification _q_CWindows_CUI_CNotifications_CIToastNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification2 _q_CWindows_CUI_CNotifications_CIToastNotification2;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification3 _q_CWindows_CUI_CNotifications_CIToastNotification3;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification4 _q_CWindows_CUI_CNotifications_CIToastNotification4;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification6 _q_CWindows_CUI_CNotifications_CIToastNotification6;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory _q_CWindows_CUI_CNotifications_CIToastNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationHistory _q_CWindows_CUI_CNotifications_CIToastNotificationHistory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2 _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4 _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5 _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier _q_CWindows_CUI_CNotifications_CIToastNotifier;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier2 _q_CWindows_CUI_CNotifications_CIToastNotifier2;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier3 _q_CWindows_CUI_CNotifications_CIToastNotifier3;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClient _q_CWindows_CWeb_CHttp_CIHttpClient;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory _q_CWindows_CWeb_CHttp_CIHttpClientFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContent _q_CWindows_CWeb_CHttp_CIHttpContent;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage _q_CWindows_CWeb_CHttp_CIHttpResponseMessage;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory;
// forward decls for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean _cg_CWindows_CFoundation_IAsyncOperation_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64 _cg_CWindows_CFoundation_IReference_1_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable _cg_CWindows_CFoundation_IEventHandler_1_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING;
// definition of structs for value types
struct _q_CWindows_CFoundation_CDateTime
{
    INT64 UniversalTime;
};
struct _q_CWindows_CFoundation_CEventRegistrationToken
{
    INT64 Value;
};
struct _q_CWindows_CFoundation_CHResult
{
    INT32 Value;
};
struct _q_CWindows_CFoundation_CNumerics_CMatrix3x2
{
    FLOAT M11;
    FLOAT M12;
    FLOAT M21;
    FLOAT M22;
    FLOAT M31;
    FLOAT M32;
};
struct _q_CWindows_CFoundation_CNumerics_CMatrix4x4
{
    FLOAT M11;
    FLOAT M12;
    FLOAT M13;
    FLOAT M14;
    FLOAT M21;
    FLOAT M22;
    FLOAT M23;
    FLOAT M24;
    FLOAT M31;
    FLOAT M32;
    FLOAT M33;
    FLOAT M34;
    FLOAT M41;
    FLOAT M42;
    FLOAT M43;
    FLOAT M44;
};
struct _q_CWindows_CFoundation_CNumerics_CVector2
{
    FLOAT X;
    FLOAT Y;
};
struct _q_CWindows_CFoundation_CNumerics_CVector3
{
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
};
struct _q_CWindows_CFoundation_CNumerics_CVector4
{
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
    FLOAT W;
};
struct _q_CWindows_CFoundation_CPoint
{
    FLOAT X;
    FLOAT Y;
};
struct _q_CWindows_CFoundation_CRect
{
    FLOAT X;
    FLOAT Y;
    FLOAT Width;
    FLOAT Height;
};
struct _q_CWindows_CFoundation_CSize
{
    FLOAT Width;
    FLOAT Height;
};
struct _q_CWindows_CFoundation_CTimeSpan
{
    INT64 Duration;
};
struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription
{
    INT32 Count;
    INT32 Quality;
};
struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription
{
    INT32 Width;
    INT32 Height;
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat Format;
    _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription MultisampleDescription;
};
struct _q_CWindows_CGraphics_CImaging_CBitmapSize
{
    UINT32 Width;
    UINT32 Height;
};
struct _q_CWindows_CUI_CColor
{
    UINT8 A;
    UINT8 R;
    UINT8 G;
    UINT8 B;
};
struct _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus
{
    UINT32 RepeatCount;
    UINT32 ScanCode;
    boolean IsExtendedKey;
    boolean IsMenuKeyDown;
    boolean WasKeyDown;
    boolean IsKeyReleased;
};
struct _q_CWindows_CUI_CText_CFontWeight
{
    UINT16 Weight;
};
struct _q_CWindows_CUI_CXaml_CInterop_CTypeName
{
    HSTRING Name;
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind Kind;
};
struct _q_CWindows_CWeb_CHttp_CHttpProgress
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage Stage;
    UINT64 BytesSent;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToSend;
    UINT64 BytesReceived;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToReceive;
    UINT32 Retries;
};
// definitions for delegates
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* pThis, _q_CWindows_CFoundation_CIAsyncAction* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl;
struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler
{
    _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl* lpVtbl;
};
// definitions for interface types
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, TrustLevel* trustLevel);
    void* unneeded_get_Name;
    void* unneeded_get_Specified;
    void* unneeded_get_Value;
    void* unneeded_put_Value;
} _q_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlAttribute
{
    _q_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlCDataSection
{
    _q_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCommentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlCommentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlComment
{
    _q_CWindows_CData_CXml_CDom_CIXmlCommentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Doctype)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocumentType** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Implementation)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DocumentElement)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateElement)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING tagName, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateDocumentFragment)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateTextNode)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlText** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateComment)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlComment** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateProcessingInstruction)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING target, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateAttribute)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateEntityReference)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlEntityReference** __pret);
    HRESULT (STDMETHODCALLTYPE* GetElementsByTagName)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING tagName, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateCDataSection)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlCDataSection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DocumentUri)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateAttributeNS)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, IInspectable* namespaceUri, HSTRING qualifiedName, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateElementNS)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, IInspectable* namespaceUri, HSTRING qualifiedName, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* GetElementById)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING elementId, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* ImportNode)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* node, boolean deep, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocument
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadXml)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, HSTRING xml);
    HRESULT (STDMETHODCALLTYPE* LoadXmlWithSettings)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, HSTRING xml, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings);
    HRESULT (STDMETHODCALLTYPE* SaveToFileAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadXmlFromBuffer)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer);
    HRESULT (STDMETHODCALLTYPE* LoadXmlFromBufferWithSettings)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadFromUriAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromUriWithSettingsAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileWithSettingsAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, TrustLevel* trustLevel);
    void* unneeded_get_Name;
    void* unneeded_get_Entities;
    void* unneeded_get_Notations;
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentType
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, TrustLevel* trustLevel);
    void* unneeded_HasFeature;
} _q_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation
{
    _q_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, TrustLevel* trustLevel);
    void* unneeded_get_TagName;
    void* unneeded_GetAttribute;
    void* unneeded_SetAttribute;
    void* unneeded_RemoveAttribute;
    void* unneeded_GetAttributeNode;
    void* unneeded_SetAttributeNode;
    void* unneeded_RemoveAttributeNode;
    void* unneeded_GetElementsByTagName;
    void* unneeded_SetAttributeNS;
    void* unneeded_GetAttributeNS;
    void* unneeded_RemoveAttributeNS;
    void* unneeded_SetAttributeNodeNS;
    void* unneeded_GetAttributeNodeNS;
} _q_CWindows_CData_CXml_CDom_CIXmlElementVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlElement
{
    _q_CWindows_CData_CXml_CDom_CIXmlElementVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlEntityReference
{
    _q_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, TrustLevel* trustLevel);
    void* unneeded_get_MaxElementDepth;
    void* unneeded_put_MaxElementDepth;
    void* unneeded_get_ProhibitDtd;
    void* unneeded_put_ProhibitDtd;
    void* unneeded_get_ResolveExternals;
    void* unneeded_put_ResolveExternals;
    void* unneeded_get_ValidateOnParse;
    void* unneeded_put_ValidateOnParse;
    void* unneeded_get_ElementContentWhiteSpace;
    void* unneeded_put_ElementContentWhiteSpace;
} _q_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings
{
    _q_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, TrustLevel* trustLevel);
    void* unneeded_get_Length;
    void* unneeded_Item;
    void* unneeded_GetNamedItem;
    void* unneeded_SetNamedItem;
    void* unneeded_RemoveNamedItem;
    void* unneeded_GetNamedItemNS;
    void* unneeded_RemoveNamedItemNS;
    void* unneeded_SetNamedItemNS;
} _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap
{
    _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NodeValue)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* put_NodeValue)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_NodeType)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CNodeType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NodeName)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ParentNode)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChildNodes)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FirstChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LastChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PreviousSibling)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NextSibling)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** __pret);
    HRESULT (STDMETHODCALLTYPE* HasChildNodes)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OwnerDocument)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* InsertBefore)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* newChild, _q_CWindows_CData_CXml_CDom_CIXmlNode* referenceChild, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* newChild, _q_CWindows_CData_CXml_CDom_CIXmlNode* referenceChild, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* childNode, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* newChild, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* CloneNode)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, boolean deep, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NamespaceUri)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalName)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Prefix)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* Normalize)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis);
    HRESULT (STDMETHODCALLTYPE* put_Prefix)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable* value);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNode
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, TrustLevel* trustLevel);
    void* unneeded_get_Length;
    void* unneeded_Item;
} _q_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNodeList
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SelectSingleNode)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* SelectNodes)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* SelectSingleNodeNS)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, IInspectable* namespaces, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* SelectNodesNS)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, IInspectable* namespaces, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSelector
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetXml)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InnerText)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_InnerText)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* pThis, HSTRING value);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, TrustLevel* trustLevel);
    void* unneeded_get_Target;
    void* unneeded_get_Data;
    void* unneeded_put_Data;
} _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction
{
    _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlTextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlText* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlText* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, TrustLevel* trustLevel);
    void* unneeded_SplitText;
} _q_CWindows_CData_CXml_CDom_CIXmlTextVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlText
{
    _q_CWindows_CData_CXml_CDom_CIXmlTextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncActionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncAction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncAction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncAction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncAction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_q_CWindows_CFoundation_CIAsyncAction* pThis);
} _q_CWindows_CFoundation_CIAsyncActionVtbl;
struct _q_CWindows_CFoundation_CIAsyncAction
{
    _q_CWindows_CFoundation_CIAsyncActionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CAsyncStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* Cancel)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
} _q_CWindows_CFoundation_CIAsyncInfoVtbl;
struct _q_CWindows_CFoundation_CIAsyncInfo
{
    _q_CWindows_CFoundation_CIAsyncInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIClosableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIClosable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIClosable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIClosable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIClosable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIClosable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIClosable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CFoundation_CIClosable* pThis);
} _q_CWindows_CFoundation_CIClosableVtbl;
struct _q_CWindows_CFoundation_CIClosable
{
    _q_CWindows_CFoundation_CIClosableVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIStringableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIStringable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIStringable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIStringable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIStringable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIStringable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIStringable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ToString)(_q_CWindows_CFoundation_CIStringable* pThis, HSTRING* __pret);
} _q_CWindows_CFoundation_CIStringableVtbl;
struct _q_CWindows_CFoundation_CIStringable
{
    _q_CWindows_CFoundation_CIStringableVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriEscapeStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriEscapeStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriEscapeStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* UnescapeComponent)(_q_CWindows_CFoundation_CIUriEscapeStatics* pThis, HSTRING toUnescape, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* EscapeComponent)(_q_CWindows_CFoundation_CIUriEscapeStatics* pThis, HSTRING toEscape, HSTRING* __pret);
} _q_CWindows_CFoundation_CIUriEscapeStaticsVtbl;
struct _q_CWindows_CFoundation_CIUriEscapeStatics
{
    _q_CWindows_CFoundation_CIUriEscapeStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Domain)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Extension)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Fragment)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Host)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Password)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Query)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_QueryParsed)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RawUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SchemeName)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Port)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Suspicious)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* Equals)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* pUri, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* CombineUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING relativeUri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClass
{
    _q_CWindows_CFoundation_CIUriRuntimeClassVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING uri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithRelativeUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING baseUri, HSTRING relativeUri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory
{
    _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteCanonicalUri)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayIri)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* pThis, HSTRING* __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri
{
    _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, TrustLevel* trustLevel);
    void* unneeded_GetFirstValueByName;
} _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl;
struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass
{
    _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWwwFormUrlDecoder)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* pThis, HSTRING query, _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl;
struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory
{
    _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Description)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* pThis, _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription* __pret);
} _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl;
struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface
{
    _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, TrustLevel* trustLevel);
    void* unneeded_get_BitmapPixelFormat;
    void* unneeded_get_BitmapAlphaMode;
    void* unneeded_get_PixelWidth;
    void* unneeded_get_PixelHeight;
    void* unneeded_get_IsReadOnly;
    void* unneeded_put_DpiX;
    void* unneeded_get_DpiX;
    void* unneeded_put_DpiY;
    void* unneeded_get_DpiY;
    void* unneeded_LockBuffer;
    void* unneeded_CopyTo;
    void* unneeded_CopyFromBuffer;
    void* unneeded_CopyToBuffer;
    void* unneeded_GetReadOnlyView;
} _q_CWindows_CGraphics_CImaging_CISoftwareBitmapVtbl;
struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmap
{
    _q_CWindows_CGraphics_CImaging_CISoftwareBitmapVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* pThis, _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat format, INT32 width, INT32 height, _q_CWindows_CGraphics_CImaging_CISoftwareBitmap** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithAlpha)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* pThis, _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat format, INT32 width, INT32 height, _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode alpha, _q_CWindows_CGraphics_CImaging_CISoftwareBitmap** __pret);
} _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactoryVtbl;
struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory
{
    _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Compare)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* object1, _q_CWindows_CStorage_CStreams_CIBuffer* object2, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GenerateRandom)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, UINT32 length, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* GenerateRandomNumber)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromByteArray)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, UINT32 valueLength, UINT8* value, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyToByteArray)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, UINT32* valueLength, UINT8** value);
    HRESULT (STDMETHODCALLTYPE* DecodeFromHexString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, HSTRING value, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* EncodeToHexString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* DecodeFromBase64String)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, HSTRING value, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* EncodeToBase64String)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* ConvertStringToBinary)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, HSTRING value, _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding encoding, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* ConvertBinaryToString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding encoding, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
} _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl;
struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics
{
    _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFile* This, TrustLevel* trustLevel);
    void* unneeded_get_FileType;
    void* unneeded_get_ContentType;
    void* unneeded_OpenAsync;
    void* unneeded_OpenTransactedWriteAsync;
    void* unneeded_CopyOverloadDefaultNameAndOptions;
    void* unneeded_CopyOverloadDefaultOptions;
    void* unneeded_CopyOverload;
    void* unneeded_CopyAndReplaceAsync;
    void* unneeded_MoveOverloadDefaultNameAndOptions;
    void* unneeded_MoveOverloadDefaultOptions;
    void* unneeded_MoveOverload;
    void* unneeded_MoveAndReplaceAsync;
} _q_CWindows_CStorage_CIStorageFileVtbl;
struct _q_CWindows_CStorage_CIStorageFile
{
    _q_CWindows_CStorage_CIStorageFileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIBuffer* This, TrustLevel* trustLevel);
    void* unneeded_get_Capacity;
    void* unneeded_get_Length;
    void* unneeded_put_Length;
} _q_CWindows_CStorage_CStreams_CIBufferVtbl;
struct _q_CWindows_CStorage_CStreams_CIBuffer
{
    _q_CWindows_CStorage_CStreams_CIBufferVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, TrustLevel* trustLevel);
    void* unneeded_WriteAsync;
    HRESULT (STDMETHODCALLTYPE* FlushAsync)(_q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
} _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIOutputStream
{
    _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, TrustLevel* trustLevel);
    void* unneeded_get_Size;
    void* unneeded_put_Size;
    void* unneeded_GetInputStreamAt;
    void* unneeded_GetOutputStreamAt;
    void* unneeded_get_Position;
    void* unneeded_Seek;
    void* unneeded_CloneStream;
    void* unneeded_get_CanRead;
    void* unneeded_get_CanWrite;
} _q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIRandomAccessStream
{
    _q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueue* This, TrustLevel* trustLevel);
    void* unneeded_CreateTimer;
    void* unneeded_TryEnqueue;
    void* unneeded_TryEnqueueWithPriority;
    void* unneeded_add_ShutdownStarting;
    void* unneeded_remove_ShutdownStarting;
    void* unneeded_add_ShutdownCompleted;
    void* unneeded_remove_ShutdownCompleted;
} _q_CWindows_CSystem_CIDispatcherQueueVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueue
{
    _q_CWindows_CSystem_CIDispatcherQueueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueController* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueController* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueController* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueController* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(_q_CWindows_CSystem_CIDispatcherQueueController* pThis, _q_CWindows_CSystem_CIDispatcherQueue** __pret);
    HRESULT (STDMETHODCALLTYPE* ShutdownQueueAsync)(_q_CWindows_CSystem_CIDispatcherQueueController* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueController
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateOnDedicatedThread)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* pThis, _q_CWindows_CSystem_CIDispatcherQueueController** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIUser* This, TrustLevel* trustLevel);
    void* unneeded_get_NonRoamableId;
    void* unneeded_get_AuthenticationStatus;
    void* unneeded_get_Type;
    void* unneeded_GetPropertyAsync;
    void* unneeded_GetPropertiesAsync;
    void* unneeded_GetPictureAsync;
} _q_CWindows_CSystem_CIUserVtbl;
struct _q_CWindows_CSystem_CIUser
{
    _q_CWindows_CSystem_CIUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CSystem_CProfile_CSystemIdentificationSource* __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForPublisher)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForUser)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CCore_CICoreDispatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CCore_CICoreDispatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CCore_CICoreDispatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, TrustLevel* trustLevel);
    void* unneeded_get_HasThreadAccess;
    void* unneeded_ProcessEvents;
    void* unneeded_RunAsync;
    void* unneeded_RunIdleAsync;
} _q_CWindows_CUI_CCore_CICoreDispatcherVtbl;
struct _q_CWindows_CUI_CCore_CICoreDispatcher
{
    _q_CWindows_CUI_CCore_CICoreDispatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CCore_CICoreWindowVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CCore_CICoreWindow* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CCore_CICoreWindow* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CCore_CICoreWindow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CCore_CICoreWindow* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CCore_CICoreWindow* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CCore_CICoreWindow* This, TrustLevel* trustLevel);
    void* unneeded_get_AutomationHostProvider;
    void* unneeded_get_Bounds;
    void* unneeded_get_CustomProperties;
    void* unneeded_get_Dispatcher;
    void* unneeded_get_FlowDirection;
    void* unneeded_put_FlowDirection;
    void* unneeded_get_IsInputEnabled;
    void* unneeded_put_IsInputEnabled;
    void* unneeded_get_PointerCursor;
    void* unneeded_put_PointerCursor;
    void* unneeded_get_PointerPosition;
    void* unneeded_get_Visible;
    void* unneeded_Activate;
    void* unneeded_Close;
    void* unneeded_GetAsyncKeyState;
    void* unneeded_GetKeyState;
    void* unneeded_ReleasePointerCapture;
    void* unneeded_SetPointerCapture;
    void* unneeded_add_Activated;
    void* unneeded_remove_Activated;
    void* unneeded_add_AutomationProviderRequested;
    void* unneeded_remove_AutomationProviderRequested;
    void* unneeded_add_CharacterReceived;
    void* unneeded_remove_CharacterReceived;
    void* unneeded_add_Closed;
    void* unneeded_remove_Closed;
    void* unneeded_add_InputEnabled;
    void* unneeded_remove_InputEnabled;
    void* unneeded_add_KeyDown;
    void* unneeded_remove_KeyDown;
    void* unneeded_add_KeyUp;
    void* unneeded_remove_KeyUp;
    void* unneeded_add_PointerCaptureLost;
    void* unneeded_remove_PointerCaptureLost;
    void* unneeded_add_PointerEntered;
    void* unneeded_remove_PointerEntered;
    void* unneeded_add_PointerExited;
    void* unneeded_remove_PointerExited;
    void* unneeded_add_PointerMoved;
    void* unneeded_remove_PointerMoved;
    void* unneeded_add_PointerPressed;
    void* unneeded_remove_PointerPressed;
    void* unneeded_add_PointerReleased;
    void* unneeded_remove_PointerReleased;
    void* unneeded_add_TouchHitTesting;
    void* unneeded_remove_TouchHitTesting;
    void* unneeded_add_PointerWheelChanged;
    void* unneeded_remove_PointerWheelChanged;
    void* unneeded_add_SizeChanged;
    void* unneeded_remove_SizeChanged;
    void* unneeded_add_VisibilityChanged;
    void* unneeded_remove_VisibilityChanged;
} _q_CWindows_CUI_CCore_CICoreWindowVtbl;
struct _q_CWindows_CUI_CCore_CICoreWindow
{
    _q_CWindows_CUI_CCore_CICoreWindowVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CINotificationDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CINotificationData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CINotificationData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CINotificationData* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CINotificationData* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CINotificationData* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CINotificationData* This, TrustLevel* trustLevel);
    void* unneeded_get_Values;
    void* unneeded_get_SequenceNumber;
    void* unneeded_put_SequenceNumber;
} _q_CWindows_CUI_CNotifications_CINotificationDataVtbl;
struct _q_CWindows_CUI_CNotifications_CINotificationData
{
    _q_CWindows_CUI_CNotifications_CINotificationDataVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateNotificationDataWithValuesAndSequenceNumber)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* initialValues, UINT32 sequenceNumber, _q_CWindows_CUI_CNotifications_CINotificationData** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateNotificationDataWithValues)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* initialValues, _q_CWindows_CUI_CNotifications_CINotificationData** __pret);
} _q_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CINotificationDataFactory
{
    _q_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, TrustLevel* trustLevel);
    void* unneeded_get_Content;
    void* unneeded_get_DeliveryTime;
    void* unneeded_get_SnoozeInterval;
    void* unneeded_get_MaximumSnoozeCount;
    void* unneeded_put_Id;
    void* unneeded_get_Id;
} _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotification
{
    _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateScheduledToastNotification)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CFoundation_CDateTime deliveryTime, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateScheduledToastNotificationRecurring)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CFoundation_CDateTime deliveryTime, _q_CWindows_CFoundation_CTimeSpan snoozeInterval, UINT32 maximumSnoozeCount, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Cancel;
    void* unneeded_put_Cancel;
    void* unneeded_get_ScheduledToastNotification;
    void* unneeded_GetDeferral;
} _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl;
struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs
{
    _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Reason;
} _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs
{
    _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_ErrorCode;
} _q_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs
{
    _q_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* add_Dismissed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Dismissed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Failed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Failed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Tag)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Group)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuppressPopup)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SuppressPopup)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, boolean* __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotification2Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification2
{
    _q_CWindows_CUI_CNotifications_CIToastNotification2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NotificationMirroring)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, _q_CWindows_CUI_CNotifications_CNotificationMirroring* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NotificationMirroring)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, _q_CWindows_CUI_CNotifications_CNotificationMirroring value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, HSTRING value);
} _q_CWindows_CUI_CNotifications_CIToastNotification3Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification3
{
    _q_CWindows_CUI_CNotifications_CIToastNotification3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CINotificationData** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Data)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CINotificationData* value);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CToastNotificationPriority* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CToastNotificationPriority value);
} _q_CWindows_CUI_CNotifications_CIToastNotification4Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification4
{
    _q_CWindows_CUI_CNotifications_CIToastNotification4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification6Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExpiresOnReboot)(_q_CWindows_CUI_CNotifications_CIToastNotification6* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ExpiresOnReboot)(_q_CWindows_CUI_CNotifications_CIToastNotification6* pThis, boolean value);
} _q_CWindows_CUI_CNotifications_CIToastNotification6Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification6
{
    _q_CWindows_CUI_CNotifications_CIToastNotification6Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotification)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, TrustLevel* trustLevel);
    void* unneeded_RemoveGroup;
    void* unneeded_RemoveGroupWithId;
    void* unneeded_RemoveGroupedTagWithId;
    void* unneeded_RemoveGroupedTag;
    void* unneeded_Remove;
    void* unneeded_Clear;
    void* unneeded_ClearWithId;
} _q_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationHistory
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, TrustLevel* trustLevel);
    void* unneeded_CreateToastNotifier;
    void* unneeded_CreateToastNotifierWithId;
    void* unneeded_get_History;
    void* unneeded_get_User;
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifier)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, _q_CWindows_CUI_CNotifications_CIToastNotifier** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifierWithId)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, HSTRING applicationId, _q_CWindows_CUI_CNotifications_CIToastNotifier** __pret);
    HRESULT (STDMETHODCALLTYPE* GetTemplateContent)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, _q_CWindows_CUI_CNotifications_CToastTemplateType type, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_History)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotificationHistory** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser** __pret);
    HRESULT (STDMETHODCALLTYPE* ConfigureNotificationMirroring)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* pThis, _q_CWindows_CUI_CNotifications_CNotificationMirroring value);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* pThis, _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Show)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* notification);
    HRESULT (STDMETHODCALLTYPE* Hide)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* notification);
    HRESULT (STDMETHODCALLTYPE* get_Setting)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CNotificationSetting* __pret);
    HRESULT (STDMETHODCALLTYPE* AddToSchedule)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification* scheduledToast);
    HRESULT (STDMETHODCALLTYPE* RemoveFromSchedule)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification* scheduledToast);
    HRESULT (STDMETHODCALLTYPE* GetScheduledToastNotifications)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier
{
    _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* UpdateWithTagAndGroup)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* pThis, _q_CWindows_CUI_CNotifications_CINotificationData* data, HSTRING tag, HSTRING group, _q_CWindows_CUI_CNotifications_CNotificationUpdateResult* __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateWithTag)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* pThis, _q_CWindows_CUI_CNotifications_CINotificationData* data, HSTRING tag, _q_CWindows_CUI_CNotifications_CNotificationUpdateResult* __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier2
{
    _q_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ScheduledToastNotificationShowing)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ScheduledToastNotificationShowing)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier3
{
    _q_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, TrustLevel* trustLevel);
    void* unneeded_SendRequestAsync;
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, TrustLevel* trustLevel);
    void* unneeded_DeleteAsync;
    HRESULT (STDMETHODCALLTYPE* GetAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    void* unneeded_GetWithOptionAsync;
    void* unneeded_GetBufferAsync;
    void* unneeded_GetInputStreamAsync;
    void* unneeded_GetStringAsync;
    void* unneeded_PostAsync;
    void* unneeded_PutAsync;
    void* unneeded_SendRequestAsync;
    void* unneeded_SendRequestWithOptionAsync;
    void* unneeded_get_DefaultRequestHeaders;
} _q_CWindows_CWeb_CHttp_CIHttpClientVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClient
{
    _q_CWindows_CWeb_CHttp_CIHttpClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* pThis, _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* filter, _q_CWindows_CWeb_CHttp_CIHttpClient** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, TrustLevel* trustLevel);
    void* unneeded_get_Headers;
    void* unneeded_BufferAllAsync;
    void* unneeded_ReadAsBufferAsync;
    void* unneeded_ReadAsInputStreamAsync;
    HRESULT (STDMETHODCALLTYPE* ReadAsStringAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64** __pret);
    void* unneeded_TryComputeLength;
    void* unneeded_WriteToStreamAsync;
} _q_CWindows_CWeb_CHttp_CIHttpContentVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpContent
{
    _q_CWindows_CWeb_CHttp_CIHttpContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    void* unneeded_put_Content;
    void* unneeded_get_Headers;
    void* unneeded_get_IsSuccessStatusCode;
    void* unneeded_get_ReasonPhrase;
    void* unneeded_put_ReasonPhrase;
    void* unneeded_get_RequestMessage;
    void* unneeded_put_RequestMessage;
    void* unneeded_get_Source;
    void* unneeded_put_Source;
    void* unneeded_get_StatusCode;
    void* unneeded_put_StatusCode;
    void* unneeded_get_Version;
    void* unneeded_put_Version;
    HRESULT (STDMETHODCALLTYPE* EnsureSuccessStatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* pThis, _q_CWindows_CWeb_CHttp_CHttpStatusCode statusCode, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl* lpVtbl;
};
// definitions for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTimeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTimeVtbl;
struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime
{
    _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTimeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* sender, _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* sender, _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Key;
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotificationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotificationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotifier* sender, _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, boolean* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_UINT64
{
    _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, HSTRING* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* pThis, IInspectable* sender, IInspectable* args);
} _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable
{
    _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl* lpVtbl;
};
