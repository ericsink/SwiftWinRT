// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.

// forward decls for delegates
typedef struct _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler;
typedef struct _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler;
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler _q_CWindows_CFoundation_CIAsyncActionCompletedHandler;
typedef struct _q_CWindows_CFoundation_CIDeferralCompletedHandler _q_CWindows_CFoundation_CIDeferralCompletedHandler;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler;
typedef struct _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler;
typedef struct _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler;
typedef struct _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler;
typedef struct _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler;
typedef struct _q_CWindows_CStorage_CIApplicationDataSetVersionHandler _q_CWindows_CStorage_CIApplicationDataSetVersionHandler;
typedef struct _q_CWindows_CStorage_CIStreamedFileDataRequestedHandler _q_CWindows_CStorage_CIStreamedFileDataRequestedHandler;
// enums
typedef enum _q_CWindows_CApplicationModel_CActivation_CActivationKind
{
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_Launch = 0,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_Search = 1,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_ShareTarget = 2,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_File = 3,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_Protocol = 4,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_FileOpenPicker = 5,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_FileSavePicker = 6,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_CachedFileUpdater = 7,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_ContactPicker = 8,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_Device = 9,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PrintTaskSettings = 10,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_CameraSettings = 11,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_RestrictedLaunch = 12,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_AppointmentsProvider = 13,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_Contact = 14,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_LockScreenCall = 15,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_VoiceCommand = 16,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_LockScreen = 17,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PickerReturned = 1000,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_WalletAction = 1001,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PickFileContinuation = 1002,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PickSaveFileContinuation = 1003,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PickFolderContinuation = 1004,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_WebAuthenticationBrokerContinuation = 1005,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_WebAccountProvider = 1006,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_ComponentUI = 1007,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_ProtocolForResults = 1009,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_ToastNotification = 1010,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_Print3DWorkflow = 1011,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_DialReceiver = 1012,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_DevicePairing = 1013,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_UserDataAccountsProvider = 1014,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_FilePickerExperience = 1015,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_LockScreenComponent = 1016,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_ContactPanel = 1017,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PrintWorkflowForegroundTask = 1018,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_GameUIProvider = 1019,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_StartupTask = 1020,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_CommandLineLaunch = 1021,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_BarcodeScannerProvider = 1022,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PrintSupportJobUI = 1023,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PrintSupportSettingsUI = 1024,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_PhoneCallActivation = 1025,
    _q_CWindows_CApplicationModel_CActivation_CActivationKind_VpnForeground = 1026,
} _q_CWindows_CApplicationModel_CActivation_CActivationKind;
typedef enum _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState
{
    _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState_NotRunning = 0,
    _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState_Running = 1,
    _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState_Suspended = 2,
    _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState_Terminated = 3,
    _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState_ClosedByUser = 4,
} _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState;
typedef enum _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation
{
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_None = 0,
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_Copy = 1,
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_Move = 2,
    _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation_Link = 4,
} _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef enum _q_CWindows_CData_CJson_CJsonErrorStatus
{
    _q_CWindows_CData_CJson_CJsonErrorStatus_Unknown = 0,
    _q_CWindows_CData_CJson_CJsonErrorStatus_InvalidJsonString = 1,
    _q_CWindows_CData_CJson_CJsonErrorStatus_InvalidJsonNumber = 2,
    _q_CWindows_CData_CJson_CJsonErrorStatus_JsonValueNotFound = 3,
    _q_CWindows_CData_CJson_CJsonErrorStatus_ImplementationLimit = 4,
} _q_CWindows_CData_CJson_CJsonErrorStatus;
typedef enum _q_CWindows_CData_CJson_CJsonValueType
{
    _q_CWindows_CData_CJson_CJsonValueType_Null = 0,
    _q_CWindows_CData_CJson_CJsonValueType_Boolean = 1,
    _q_CWindows_CData_CJson_CJsonValueType_Number = 2,
    _q_CWindows_CData_CJson_CJsonValueType_String = 3,
    _q_CWindows_CData_CJson_CJsonValueType_Array = 4,
    _q_CWindows_CData_CJson_CJsonValueType_Object = 5,
} _q_CWindows_CData_CJson_CJsonValueType;
typedef enum _q_CWindows_CData_CPdf_CPdfPageRotation
{
    _q_CWindows_CData_CPdf_CPdfPageRotation_Normal = 0,
    _q_CWindows_CData_CPdf_CPdfPageRotation_Rotate90 = 1,
    _q_CWindows_CData_CPdf_CPdfPageRotation_Rotate180 = 2,
    _q_CWindows_CData_CPdf_CPdfPageRotation_Rotate270 = 3,
} _q_CWindows_CData_CPdf_CPdfPageRotation;
typedef enum _q_CWindows_CData_CText_CAlternateNormalizationFormat
{
    _q_CWindows_CData_CText_CAlternateNormalizationFormat_NotNormalized = 0,
    _q_CWindows_CData_CText_CAlternateNormalizationFormat_Number = 1,
    _q_CWindows_CData_CText_CAlternateNormalizationFormat_Currency = 3,
    _q_CWindows_CData_CText_CAlternateNormalizationFormat_Date = 4,
    _q_CWindows_CData_CText_CAlternateNormalizationFormat_Time = 5,
} _q_CWindows_CData_CText_CAlternateNormalizationFormat;
typedef enum _q_CWindows_CData_CText_CTextPredictionOptions
{
    _q_CWindows_CData_CText_CTextPredictionOptions_None = 0,
    _q_CWindows_CData_CText_CTextPredictionOptions_Predictions = 1,
    _q_CWindows_CData_CText_CTextPredictionOptions_Corrections = 2,
} _q_CWindows_CData_CText_CTextPredictionOptions;
typedef enum _q_CWindows_CData_CText_CUnicodeGeneralCategory
{
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_UppercaseLetter = 0,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_LowercaseLetter = 1,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_TitlecaseLetter = 2,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_ModifierLetter = 3,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_OtherLetter = 4,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_NonspacingMark = 5,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_SpacingCombiningMark = 6,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_EnclosingMark = 7,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_DecimalDigitNumber = 8,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_LetterNumber = 9,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_OtherNumber = 10,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_SpaceSeparator = 11,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_LineSeparator = 12,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_ParagraphSeparator = 13,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_Control = 14,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_Format = 15,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_Surrogate = 16,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_PrivateUse = 17,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_ConnectorPunctuation = 18,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_DashPunctuation = 19,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_OpenPunctuation = 20,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_ClosePunctuation = 21,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_InitialQuotePunctuation = 22,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_FinalQuotePunctuation = 23,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_OtherPunctuation = 24,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_MathSymbol = 25,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_CurrencySymbol = 26,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_ModifierSymbol = 27,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_OtherSymbol = 28,
    _q_CWindows_CData_CText_CUnicodeGeneralCategory_NotAssigned = 29,
} _q_CWindows_CData_CText_CUnicodeGeneralCategory;
typedef enum _q_CWindows_CData_CText_CUnicodeNumericType
{
    _q_CWindows_CData_CText_CUnicodeNumericType_None = 0,
    _q_CWindows_CData_CText_CUnicodeNumericType_Decimal = 1,
    _q_CWindows_CData_CText_CUnicodeNumericType_Digit = 2,
    _q_CWindows_CData_CText_CUnicodeNumericType_Numeric = 3,
} _q_CWindows_CData_CText_CUnicodeNumericType;
typedef enum _q_CWindows_CData_CXml_CDom_CNodeType
{
    _q_CWindows_CData_CXml_CDom_CNodeType_Invalid = 0,
    _q_CWindows_CData_CXml_CDom_CNodeType_ElementNode = 1,
    _q_CWindows_CData_CXml_CDom_CNodeType_AttributeNode = 2,
    _q_CWindows_CData_CXml_CDom_CNodeType_TextNode = 3,
    _q_CWindows_CData_CXml_CDom_CNodeType_DataSectionNode = 4,
    _q_CWindows_CData_CXml_CDom_CNodeType_EntityReferenceNode = 5,
    _q_CWindows_CData_CXml_CDom_CNodeType_EntityNode = 6,
    _q_CWindows_CData_CXml_CDom_CNodeType_ProcessingInstructionNode = 7,
    _q_CWindows_CData_CXml_CDom_CNodeType_CommentNode = 8,
    _q_CWindows_CData_CXml_CDom_CNodeType_DocumentNode = 9,
    _q_CWindows_CData_CXml_CDom_CNodeType_DocumentTypeNode = 10,
    _q_CWindows_CData_CXml_CDom_CNodeType_DocumentFragmentNode = 11,
    _q_CWindows_CData_CXml_CDom_CNodeType_NotationNode = 12,
} _q_CWindows_CData_CXml_CDom_CNodeType;
typedef enum _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem
{
    _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem_Unspecified = 0,
    _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem_Terrain = 1,
    _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem_Ellipsoid = 2,
    _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem_Geoid = 3,
    _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem_Surface = 4,
} _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem;
typedef enum _q_CWindows_CDevices_CSms_CCellularClass
{
    _q_CWindows_CDevices_CSms_CCellularClass_None = 0,
    _q_CWindows_CDevices_CSms_CCellularClass_Gsm = 1,
    _q_CWindows_CDevices_CSms_CCellularClass_Cdma = 2,
} _q_CWindows_CDevices_CSms_CCellularClass;
typedef enum _q_CWindows_CFoundation_CAsyncStatus
{
    _q_CWindows_CFoundation_CAsyncStatus_Canceled = 2,
    _q_CWindows_CFoundation_CAsyncStatus_Completed = 1,
    _q_CWindows_CFoundation_CAsyncStatus_Error = 3,
    _q_CWindows_CFoundation_CAsyncStatus_Started = 0,
} _q_CWindows_CFoundation_CAsyncStatus;
typedef enum _q_CWindows_CFoundation_CCollections_CCollectionChange
{
    _q_CWindows_CFoundation_CCollections_CCollectionChange_Reset = 0,
    _q_CWindows_CFoundation_CCollections_CCollectionChange_ItemInserted = 1,
    _q_CWindows_CFoundation_CCollections_CCollectionChange_ItemRemoved = 2,
    _q_CWindows_CFoundation_CCollections_CCollectionChange_ItemChanged = 3,
} _q_CWindows_CFoundation_CCollections_CCollectionChange;
typedef enum _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat
{
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Unknown = 0,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32Typeless = 1,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32Float = 2,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32UInt = 3,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32A32Int = 4,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32Typeless = 5,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32Float = 6,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32UInt = 7,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32B32Int = 8,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16Typeless = 9,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16Float = 10,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16UIntNormalized = 11,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16UInt = 12,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16IntNormalized = 13,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16B16A16Int = 14,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32Typeless = 15,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32Float = 16,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32UInt = 17,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G32Int = 18,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32G8X24Typeless = 19,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D32FloatS8X24UInt = 20,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32FloatX8X24Typeless = 21,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_X32TypelessG8X24UInt = 22,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10A2Typeless = 23,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10A2UIntNormalized = 24,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10A2UInt = 25,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R11G11B10Float = 26,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8Typeless = 27,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8UIntNormalized = 28,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8UIntNormalizedSrgb = 29,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8UInt = 30,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8IntNormalized = 31,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8A8Int = 32,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16Typeless = 33,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16Float = 34,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16UIntNormalized = 35,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16UInt = 36,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16IntNormalized = 37,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16G16Int = 38,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32Typeless = 39,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D32Float = 40,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32Float = 41,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32UInt = 42,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R32Int = 43,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R24G8Typeless = 44,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D24UIntNormalizedS8UInt = 45,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R24UIntNormalizedX8Typeless = 46,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_X24TypelessG8UInt = 47,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8Typeless = 48,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8UIntNormalized = 49,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8UInt = 50,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8IntNormalized = 51,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8Int = 52,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16Typeless = 53,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16Float = 54,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_D16UIntNormalized = 55,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16UIntNormalized = 56,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16UInt = 57,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16IntNormalized = 58,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R16Int = 59,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8Typeless = 60,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8UIntNormalized = 61,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8UInt = 62,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8IntNormalized = 63,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8Int = 64,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_A8UIntNormalized = 65,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R1UIntNormalized = 66,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R9G9B9E5SharedExponent = 67,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R8G8B8G8UIntNormalized = 68,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_G8R8G8B8UIntNormalized = 69,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC1Typeless = 70,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC1UIntNormalized = 71,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC1UIntNormalizedSrgb = 72,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC2Typeless = 73,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC2UIntNormalized = 74,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC2UIntNormalizedSrgb = 75,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC3Typeless = 76,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC3UIntNormalized = 77,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC3UIntNormalizedSrgb = 78,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC4Typeless = 79,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC4UIntNormalized = 80,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC4IntNormalized = 81,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC5Typeless = 82,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC5UIntNormalized = 83,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC5IntNormalized = 84,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B5G6R5UIntNormalized = 85,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B5G5R5A1UIntNormalized = 86,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8A8UIntNormalized = 87,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8X8UIntNormalized = 88,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_R10G10B10XRBiasA2UIntNormalized = 89,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8A8Typeless = 90,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8A8UIntNormalizedSrgb = 91,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8X8Typeless = 92,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B8G8R8X8UIntNormalizedSrgb = 93,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC6HTypeless = 94,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC6H16UnsignedFloat = 95,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC6H16Float = 96,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC7Typeless = 97,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC7UIntNormalized = 98,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_BC7UIntNormalizedSrgb = 99,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Ayuv = 100,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y410 = 101,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y416 = 102,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_NV12 = 103,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P010 = 104,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P016 = 105,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Opaque420 = 106,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Yuy2 = 107,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y210 = 108,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_Y216 = 109,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_NV11 = 110,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_AI44 = 111,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_IA44 = 112,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P8 = 113,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_A8P8 = 114,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_B4G4R4A4UIntNormalized = 115,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_P208 = 130,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_V208 = 131,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_V408 = 132,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_SamplerFeedbackMinMipOpaque = 189,
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat_SamplerFeedbackMipRegionUsedOpaque = 190,
} _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;
typedef enum _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode
{
    _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode_Premultiplied = 0,
    _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode_Straight = 1,
    _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode_Ignore = 2,
} _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode;
typedef enum _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat
{
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Unknown = 0,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Rgba16 = 12,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Rgba8 = 30,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Gray16 = 57,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Gray8 = 62,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Bgra8 = 87,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Nv12 = 103,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_P010 = 104,
    _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat_Yuy2 = 107,
} _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat;
typedef enum _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior_Parallel = 0,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior_Serialized = 1,
} _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior;
typedef enum _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy_Default = 0,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy_UnrestrictedOnly = 1,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy_Always = 2,
} _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy;
typedef enum _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority_Default = 0,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority_High = 1,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority_Low = 2,
} _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority;
typedef enum _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Idle = 0,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Running = 1,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedByApplication = 2,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedCostedNetwork = 3,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedNoNetwork = 4,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Completed = 5,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Canceled = 6,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_Error = 7,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedRecoverableWebErrorStatus = 8,
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus_PausedSystemPolicy = 32,
} _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus;
typedef enum _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType
{
    _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType_Pap = 1,
    _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType_Chap = 2,
    _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType_Mschapv2 = 3,
} _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType;
typedef enum _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus
{
    _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus_Success = 0,
    _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus_DeniedByUser = 1,
    _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus_DeniedBySystem = 2,
    _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus_UnknownError = 3,
} _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus;
typedef enum _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity
{
    _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity_PerMinute = 0,
    _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity_PerHour = 1,
    _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity_PerDay = 2,
    _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity_Total = 3,
} _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity;
typedef enum _q_CWindows_CNetworking_CConnectivity_CDomainConnectivityLevel
{
    _q_CWindows_CNetworking_CConnectivity_CDomainConnectivityLevel_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CDomainConnectivityLevel_Unauthenticated = 1,
    _q_CWindows_CNetworking_CConnectivity_CDomainConnectivityLevel_Authenticated = 2,
} _q_CWindows_CNetworking_CConnectivity_CDomainConnectivityLevel;
typedef enum _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType
{
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Unknown = 1,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Open80211 = 2,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_SharedKey80211 = 3,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Wpa = 4,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_WpaPsk = 5,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_WpaNone = 6,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Rsna = 7,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_RsnaPsk = 8,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Ihv = 9,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Wpa3 = 10,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Wpa3Enterprise192Bits = 10,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Wpa3Sae = 11,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Owe = 12,
    _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType_Wpa3Enterprise = 13,
} _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType;
typedef enum _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel
{
    _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel_LocalAccess = 1,
    _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel_ConstrainedInternetAccess = 2,
    _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel_InternetAccess = 3,
} _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel;
typedef enum _q_CWindows_CNetworking_CConnectivity_CNetworkCostType
{
    _q_CWindows_CNetworking_CConnectivity_CNetworkCostType_Unknown = 0,
    _q_CWindows_CNetworking_CConnectivity_CNetworkCostType_Unrestricted = 1,
    _q_CWindows_CNetworking_CConnectivity_CNetworkCostType_Fixed = 2,
    _q_CWindows_CNetworking_CConnectivity_CNetworkCostType_Variable = 3,
} _q_CWindows_CNetworking_CConnectivity_CNetworkCostType;
typedef enum _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType
{
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Unknown = 1,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Wep = 2,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Wep40 = 3,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Wep104 = 4,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Tkip = 5,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Ccmp = 6,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_WpaUseGroup = 7,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_RsnUseGroup = 8,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Ihv = 9,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Gcmp = 10,
    _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType_Gcmp256 = 11,
} _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType;
typedef enum _q_CWindows_CNetworking_CConnectivity_CNetworkTypes
{
    _q_CWindows_CNetworking_CConnectivity_CNetworkTypes_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CNetworkTypes_Internet = 1,
    _q_CWindows_CNetworking_CConnectivity_CNetworkTypes_PrivateNetwork = 2,
} _q_CWindows_CNetworking_CConnectivity_CNetworkTypes;
typedef enum _q_CWindows_CNetworking_CConnectivity_CRoamingStates
{
    _q_CWindows_CNetworking_CConnectivity_CRoamingStates_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CRoamingStates_NotRoaming = 1,
    _q_CWindows_CNetworking_CConnectivity_CRoamingStates_Roaming = 2,
} _q_CWindows_CNetworking_CConnectivity_CRoamingStates;
typedef enum _q_CWindows_CNetworking_CConnectivity_CTriStates
{
    _q_CWindows_CNetworking_CConnectivity_CTriStates_DoNotCare = 0,
    _q_CWindows_CNetworking_CConnectivity_CTriStates_No = 1,
    _q_CWindows_CNetworking_CConnectivity_CTriStates_Yes = 2,
} _q_CWindows_CNetworking_CConnectivity_CTriStates;
typedef enum _q_CWindows_CNetworking_CConnectivity_CWwanDataClass
{
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Gprs = 1,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Edge = 2,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Umts = 4,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Hsdpa = 8,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Hsupa = 16,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_LteAdvanced = 32,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Cdma1xRtt = 65536,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Cdma1xEvdo = 131072,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Cdma1xEvdoRevA = 262144,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Cdma1xEvdv = 524288,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Cdma3xRtt = 1048576,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Cdma1xEvdoRevB = 2097152,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_CdmaUmb = 4194304,
    _q_CWindows_CNetworking_CConnectivity_CWwanDataClass_Custom = -2147483648,
} _q_CWindows_CNetworking_CConnectivity_CWwanDataClass;
typedef enum _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind
{
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind_Ipv4 = 1,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind_Ipv6 = 2,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind_Ipv4v6 = 3,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind_Ipv4v6v4Xlat = 4,
} _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind;
typedef enum _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState
{
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_None = 0,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_Deregistered = 1,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_Searching = 2,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_Home = 3,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_Roaming = 4,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_Partner = 5,
    _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState_Denied = 6,
} _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState;
typedef enum _q_CWindows_CNetworking_CDomainNameType
{
    _q_CWindows_CNetworking_CDomainNameType_Suffix = 0,
    _q_CWindows_CNetworking_CDomainNameType_FullyQualified = 1,
} _q_CWindows_CNetworking_CDomainNameType;
typedef enum _q_CWindows_CNetworking_CHostNameSortOptions
{
    _q_CWindows_CNetworking_CHostNameSortOptions_None = 0,
    _q_CWindows_CNetworking_CHostNameSortOptions_OptimizeForLongConnections = 2,
} _q_CWindows_CNetworking_CHostNameSortOptions;
typedef enum _q_CWindows_CNetworking_CHostNameType
{
    _q_CWindows_CNetworking_CHostNameType_DomainName = 0,
    _q_CWindows_CNetworking_CHostNameType_Ipv4 = 1,
    _q_CWindows_CNetworking_CHostNameType_Ipv6 = 2,
    _q_CWindows_CNetworking_CHostNameType_Bluetooth = 3,
} _q_CWindows_CNetworking_CHostNameType;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CDataClasses
{
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_None = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Gprs = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Edge = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Umts = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Hsdpa = 8,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Hsupa = 16,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_LteAdvanced = 32,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_NewRadioNonStandalone = 64,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_NewRadioStandalone = 128,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Cdma1xRtt = 65536,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Cdma1xEvdo = 131072,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Cdma1xEvdoRevA = 262144,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Cdma1xEvdv = 524288,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Cdma3xRtt = 1048576,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Cdma1xEvdoRevB = 2097152,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_CdmaUmb = 4194304,
    _q_CWindows_CNetworking_CNetworkOperators_CDataClasses_Custom = -2147483648,
} _q_CWindows_CNetworking_CNetworkOperators_CDataClasses;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimAuthenticationPreference
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimAuthenticationPreference_OnEntry = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimAuthenticationPreference_OnAction = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimAuthenticationPreference_Never = 2,
} _q_CWindows_CNetworking_CNetworkOperators_CESimAuthenticationPreference;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultKind
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultKind_None = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultKind_Events = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultKind_ProfileMetadata = 2,
} _q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultKind;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_Success = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_NotAuthorized = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_NotFound = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_PolicyViolation = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_InsufficientSpaceOnCard = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ServerFailure = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ServerNotReachable = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_TimeoutWaitingForUserConsent = 7,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_IncorrectConfirmationCode = 8,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ConfirmationCodeMaxRetriesExceeded = 9,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_CardRemoved = 10,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_CardBusy = 11,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_Other = 12,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_CardGeneralFailure = 13,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ConfirmationCodeMissing = 14,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_InvalidMatchingId = 15,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_NoEligibleProfileForThisDevice = 16,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_OperationAborted = 17,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_EidMismatch = 18,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ProfileNotAvailableForNewBinding = 19,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ProfileNotReleasedByOperator = 20,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_OperationProhibitedByProfileClass = 21,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ProfileNotPresent = 22,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_NoCorrespondingRequest = 23,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_TimeoutWaitingForResponse = 24,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_IccidAlreadyExists = 25,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ProfileProcessingError = 26,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ServerNotTrusted = 27,
    _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus_ProfileDownloadMaxRetriesExceeded = 28,
} _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimProfileClass
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileClass_Operational = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileClass_Test = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileClass_Provisioning = 2,
} _q_CWindows_CNetworking_CNetworkOperators_CESimProfileClass;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_WaitingForInstall = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_Downloading = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_Installing = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_Expired = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_RejectingDownload = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_NoLongerAvailable = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState_DeniedByPolicy = 7,
} _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState_Disabled = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState_Enabled = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState_Deleted = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimState
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimState_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimState_Idle = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimState_Removed = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CESimState_Busy = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CESimState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus_Created = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus_Started = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus_EnumerationCompleted = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus_Stopping = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus_Stopped = 4,
} _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode
{
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_NoError = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_LoginSucceeded = 50,
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_LoginFailed = 100,
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_RadiusServerError = 102,
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_NetworkAdministratorError = 105,
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_LoginAborted = 151,
    _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode_AccessGatewayInternalError = 255,
} _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus_Created = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus_Started = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus_EnumerationCompleted = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus_Stopped = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus_Aborted = 4,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType_Embedded = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType_Removable = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType_Remote = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus_Success = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus_OtherFailure = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus_Busy = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus_NoDeviceSupport = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinFormat
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinFormat_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinFormat_Numeric = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinFormat_Alphanumeric = 2,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinFormat;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState_Unlocked = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState_PinRequired = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState_PinUnblockKeyRequired = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_None = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_Custom = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_Pin1 = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_Pin2 = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_SimPin = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_FirstSimPin = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_NetworkPin = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_NetworkSubsetPin = 7,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_ServiceProviderPin = 8,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_CorporatePin = 9,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType_SubsidyLock = 10,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioState
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioState_Off = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioState_On = 1,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_Unmanaged = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_Unknown = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_OffEmpty = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_Off = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_Empty = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_NotReady = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_Active = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_Error = 7,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_ActiveEsim = 8,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState_ActiveEsimNoProfile = 9,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus_Success = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus_InvalidUiccFilePath = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus_AccessConditionNotHeld = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus_UiccBusy = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_DeviceNotReady = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_DeviceReady = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_SimNotInserted = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_BadSim = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_DeviceHardwareFailure = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_AccountNotActivated = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_DeviceLocked = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus_DeviceBlocked = 7,
} _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorDataUsageNotificationKind
{
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorDataUsageNotificationKind_DataUsageProgress = 0,
} _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorDataUsageNotificationKind;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType
{
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_Gsm = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_Cdma = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_Ussd = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_DataPlanThresholdReached = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_DataPlanReset = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_DataPlanDeleted = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_ProfileConnected = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_ProfileDisconnected = 7,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_RegisteredRoaming = 8,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_RegisteredHome = 9,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_TetheringEntitlementCheck = 10,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_TetheringOperationalStateChanged = 11,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType_TetheringNumberOfClientsChanged = 12,
} _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState
{
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_None = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_Deregistered = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_Searching = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_Home = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_Roaming = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_Partner = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState_Denied = 6,
} _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CProfileMediaType
{
    _q_CWindows_CNetworking_CNetworkOperators_CProfileMediaType_Wlan = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CProfileMediaType_Wwan = 1,
} _q_CWindows_CNetworking_CNetworkOperators_CProfileMediaType;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability
{
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_Enabled = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledByGroupPolicy = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledByHardwareLimitation = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledByOperator = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledBySku = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledByRequiredAppNotInstalled = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledDueToUnknownCause = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability_DisabledBySystemCapability = 7,
} _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState
{
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState_On = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState_Off = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState_InTransition = 3,
} _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus
{
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_Success = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_Unknown = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_MobileBroadbandDeviceOff = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_WiFiDeviceOff = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_EntitlementCheckTimeout = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_EntitlementCheckFailure = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_OperationInProgress = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_BluetoothDeviceOff = 7,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus_NetworkLimitedConnectivity = 8,
} _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand
{
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand_Auto = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand_TwoPointFourGigahertz = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand_FiveGigahertz = 2,
} _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition
{
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_AlwaysAllowed = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_Pin1 = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_Pin2 = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_Pin3 = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_Pin4 = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_Administrative5 = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_Administrative6 = 6,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition_NeverAllowed = 7,
} _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind
{
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_MF = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_MFSim = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_MFRuim = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_USim = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_CSim = 5,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind_ISim = 6,
} _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CUiccAppRecordKind
{
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppRecordKind_Unknown = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppRecordKind_Transparent = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CUiccAppRecordKind_RecordOriented = 2,
} _q_CWindows_CNetworking_CNetworkOperators_CUiccAppRecordKind;
typedef enum _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode
{
    _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode_NoActionRequired = 0,
    _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode_ActionRequired = 1,
    _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode_Terminated = 2,
    _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode_OtherLocalClient = 3,
    _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode_OperationNotSupported = 4,
    _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode_NetworkTimeout = 5,
} _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode;
typedef enum _q_CWindows_CNetworking_CProximity_CPeerDiscoveryTypes
{
    _q_CWindows_CNetworking_CProximity_CPeerDiscoveryTypes_None = 0,
    _q_CWindows_CNetworking_CProximity_CPeerDiscoveryTypes_Browse = 1,
    _q_CWindows_CNetworking_CProximity_CPeerDiscoveryTypes_Triggered = 2,
} _q_CWindows_CNetworking_CProximity_CPeerDiscoveryTypes;
typedef enum _q_CWindows_CNetworking_CProximity_CPeerRole
{
    _q_CWindows_CNetworking_CProximity_CPeerRole_Peer = 0,
    _q_CWindows_CNetworking_CProximity_CPeerRole_Host = 1,
    _q_CWindows_CNetworking_CProximity_CPeerRole_Client = 2,
} _q_CWindows_CNetworking_CProximity_CPeerRole;
typedef enum _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus
{
    _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus_Created = 0,
    _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus_Started = 1,
    _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus_EnumerationCompleted = 2,
    _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus_Stopping = 3,
    _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus_Stopped = 4,
    _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus_Aborted = 5,
} _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus;
typedef enum _q_CWindows_CNetworking_CProximity_CTriggeredConnectState
{
    _q_CWindows_CNetworking_CProximity_CTriggeredConnectState_PeerFound = 0,
    _q_CWindows_CNetworking_CProximity_CTriggeredConnectState_Listening = 1,
    _q_CWindows_CNetworking_CProximity_CTriggeredConnectState_Connecting = 2,
    _q_CWindows_CNetworking_CProximity_CTriggeredConnectState_Completed = 3,
    _q_CWindows_CNetworking_CProximity_CTriggeredConnectState_Canceled = 4,
    _q_CWindows_CNetworking_CProximity_CTriggeredConnectState_Failed = 5,
} _q_CWindows_CNetworking_CProximity_CTriggeredConnectState;
typedef enum _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType
{
    _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType_Toast = 0,
    _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType_Tile = 1,
    _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType_Badge = 2,
    _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType_Raw = 3,
    _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType_TileFlyout = 4,
} _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType;
typedef enum _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus
{
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_Success = 0,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_InvalidServiceName = 1,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_ServerError = 2,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus_SecurityError = 3,
} _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus;
typedef enum _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus
{
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Created = 0,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Started = 1,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_EnumerationCompleted = 2,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Stopping = 3,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Stopped = 4,
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus_Aborted = 5,
} _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus;
typedef enum _q_CWindows_CNetworking_CSockets_CControlChannelTriggerResourceType
{
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerResourceType_RequestSoftwareSlot = 0,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerResourceType_RequestHardwareSlot = 1,
} _q_CWindows_CNetworking_CSockets_CControlChannelTriggerResourceType;
typedef enum _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus
{
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_HardwareSlotRequested = 0,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_SoftwareSlotAllocated = 1,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_HardwareSlotAllocated = 2,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_PolicyError = 3,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_SystemError = 4,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_TransportDisconnected = 5,
    _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus_ServiceUnavailable = 6,
} _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus;
typedef enum _q_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode
{
    _q_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode_FullMessage = 0,
    _q_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode_PartialMessage = 1,
} _q_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction
{
    _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction_DoNotWake = 0,
    _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction_Wake = 1,
} _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketActivityKind
{
    _q_CWindows_CNetworking_CSockets_CSocketActivityKind_None = 0,
    _q_CWindows_CNetworking_CSockets_CSocketActivityKind_StreamSocketListener = 1,
    _q_CWindows_CNetworking_CSockets_CSocketActivityKind_DatagramSocket = 2,
    _q_CWindows_CNetworking_CSockets_CSocketActivityKind_StreamSocket = 3,
} _q_CWindows_CNetworking_CSockets_CSocketActivityKind;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason
{
    _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason_None = 0,
    _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason_SocketActivity = 1,
    _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason_ConnectionAccepted = 2,
    _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason_KeepAliveTimerExpired = 3,
    _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason_SocketClosed = 4,
} _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketErrorStatus
{
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_Unknown = 0,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_OperationAborted = 1,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_HttpInvalidServerResponse = 2,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_ConnectionTimedOut = 3,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_AddressFamilyNotSupported = 4,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_SocketTypeNotSupported = 5,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_HostNotFound = 6,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_NoDataRecordOfRequestedType = 7,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_NonAuthoritativeHostNotFound = 8,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_ClassTypeNotFound = 9,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_AddressAlreadyInUse = 10,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CannotAssignRequestedAddress = 11,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_ConnectionRefused = 12,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_NetworkIsUnreachable = 13,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_UnreachableHost = 14,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_NetworkIsDown = 15,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_NetworkDroppedConnectionOnReset = 16,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_SoftwareCausedConnectionAbort = 17,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_ConnectionResetByPeer = 18,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_HostIsDown = 19,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_NoAddressesFound = 20,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_TooManyOpenFiles = 21,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_MessageTooLong = 22,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateExpired = 23,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateUntrustedRoot = 24,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateCommonNameIsIncorrect = 25,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateWrongUsage = 26,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateRevoked = 27,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateNoRevocationCheck = 28,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateRevocationServerOffline = 29,
    _q_CWindows_CNetworking_CSockets_CSocketErrorStatus_CertificateIsInvalid = 30,
} _q_CWindows_CNetworking_CSockets_CSocketErrorStatus;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketMessageType
{
    _q_CWindows_CNetworking_CSockets_CSocketMessageType_Binary = 0,
    _q_CWindows_CNetworking_CSockets_CSocketMessageType_Utf8 = 1,
} _q_CWindows_CNetworking_CSockets_CSocketMessageType;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel
{
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_PlainSocket = 0,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_Ssl = 1,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_SslAllowNullEncryption = 2,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_BluetoothEncryptionAllowNullAuthentication = 3,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_BluetoothEncryptionWithAuthentication = 4,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_Ssl3AllowWeakEncryption = 5,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_Tls10 = 6,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_Tls11 = 7,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_Tls12 = 8,
    _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel_Unspecified = 9,
} _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketQualityOfService
{
    _q_CWindows_CNetworking_CSockets_CSocketQualityOfService_Normal = 0,
    _q_CWindows_CNetworking_CSockets_CSocketQualityOfService_LowLatency = 1,
} _q_CWindows_CNetworking_CSockets_CSocketQualityOfService;
typedef enum _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity
{
    _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity_None = 0,
    _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity_Ignorable = 1,
    _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity_Fatal = 2,
} _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnAppIdType
{
    _q_CWindows_CNetworking_CVpn_CVpnAppIdType_PackageFamilyName = 0,
    _q_CWindows_CNetworking_CVpn_CVpnAppIdType_FullyQualifiedBinaryName = 1,
    _q_CWindows_CNetworking_CVpn_CVpnAppIdType_FilePath = 2,
} _q_CWindows_CNetworking_CVpn_CVpnAppIdType;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod
{
    _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod_Mschapv2 = 0,
    _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod_Eap = 1,
    _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod_Certificate = 2,
    _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod_PresharedKey = 3,
} _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventType
{
    _q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventType_Idle = 0,
    _q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventType_Active = 1,
} _q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventType;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnCredentialType
{
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_UsernamePassword = 0,
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_UsernameOtpPin = 1,
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_UsernamePasswordAndPin = 2,
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_UsernamePasswordChange = 3,
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_SmartCard = 4,
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_ProtectedCertificate = 5,
    _q_CWindows_CNetworking_CVpn_CVpnCredentialType_UnProtectedCertificate = 6,
} _q_CWindows_CNetworking_CVpn_CVpnCredentialType;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnDataPathType
{
    _q_CWindows_CNetworking_CVpn_CVpnDataPathType_Send = 0,
    _q_CWindows_CNetworking_CVpn_CVpnDataPathType_Receive = 1,
} _q_CWindows_CNetworking_CVpn_CVpnDataPathType;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnDomainNameType
{
    _q_CWindows_CNetworking_CVpn_CVpnDomainNameType_Suffix = 0,
    _q_CWindows_CNetworking_CVpn_CVpnDomainNameType_FullyQualified = 1,
    _q_CWindows_CNetworking_CVpn_CVpnDomainNameType_Reserved = 65535,
} _q_CWindows_CNetworking_CVpn_CVpnDomainNameType;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnIPProtocol
{
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_None = 0,
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_Tcp = 6,
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_Udp = 17,
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_Icmp = 1,
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_Ipv6Icmp = 58,
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_Igmp = 2,
    _q_CWindows_CNetworking_CVpn_CVpnIPProtocol_Pgm = 113,
} _q_CWindows_CNetworking_CVpn_CVpnIPProtocol;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus
{
    _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus_Disconnected = 0,
    _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus_Disconnecting = 1,
    _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus_Connected = 2,
    _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus_Connecting = 3,
} _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus
{
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_Ok = 0,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_Other = 1,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_InvalidXmlSyntax = 2,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_ProfileNameTooLong = 3,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_ProfileInvalidAppId = 4,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_AccessDenied = 5,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_CannotFindProfile = 6,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_AlreadyDisconnecting = 7,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_AlreadyConnected = 8,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_GeneralAuthenticationFailure = 9,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_EapFailure = 10,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_SmartCardFailure = 11,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_CertificateFailure = 12,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_ServerConfiguration = 13,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_NoConnection = 14,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_ServerConnection = 15,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_UserNamePassword = 16,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_DnsNotResolvable = 17,
    _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus_InvalidIP = 18,
} _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType
{
    _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType_Pptp = 0,
    _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType_L2tp = 1,
    _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType_IpsecIkev2 = 2,
} _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus
{
    _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus_Ok = 0,
    _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus_InvalidBufferSize = 1,
} _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus;
typedef enum _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType
{
    _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType_SplitRouting = 0,
    _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType_ForceAllTrafficOverVpn = 1,
} _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationBehaviors
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationBehaviors_None = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationBehaviors_ReevaluatePath = 1,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationBehaviors;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_Succeeded = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_NoLocalNetworks = 1,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_NoCompatibleNetworkPaths = 2,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_LocalSystemNotAuthorized = 3,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_Canceled = 4,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_TimedOut = 5,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_RemoteSystemNotAuthorized = 6,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_RefusedDueToConfiguration = 7,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus_UnexpectedInternalError = 8,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_Invalid = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_CreatingOutbound = 1,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_CreatingInbound = 2,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_Ready = 3,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_DeletingLocally = 4,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_RemoteEndpointTerminating = 5,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState_Deleted = 6,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveNetworkAccessKind
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveNetworkAccessKind_Open = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveNetworkAccessKind_Moderate = 1,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveNetworkAccessKind_Strict = 2,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveNetworkAccessKind;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_NotStarted = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_InProgress = 1,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_InProgressWithProvisionalResults = 2,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_Succeeded = 3,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_NoLocalNetworks = 4,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_NoCompatibleNetworkPaths = 5,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_LocalSystemNotAuthorized = 6,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_Canceled = 7,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_TimedOut = 8,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_RemoteSystemNotAuthorized = 9,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_RefusedDueToConfiguration = 10,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus_UnexpectedInternalError = 11,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_AverageLatencyInMilliseconds = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_MinLatencyInMilliseconds = 1,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_MaxLatencyInMilliseconds = 2,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_AverageOutboundBitsPerSecond = 3,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_MinOutboundBitsPerSecond = 4,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_MaxOutboundBitsPerSecond = 5,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_AverageInboundBitsPerSecond = 6,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_MinInboundBitsPerSecond = 7,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric_MaxInboundBitsPerSecond = 8,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric;
typedef enum _q_CWindows_CNetworking_CXboxLive_CXboxLiveSocketKind
{
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveSocketKind_None = 0,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveSocketKind_Datagram = 1,
    _q_CWindows_CNetworking_CXboxLive_CXboxLiveSocketKind_Stream = 2,
} _q_CWindows_CNetworking_CXboxLive_CXboxLiveSocketKind;
typedef enum _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding
{
    _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding_Utf8 = 0,
    _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding_Utf16LE = 1,
    _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding_Utf16BE = 2,
} _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding;
typedef enum _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult
{
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_Success = 0,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_Untrusted = 1,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_Revoked = 2,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_Expired = 3,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_IncompleteChain = 4,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_InvalidSignature = 5,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_WrongUsage = 6,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_InvalidName = 7,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_InvalidCertificateAuthorityPolicy = 8,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_BasicConstraintsError = 9,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_UnknownCriticalExtension = 10,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_RevocationInformationMissing = 11,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_RevocationFailure = 12,
    _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult_OtherErrors = 13,
} _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult;
typedef enum _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions
{
    _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions_None = 0,
    _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions_DisallowUserInput = 1,
    _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions_FastLocationsOnly = 2,
    _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions_UseReadOnlyCachedCopy = 4,
    _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions_SuppressAccessTimeUpdate = 8,
} _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions;
typedef enum _q_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility
{
    _q_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility_AppOnly = 0,
    _q_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility_AppAndSystem = 1,
} _q_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility;
typedef enum _q_CWindows_CStorage_CApplicationDataCreateDisposition
{
    _q_CWindows_CStorage_CApplicationDataCreateDisposition_Always = 0,
    _q_CWindows_CStorage_CApplicationDataCreateDisposition_Existing = 1,
} _q_CWindows_CStorage_CApplicationDataCreateDisposition;
typedef enum _q_CWindows_CStorage_CApplicationDataLocality
{
    _q_CWindows_CStorage_CApplicationDataLocality_Local = 0,
    _q_CWindows_CStorage_CApplicationDataLocality_Roaming = 1,
    _q_CWindows_CStorage_CApplicationDataLocality_Temporary = 2,
    _q_CWindows_CStorage_CApplicationDataLocality_LocalCache = 3,
    _q_CWindows_CStorage_CApplicationDataLocality_SharedLocal = 4,
} _q_CWindows_CStorage_CApplicationDataLocality;
typedef enum _q_CWindows_CStorage_CCompression_CCompressAlgorithm
{
    _q_CWindows_CStorage_CCompression_CCompressAlgorithm_InvalidAlgorithm = 0,
    _q_CWindows_CStorage_CCompression_CCompressAlgorithm_NullAlgorithm = 1,
    _q_CWindows_CStorage_CCompression_CCompressAlgorithm_Mszip = 2,
    _q_CWindows_CStorage_CCompression_CCompressAlgorithm_Xpress = 3,
    _q_CWindows_CStorage_CCompression_CCompressAlgorithm_XpressHuff = 4,
    _q_CWindows_CStorage_CCompression_CCompressAlgorithm_Lzms = 5,
} _q_CWindows_CStorage_CCompression_CCompressAlgorithm;
typedef enum _q_CWindows_CStorage_CCreationCollisionOption
{
    _q_CWindows_CStorage_CCreationCollisionOption_GenerateUniqueName = 0,
    _q_CWindows_CStorage_CCreationCollisionOption_ReplaceExisting = 1,
    _q_CWindows_CStorage_CCreationCollisionOption_FailIfExists = 2,
    _q_CWindows_CStorage_CCreationCollisionOption_OpenIfExists = 3,
} _q_CWindows_CStorage_CCreationCollisionOption;
typedef enum _q_CWindows_CStorage_CFileAccessMode
{
    _q_CWindows_CStorage_CFileAccessMode_Read = 0,
    _q_CWindows_CStorage_CFileAccessMode_ReadWrite = 1,
} _q_CWindows_CStorage_CFileAccessMode;
typedef enum _q_CWindows_CStorage_CFileAttributes
{
    _q_CWindows_CStorage_CFileAttributes_Normal = 0,
    _q_CWindows_CStorage_CFileAttributes_ReadOnly = 1,
    _q_CWindows_CStorage_CFileAttributes_Directory = 16,
    _q_CWindows_CStorage_CFileAttributes_Archive = 32,
    _q_CWindows_CStorage_CFileAttributes_Temporary = 256,
    _q_CWindows_CStorage_CFileAttributes_LocallyIncomplete = 512,
} _q_CWindows_CStorage_CFileAttributes;
typedef enum _q_CWindows_CStorage_CFileProperties_CPhotoOrientation
{
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Unspecified = 0,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Normal = 1,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_FlipHorizontal = 2,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Rotate180 = 3,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_FlipVertical = 4,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Transpose = 5,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Rotate270 = 6,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Transverse = 7,
    _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Rotate90 = 8,
} _q_CWindows_CStorage_CFileProperties_CPhotoOrientation;
typedef enum _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions
{
    _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_None = 0,
    _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_MusicProperties = 1,
    _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_VideoProperties = 2,
    _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_ImageProperties = 4,
    _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_DocumentProperties = 8,
    _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_BasicProperties = 16,
} _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions;
typedef enum _q_CWindows_CStorage_CFileProperties_CThumbnailMode
{
    _q_CWindows_CStorage_CFileProperties_CThumbnailMode_PicturesView = 0,
    _q_CWindows_CStorage_CFileProperties_CThumbnailMode_VideosView = 1,
    _q_CWindows_CStorage_CFileProperties_CThumbnailMode_MusicView = 2,
    _q_CWindows_CStorage_CFileProperties_CThumbnailMode_DocumentsView = 3,
    _q_CWindows_CStorage_CFileProperties_CThumbnailMode_ListView = 4,
    _q_CWindows_CStorage_CFileProperties_CThumbnailMode_SingleItem = 5,
} _q_CWindows_CStorage_CFileProperties_CThumbnailMode;
typedef enum _q_CWindows_CStorage_CFileProperties_CThumbnailOptions
{
    _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_None = 0,
    _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_ReturnOnlyIfCached = 1,
    _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_ResizeThumbnail = 2,
    _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_UseCurrentScale = 4,
} _q_CWindows_CStorage_CFileProperties_CThumbnailOptions;
typedef enum _q_CWindows_CStorage_CFileProperties_CThumbnailType
{
    _q_CWindows_CStorage_CFileProperties_CThumbnailType_Image = 0,
    _q_CWindows_CStorage_CFileProperties_CThumbnailType_Icon = 1,
} _q_CWindows_CStorage_CFileProperties_CThumbnailType;
typedef enum _q_CWindows_CStorage_CFileProperties_CVideoOrientation
{
    _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Normal = 0,
    _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Rotate90 = 90,
    _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Rotate180 = 180,
    _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Rotate270 = 270,
} _q_CWindows_CStorage_CFileProperties_CVideoOrientation;
typedef enum _q_CWindows_CStorage_CKnownFolderId
{
    _q_CWindows_CStorage_CKnownFolderId_AppCaptures = 0,
    _q_CWindows_CStorage_CKnownFolderId_CameraRoll = 1,
    _q_CWindows_CStorage_CKnownFolderId_DocumentsLibrary = 2,
    _q_CWindows_CStorage_CKnownFolderId_HomeGroup = 3,
    _q_CWindows_CStorage_CKnownFolderId_MediaServerDevices = 4,
    _q_CWindows_CStorage_CKnownFolderId_MusicLibrary = 5,
    _q_CWindows_CStorage_CKnownFolderId_Objects3D = 6,
    _q_CWindows_CStorage_CKnownFolderId_PicturesLibrary = 7,
    _q_CWindows_CStorage_CKnownFolderId_Playlists = 8,
    _q_CWindows_CStorage_CKnownFolderId_RecordedCalls = 9,
    _q_CWindows_CStorage_CKnownFolderId_RemovableDevices = 10,
    _q_CWindows_CStorage_CKnownFolderId_SavedPictures = 11,
    _q_CWindows_CStorage_CKnownFolderId_Screenshots = 12,
    _q_CWindows_CStorage_CKnownFolderId_VideosLibrary = 13,
    _q_CWindows_CStorage_CKnownFolderId_AllAppMods = 14,
    _q_CWindows_CStorage_CKnownFolderId_CurrentAppMods = 15,
    _q_CWindows_CStorage_CKnownFolderId_DownloadsFolder = 16,
} _q_CWindows_CStorage_CKnownFolderId;
typedef enum _q_CWindows_CStorage_CKnownFoldersAccessStatus
{
    _q_CWindows_CStorage_CKnownFoldersAccessStatus_DeniedBySystem = 0,
    _q_CWindows_CStorage_CKnownFoldersAccessStatus_NotDeclaredByApp = 1,
    _q_CWindows_CStorage_CKnownFoldersAccessStatus_DeniedByUser = 2,
    _q_CWindows_CStorage_CKnownFoldersAccessStatus_UserPromptRequired = 3,
    _q_CWindows_CStorage_CKnownFoldersAccessStatus_Allowed = 4,
    _q_CWindows_CStorage_CKnownFoldersAccessStatus_AllowedPerAppFolder = 5,
} _q_CWindows_CStorage_CKnownFoldersAccessStatus;
typedef enum _q_CWindows_CStorage_CKnownLibraryId
{
    _q_CWindows_CStorage_CKnownLibraryId_Music = 0,
    _q_CWindows_CStorage_CKnownLibraryId_Pictures = 1,
    _q_CWindows_CStorage_CKnownLibraryId_Videos = 2,
    _q_CWindows_CStorage_CKnownLibraryId_Documents = 3,
} _q_CWindows_CStorage_CKnownLibraryId;
typedef enum _q_CWindows_CStorage_CNameCollisionOption
{
    _q_CWindows_CStorage_CNameCollisionOption_GenerateUniqueName = 0,
    _q_CWindows_CStorage_CNameCollisionOption_ReplaceExisting = 1,
    _q_CWindows_CStorage_CNameCollisionOption_FailIfExists = 2,
} _q_CWindows_CStorage_CNameCollisionOption;
typedef enum _q_CWindows_CStorage_CPickers_CPickerLocationId
{
    _q_CWindows_CStorage_CPickers_CPickerLocationId_DocumentsLibrary = 0,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_ComputerFolder = 1,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_Desktop = 2,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_Downloads = 3,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_HomeGroup = 4,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_MusicLibrary = 5,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_PicturesLibrary = 6,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_VideosLibrary = 7,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_Objects3D = 8,
    _q_CWindows_CStorage_CPickers_CPickerLocationId_Unspecified = 9,
} _q_CWindows_CStorage_CPickers_CPickerLocationId;
typedef enum _q_CWindows_CStorage_CPickers_CPickerViewMode
{
    _q_CWindows_CStorage_CPickers_CPickerViewMode_List = 0,
    _q_CWindows_CStorage_CPickers_CPickerViewMode_Thumbnail = 1,
} _q_CWindows_CStorage_CPickers_CPickerViewMode;
typedef enum _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult
{
    _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult_Added = 0,
    _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult_AlreadyAdded = 1,
    _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult_NotAllowed = 2,
    _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult_Unavailable = 3,
} _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult;
typedef enum _q_CWindows_CStorage_CPickers_CProvider_CFileSelectionMode
{
    _q_CWindows_CStorage_CPickers_CProvider_CFileSelectionMode_Single = 0,
    _q_CWindows_CStorage_CPickers_CProvider_CFileSelectionMode_Multiple = 1,
} _q_CWindows_CStorage_CPickers_CProvider_CFileSelectionMode;
typedef enum _q_CWindows_CStorage_CPickers_CProvider_CSetFileNameResult
{
    _q_CWindows_CStorage_CPickers_CProvider_CSetFileNameResult_Succeeded = 0,
    _q_CWindows_CStorage_CPickers_CProvider_CSetFileNameResult_NotAllowed = 1,
    _q_CWindows_CStorage_CPickers_CProvider_CSetFileNameResult_Unavailable = 2,
} _q_CWindows_CStorage_CPickers_CProvider_CSetFileNameResult;
typedef enum _q_CWindows_CStorage_CProvider_CCachedFileOptions
{
    _q_CWindows_CStorage_CProvider_CCachedFileOptions_None = 0,
    _q_CWindows_CStorage_CProvider_CCachedFileOptions_RequireUpdateOnAccess = 1,
    _q_CWindows_CStorage_CProvider_CCachedFileOptions_UseCachedFileWhenOffline = 2,
    _q_CWindows_CStorage_CProvider_CCachedFileOptions_DenyAccessWhenOffline = 4,
} _q_CWindows_CStorage_CProvider_CCachedFileOptions;
typedef enum _q_CWindows_CStorage_CProvider_CCachedFileTarget
{
    _q_CWindows_CStorage_CProvider_CCachedFileTarget_Local = 0,
    _q_CWindows_CStorage_CProvider_CCachedFileTarget_Remote = 1,
} _q_CWindows_CStorage_CProvider_CCachedFileTarget;
typedef enum _q_CWindows_CStorage_CProvider_CFileUpdateStatus
{
    _q_CWindows_CStorage_CProvider_CFileUpdateStatus_Incomplete = 0,
    _q_CWindows_CStorage_CProvider_CFileUpdateStatus_Complete = 1,
    _q_CWindows_CStorage_CProvider_CFileUpdateStatus_UserInputNeeded = 2,
    _q_CWindows_CStorage_CProvider_CFileUpdateStatus_CurrentlyUnavailable = 3,
    _q_CWindows_CStorage_CProvider_CFileUpdateStatus_Failed = 4,
    _q_CWindows_CStorage_CProvider_CFileUpdateStatus_CompleteAndRenamed = 5,
} _q_CWindows_CStorage_CProvider_CFileUpdateStatus;
typedef enum _q_CWindows_CStorage_CProvider_CReadActivationMode
{
    _q_CWindows_CStorage_CProvider_CReadActivationMode_NotNeeded = 0,
    _q_CWindows_CStorage_CProvider_CReadActivationMode_BeforeAccess = 1,
} _q_CWindows_CStorage_CProvider_CReadActivationMode;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy
{
    _q_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy_None = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy_Allowed = 1,
} _q_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy
{
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_Partial = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_Progressive = 1,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_Full = 2,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy_AlwaysFull = 3,
} _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier
{
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_None = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_ValidationRequired = 1,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_StreamingAllowed = 2,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_AutoDehydrationAllowed = 4,
    _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier_AllowFullRestartHydration = 8,
} _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy
{
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_Default = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileCreationTime = 1,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileReadOnlyAttribute = 2,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileHiddenAttribute = 4,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileSystemAttribute = 8,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryCreationTime = 16,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryReadOnlyAttribute = 32,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryHiddenAttribute = 64,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectorySystemAttribute = 128,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_FileLastWriteTime = 256,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_DirectoryLastWriteTime = 512,
    _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy_PreserveInsyncForSyncEngine = -2147483648,
} _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy
{
    _q_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy_Full = 1,
    _q_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy_AlwaysFull = 2,
} _q_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderProtectionMode
{
    _q_CWindows_CStorage_CProvider_CStorageProviderProtectionMode_Unknown = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderProtectionMode_Personal = 1,
} _q_CWindows_CStorage_CProvider_CStorageProviderProtectionMode;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderState
{
    _q_CWindows_CStorage_CProvider_CStorageProviderState_InSync = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderState_Syncing = 1,
    _q_CWindows_CStorage_CProvider_CStorageProviderState_Paused = 2,
    _q_CWindows_CStorage_CProvider_CStorageProviderState_Error = 3,
    _q_CWindows_CStorage_CProvider_CStorageProviderState_Warning = 4,
    _q_CWindows_CStorage_CProvider_CStorageProviderState_Offline = 5,
} _q_CWindows_CStorage_CProvider_CStorageProviderState;
typedef enum _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus
{
    _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus_Success = 0,
    _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus_NoSyncRoot = 1,
    _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus_FileNotFound = 2,
} _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus;
typedef enum _q_CWindows_CStorage_CProvider_CUIStatus
{
    _q_CWindows_CStorage_CProvider_CUIStatus_Unavailable = 0,
    _q_CWindows_CStorage_CProvider_CUIStatus_Hidden = 1,
    _q_CWindows_CStorage_CProvider_CUIStatus_Visible = 2,
    _q_CWindows_CStorage_CProvider_CUIStatus_Complete = 3,
} _q_CWindows_CStorage_CProvider_CUIStatus;
typedef enum _q_CWindows_CStorage_CProvider_CWriteActivationMode
{
    _q_CWindows_CStorage_CProvider_CWriteActivationMode_ReadOnly = 0,
    _q_CWindows_CStorage_CProvider_CWriteActivationMode_NotNeeded = 1,
    _q_CWindows_CStorage_CProvider_CWriteActivationMode_AfterWrite = 2,
} _q_CWindows_CStorage_CProvider_CWriteActivationMode;
typedef enum _q_CWindows_CStorage_CSearch_CCommonFileQuery
{
    _q_CWindows_CStorage_CSearch_CCommonFileQuery_DefaultQuery = 0,
    _q_CWindows_CStorage_CSearch_CCommonFileQuery_OrderByName = 1,
    _q_CWindows_CStorage_CSearch_CCommonFileQuery_OrderByTitle = 2,
    _q_CWindows_CStorage_CSearch_CCommonFileQuery_OrderByMusicProperties = 3,
    _q_CWindows_CStorage_CSearch_CCommonFileQuery_OrderBySearchRank = 4,
    _q_CWindows_CStorage_CSearch_CCommonFileQuery_OrderByDate = 5,
} _q_CWindows_CStorage_CSearch_CCommonFileQuery;
typedef enum _q_CWindows_CStorage_CSearch_CCommonFolderQuery
{
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_DefaultQuery = 0,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByYear = 100,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByMonth = 101,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByArtist = 102,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByAlbum = 103,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByAlbumArtist = 104,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByComposer = 105,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByGenre = 106,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByPublishedYear = 107,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByRating = 108,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByTag = 109,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByAuthor = 110,
    _q_CWindows_CStorage_CSearch_CCommonFolderQuery_GroupByType = 111,
} _q_CWindows_CStorage_CSearch_CCommonFolderQuery;
typedef enum _q_CWindows_CStorage_CSearch_CDateStackOption
{
    _q_CWindows_CStorage_CSearch_CDateStackOption_None = 0,
    _q_CWindows_CStorage_CSearch_CDateStackOption_Year = 1,
    _q_CWindows_CStorage_CSearch_CDateStackOption_Month = 2,
} _q_CWindows_CStorage_CSearch_CDateStackOption;
typedef enum _q_CWindows_CStorage_CSearch_CFolderDepth
{
    _q_CWindows_CStorage_CSearch_CFolderDepth_Shallow = 0,
    _q_CWindows_CStorage_CSearch_CFolderDepth_Deep = 1,
} _q_CWindows_CStorage_CSearch_CFolderDepth;
typedef enum _q_CWindows_CStorage_CSearch_CIndexedState
{
    _q_CWindows_CStorage_CSearch_CIndexedState_Unknown = 0,
    _q_CWindows_CStorage_CSearch_CIndexedState_NotIndexed = 1,
    _q_CWindows_CStorage_CSearch_CIndexedState_PartiallyIndexed = 2,
    _q_CWindows_CStorage_CSearch_CIndexedState_FullyIndexed = 3,
} _q_CWindows_CStorage_CSearch_CIndexedState;
typedef enum _q_CWindows_CStorage_CSearch_CIndexerOption
{
    _q_CWindows_CStorage_CSearch_CIndexerOption_UseIndexerWhenAvailable = 0,
    _q_CWindows_CStorage_CSearch_CIndexerOption_OnlyUseIndexer = 1,
    _q_CWindows_CStorage_CSearch_CIndexerOption_DoNotUseIndexer = 2,
    _q_CWindows_CStorage_CSearch_CIndexerOption_OnlyUseIndexerAndOptimizeForIndexedProperties = 3,
} _q_CWindows_CStorage_CSearch_CIndexerOption;
typedef enum _q_CWindows_CStorage_CStorageDeleteOption
{
    _q_CWindows_CStorage_CStorageDeleteOption_Default = 0,
    _q_CWindows_CStorage_CStorageDeleteOption_PermanentDelete = 1,
} _q_CWindows_CStorage_CStorageDeleteOption;
typedef enum _q_CWindows_CStorage_CStorageItemTypes
{
    _q_CWindows_CStorage_CStorageItemTypes_None = 0,
    _q_CWindows_CStorage_CStorageItemTypes_File = 1,
    _q_CWindows_CStorage_CStorageItemTypes_Folder = 2,
} _q_CWindows_CStorage_CStorageItemTypes;
typedef enum _q_CWindows_CStorage_CStorageLibraryChangeType
{
    _q_CWindows_CStorage_CStorageLibraryChangeType_Created = 0,
    _q_CWindows_CStorage_CStorageLibraryChangeType_Deleted = 1,
    _q_CWindows_CStorage_CStorageLibraryChangeType_MovedOrRenamed = 2,
    _q_CWindows_CStorage_CStorageLibraryChangeType_ContentsChanged = 3,
    _q_CWindows_CStorage_CStorageLibraryChangeType_MovedOutOfLibrary = 4,
    _q_CWindows_CStorage_CStorageLibraryChangeType_MovedIntoLibrary = 5,
    _q_CWindows_CStorage_CStorageLibraryChangeType_ContentsReplaced = 6,
    _q_CWindows_CStorage_CStorageLibraryChangeType_IndexingStatusChanged = 7,
    _q_CWindows_CStorage_CStorageLibraryChangeType_EncryptionChanged = 8,
    _q_CWindows_CStorage_CStorageLibraryChangeType_ChangeTrackingLost = 9,
} _q_CWindows_CStorage_CStorageLibraryChangeType;
typedef enum _q_CWindows_CStorage_CStorageOpenOptions
{
    _q_CWindows_CStorage_CStorageOpenOptions_None = 0,
    _q_CWindows_CStorage_CStorageOpenOptions_AllowOnlyReaders = 1,
    _q_CWindows_CStorage_CStorageOpenOptions_AllowReadersAndWriters = 2,
} _q_CWindows_CStorage_CStorageOpenOptions;
typedef enum _q_CWindows_CStorage_CStreamedFileFailureMode
{
    _q_CWindows_CStorage_CStreamedFileFailureMode_Failed = 0,
    _q_CWindows_CStorage_CStreamedFileFailureMode_CurrentlyUnavailable = 1,
    _q_CWindows_CStorage_CStreamedFileFailureMode_Incomplete = 2,
} _q_CWindows_CStorage_CStreamedFileFailureMode;
typedef enum _q_CWindows_CStorage_CStreams_CByteOrder
{
    _q_CWindows_CStorage_CStreams_CByteOrder_LittleEndian = 0,
    _q_CWindows_CStorage_CStreams_CByteOrder_BigEndian = 1,
} _q_CWindows_CStorage_CStreams_CByteOrder;
typedef enum _q_CWindows_CStorage_CStreams_CFileOpenDisposition
{
    _q_CWindows_CStorage_CStreams_CFileOpenDisposition_OpenExisting = 0,
    _q_CWindows_CStorage_CStreams_CFileOpenDisposition_OpenAlways = 1,
    _q_CWindows_CStorage_CStreams_CFileOpenDisposition_CreateNew = 2,
    _q_CWindows_CStorage_CStreams_CFileOpenDisposition_CreateAlways = 3,
    _q_CWindows_CStorage_CStreams_CFileOpenDisposition_TruncateExisting = 4,
} _q_CWindows_CStorage_CStreams_CFileOpenDisposition;
typedef enum _q_CWindows_CStorage_CStreams_CInputStreamOptions
{
    _q_CWindows_CStorage_CStreams_CInputStreamOptions_None = 0,
    _q_CWindows_CStorage_CStreams_CInputStreamOptions_Partial = 1,
    _q_CWindows_CStorage_CStreams_CInputStreamOptions_ReadAhead = 2,
} _q_CWindows_CStorage_CStreams_CInputStreamOptions;
typedef enum _q_CWindows_CStorage_CStreams_CUnicodeEncoding
{
    _q_CWindows_CStorage_CStreams_CUnicodeEncoding_Utf8 = 0,
    _q_CWindows_CStorage_CStreams_CUnicodeEncoding_Utf16LE = 1,
    _q_CWindows_CStorage_CStreams_CUnicodeEncoding_Utf16BE = 2,
} _q_CWindows_CStorage_CStreams_CUnicodeEncoding;
typedef enum _q_CWindows_CSystem_CProfile_CSystemIdentificationSource
{
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_None = 0,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Tpm = 1,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Uefi = 2,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Registry = 3,
} _q_CWindows_CSystem_CProfile_CSystemIdentificationSource;
typedef enum _q_CWindows_CSystem_CVirtualKey
{
    _q_CWindows_CSystem_CVirtualKey_None = 0,
    _q_CWindows_CSystem_CVirtualKey_LeftButton = 1,
    _q_CWindows_CSystem_CVirtualKey_RightButton = 2,
    _q_CWindows_CSystem_CVirtualKey_Cancel = 3,
    _q_CWindows_CSystem_CVirtualKey_MiddleButton = 4,
    _q_CWindows_CSystem_CVirtualKey_XButton1 = 5,
    _q_CWindows_CSystem_CVirtualKey_XButton2 = 6,
    _q_CWindows_CSystem_CVirtualKey_Back = 8,
    _q_CWindows_CSystem_CVirtualKey_Tab = 9,
    _q_CWindows_CSystem_CVirtualKey_Clear = 12,
    _q_CWindows_CSystem_CVirtualKey_Enter = 13,
    _q_CWindows_CSystem_CVirtualKey_Shift = 16,
    _q_CWindows_CSystem_CVirtualKey_Control = 17,
    _q_CWindows_CSystem_CVirtualKey_Menu = 18,
    _q_CWindows_CSystem_CVirtualKey_Pause = 19,
    _q_CWindows_CSystem_CVirtualKey_CapitalLock = 20,
    _q_CWindows_CSystem_CVirtualKey_Kana = 21,
    _q_CWindows_CSystem_CVirtualKey_Hangul = 21,
    _q_CWindows_CSystem_CVirtualKey_ImeOn = 22,
    _q_CWindows_CSystem_CVirtualKey_Junja = 23,
    _q_CWindows_CSystem_CVirtualKey_Final = 24,
    _q_CWindows_CSystem_CVirtualKey_Hanja = 25,
    _q_CWindows_CSystem_CVirtualKey_Kanji = 25,
    _q_CWindows_CSystem_CVirtualKey_ImeOff = 26,
    _q_CWindows_CSystem_CVirtualKey_Escape = 27,
    _q_CWindows_CSystem_CVirtualKey_Convert = 28,
    _q_CWindows_CSystem_CVirtualKey_NonConvert = 29,
    _q_CWindows_CSystem_CVirtualKey_Accept = 30,
    _q_CWindows_CSystem_CVirtualKey_ModeChange = 31,
    _q_CWindows_CSystem_CVirtualKey_Space = 32,
    _q_CWindows_CSystem_CVirtualKey_PageUp = 33,
    _q_CWindows_CSystem_CVirtualKey_PageDown = 34,
    _q_CWindows_CSystem_CVirtualKey_End = 35,
    _q_CWindows_CSystem_CVirtualKey_Home = 36,
    _q_CWindows_CSystem_CVirtualKey_Left = 37,
    _q_CWindows_CSystem_CVirtualKey_Up = 38,
    _q_CWindows_CSystem_CVirtualKey_Right = 39,
    _q_CWindows_CSystem_CVirtualKey_Down = 40,
    _q_CWindows_CSystem_CVirtualKey_Select = 41,
    _q_CWindows_CSystem_CVirtualKey_Print = 42,
    _q_CWindows_CSystem_CVirtualKey_Execute = 43,
    _q_CWindows_CSystem_CVirtualKey_Snapshot = 44,
    _q_CWindows_CSystem_CVirtualKey_Insert = 45,
    _q_CWindows_CSystem_CVirtualKey_Delete = 46,
    _q_CWindows_CSystem_CVirtualKey_Help = 47,
    _q_CWindows_CSystem_CVirtualKey_Number0 = 48,
    _q_CWindows_CSystem_CVirtualKey_Number1 = 49,
    _q_CWindows_CSystem_CVirtualKey_Number2 = 50,
    _q_CWindows_CSystem_CVirtualKey_Number3 = 51,
    _q_CWindows_CSystem_CVirtualKey_Number4 = 52,
    _q_CWindows_CSystem_CVirtualKey_Number5 = 53,
    _q_CWindows_CSystem_CVirtualKey_Number6 = 54,
    _q_CWindows_CSystem_CVirtualKey_Number7 = 55,
    _q_CWindows_CSystem_CVirtualKey_Number8 = 56,
    _q_CWindows_CSystem_CVirtualKey_Number9 = 57,
    _q_CWindows_CSystem_CVirtualKey_A = 65,
    _q_CWindows_CSystem_CVirtualKey_B = 66,
    _q_CWindows_CSystem_CVirtualKey_C = 67,
    _q_CWindows_CSystem_CVirtualKey_D = 68,
    _q_CWindows_CSystem_CVirtualKey_E = 69,
    _q_CWindows_CSystem_CVirtualKey_F = 70,
    _q_CWindows_CSystem_CVirtualKey_G = 71,
    _q_CWindows_CSystem_CVirtualKey_H = 72,
    _q_CWindows_CSystem_CVirtualKey_I = 73,
    _q_CWindows_CSystem_CVirtualKey_J = 74,
    _q_CWindows_CSystem_CVirtualKey_K = 75,
    _q_CWindows_CSystem_CVirtualKey_L = 76,
    _q_CWindows_CSystem_CVirtualKey_M = 77,
    _q_CWindows_CSystem_CVirtualKey_N = 78,
    _q_CWindows_CSystem_CVirtualKey_O = 79,
    _q_CWindows_CSystem_CVirtualKey_P = 80,
    _q_CWindows_CSystem_CVirtualKey_Q = 81,
    _q_CWindows_CSystem_CVirtualKey_R = 82,
    _q_CWindows_CSystem_CVirtualKey_S = 83,
    _q_CWindows_CSystem_CVirtualKey_T = 84,
    _q_CWindows_CSystem_CVirtualKey_U = 85,
    _q_CWindows_CSystem_CVirtualKey_V = 86,
    _q_CWindows_CSystem_CVirtualKey_W = 87,
    _q_CWindows_CSystem_CVirtualKey_X = 88,
    _q_CWindows_CSystem_CVirtualKey_Y = 89,
    _q_CWindows_CSystem_CVirtualKey_Z = 90,
    _q_CWindows_CSystem_CVirtualKey_LeftWindows = 91,
    _q_CWindows_CSystem_CVirtualKey_RightWindows = 92,
    _q_CWindows_CSystem_CVirtualKey_Application = 93,
    _q_CWindows_CSystem_CVirtualKey_Sleep = 95,
    _q_CWindows_CSystem_CVirtualKey_NumberPad0 = 96,
    _q_CWindows_CSystem_CVirtualKey_NumberPad1 = 97,
    _q_CWindows_CSystem_CVirtualKey_NumberPad2 = 98,
    _q_CWindows_CSystem_CVirtualKey_NumberPad3 = 99,
    _q_CWindows_CSystem_CVirtualKey_NumberPad4 = 100,
    _q_CWindows_CSystem_CVirtualKey_NumberPad5 = 101,
    _q_CWindows_CSystem_CVirtualKey_NumberPad6 = 102,
    _q_CWindows_CSystem_CVirtualKey_NumberPad7 = 103,
    _q_CWindows_CSystem_CVirtualKey_NumberPad8 = 104,
    _q_CWindows_CSystem_CVirtualKey_NumberPad9 = 105,
    _q_CWindows_CSystem_CVirtualKey_Multiply = 106,
    _q_CWindows_CSystem_CVirtualKey_Add = 107,
    _q_CWindows_CSystem_CVirtualKey_Separator = 108,
    _q_CWindows_CSystem_CVirtualKey_Subtract = 109,
    _q_CWindows_CSystem_CVirtualKey_Decimal = 110,
    _q_CWindows_CSystem_CVirtualKey_Divide = 111,
    _q_CWindows_CSystem_CVirtualKey_F1 = 112,
    _q_CWindows_CSystem_CVirtualKey_F2 = 113,
    _q_CWindows_CSystem_CVirtualKey_F3 = 114,
    _q_CWindows_CSystem_CVirtualKey_F4 = 115,
    _q_CWindows_CSystem_CVirtualKey_F5 = 116,
    _q_CWindows_CSystem_CVirtualKey_F6 = 117,
    _q_CWindows_CSystem_CVirtualKey_F7 = 118,
    _q_CWindows_CSystem_CVirtualKey_F8 = 119,
    _q_CWindows_CSystem_CVirtualKey_F9 = 120,
    _q_CWindows_CSystem_CVirtualKey_F10 = 121,
    _q_CWindows_CSystem_CVirtualKey_F11 = 122,
    _q_CWindows_CSystem_CVirtualKey_F12 = 123,
    _q_CWindows_CSystem_CVirtualKey_F13 = 124,
    _q_CWindows_CSystem_CVirtualKey_F14 = 125,
    _q_CWindows_CSystem_CVirtualKey_F15 = 126,
    _q_CWindows_CSystem_CVirtualKey_F16 = 127,
    _q_CWindows_CSystem_CVirtualKey_F17 = 128,
    _q_CWindows_CSystem_CVirtualKey_F18 = 129,
    _q_CWindows_CSystem_CVirtualKey_F19 = 130,
    _q_CWindows_CSystem_CVirtualKey_F20 = 131,
    _q_CWindows_CSystem_CVirtualKey_F21 = 132,
    _q_CWindows_CSystem_CVirtualKey_F22 = 133,
    _q_CWindows_CSystem_CVirtualKey_F23 = 134,
    _q_CWindows_CSystem_CVirtualKey_F24 = 135,
    _q_CWindows_CSystem_CVirtualKey_NavigationView = 136,
    _q_CWindows_CSystem_CVirtualKey_NavigationMenu = 137,
    _q_CWindows_CSystem_CVirtualKey_NavigationUp = 138,
    _q_CWindows_CSystem_CVirtualKey_NavigationDown = 139,
    _q_CWindows_CSystem_CVirtualKey_NavigationLeft = 140,
    _q_CWindows_CSystem_CVirtualKey_NavigationRight = 141,
    _q_CWindows_CSystem_CVirtualKey_NavigationAccept = 142,
    _q_CWindows_CSystem_CVirtualKey_NavigationCancel = 143,
    _q_CWindows_CSystem_CVirtualKey_NumberKeyLock = 144,
    _q_CWindows_CSystem_CVirtualKey_Scroll = 145,
    _q_CWindows_CSystem_CVirtualKey_LeftShift = 160,
    _q_CWindows_CSystem_CVirtualKey_RightShift = 161,
    _q_CWindows_CSystem_CVirtualKey_LeftControl = 162,
    _q_CWindows_CSystem_CVirtualKey_RightControl = 163,
    _q_CWindows_CSystem_CVirtualKey_LeftMenu = 164,
    _q_CWindows_CSystem_CVirtualKey_RightMenu = 165,
    _q_CWindows_CSystem_CVirtualKey_GoBack = 166,
    _q_CWindows_CSystem_CVirtualKey_GoForward = 167,
    _q_CWindows_CSystem_CVirtualKey_Refresh = 168,
    _q_CWindows_CSystem_CVirtualKey_Stop = 169,
    _q_CWindows_CSystem_CVirtualKey_Search = 170,
    _q_CWindows_CSystem_CVirtualKey_Favorites = 171,
    _q_CWindows_CSystem_CVirtualKey_GoHome = 172,
    _q_CWindows_CSystem_CVirtualKey_GamepadA = 195,
    _q_CWindows_CSystem_CVirtualKey_GamepadB = 196,
    _q_CWindows_CSystem_CVirtualKey_GamepadX = 197,
    _q_CWindows_CSystem_CVirtualKey_GamepadY = 198,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightShoulder = 199,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftShoulder = 200,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftTrigger = 201,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightTrigger = 202,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadUp = 203,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadDown = 204,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadLeft = 205,
    _q_CWindows_CSystem_CVirtualKey_GamepadDPadRight = 206,
    _q_CWindows_CSystem_CVirtualKey_GamepadMenu = 207,
    _q_CWindows_CSystem_CVirtualKey_GamepadView = 208,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickButton = 209,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickButton = 210,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickUp = 211,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickDown = 212,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickRight = 213,
    _q_CWindows_CSystem_CVirtualKey_GamepadLeftThumbstickLeft = 214,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickUp = 215,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickDown = 216,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickRight = 217,
    _q_CWindows_CSystem_CVirtualKey_GamepadRightThumbstickLeft = 218,
} _q_CWindows_CSystem_CVirtualKey;
typedef enum _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType
{
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_Character = 2,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_DeadCharacter = 3,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_KeyDown = 0,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_KeyUp = 1,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_SystemCharacter = 6,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_SystemDeadCharacter = 7,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_SystemKeyDown = 4,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_SystemKeyUp = 5,
    _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType_UnicodeCharacter = 8,
} _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType;
typedef enum _q_CWindows_CUI_CNotifications_CNotificationMirroring
{
    _q_CWindows_CUI_CNotifications_CNotificationMirroring_Allowed = 0,
    _q_CWindows_CUI_CNotifications_CNotificationMirroring_Disabled = 1,
} _q_CWindows_CUI_CNotifications_CNotificationMirroring;
typedef enum _q_CWindows_CUI_CNotifications_CNotificationSetting
{
    _q_CWindows_CUI_CNotifications_CNotificationSetting_Enabled = 0,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledForApplication = 1,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledForUser = 2,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledByGroupPolicy = 3,
    _q_CWindows_CUI_CNotifications_CNotificationSetting_DisabledByManifest = 4,
} _q_CWindows_CUI_CNotifications_CNotificationSetting;
typedef enum _q_CWindows_CUI_CNotifications_CNotificationUpdateResult
{
    _q_CWindows_CUI_CNotifications_CNotificationUpdateResult_Succeeded = 0,
    _q_CWindows_CUI_CNotifications_CNotificationUpdateResult_Failed = 1,
    _q_CWindows_CUI_CNotifications_CNotificationUpdateResult_NotificationNotFound = 2,
} _q_CWindows_CUI_CNotifications_CNotificationUpdateResult;
typedef enum _q_CWindows_CUI_CNotifications_CToastNotificationPriority
{
    _q_CWindows_CUI_CNotifications_CToastNotificationPriority_Default = 0,
    _q_CWindows_CUI_CNotifications_CToastNotificationPriority_High = 1,
} _q_CWindows_CUI_CNotifications_CToastNotificationPriority;
typedef enum _q_CWindows_CUI_CNotifications_CToastTemplateType
{
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText01 = 0,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText02 = 1,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText03 = 2,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastImageAndText04 = 3,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText01 = 4,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText02 = 5,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText03 = 6,
    _q_CWindows_CUI_CNotifications_CToastTemplateType_ToastText04 = 7,
} _q_CWindows_CUI_CNotifications_CToastTemplateType;
typedef enum _q_CWindows_CUI_CText_CCore_CCoreTextInputScope
{
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Default = 0,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Url = 1,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_FilePath = 2,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_FileName = 3,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_EmailUserName = 4,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_EmailAddress = 5,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_UserName = 6,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PersonalFullName = 7,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PersonalNamePrefix = 8,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PersonalGivenName = 9,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PersonalMiddleName = 10,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PersonalSurname = 11,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PersonalNameSuffix = 12,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Address = 13,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AddressPostalCode = 14,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AddressStreet = 15,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AddressStateOrProvince = 16,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AddressCity = 17,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AddressCountryName = 18,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AddressCountryShortName = 19,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_CurrencyAmountAndSymbol = 20,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_CurrencyAmount = 21,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Date = 22,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_DateMonth = 23,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_DateDay = 24,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_DateYear = 25,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_DateMonthName = 26,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_DateDayName = 27,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Number = 29,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_SingleCharacter = 30,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Password = 31,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_TelephoneNumber = 32,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_TelephoneCountryCode = 33,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_TelephoneAreaCode = 34,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_TelephoneLocalNumber = 35,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Time = 36,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_TimeHour = 37,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_TimeMinuteOrSecond = 38,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_NumberFullWidth = 39,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AlphanumericHalfWidth = 40,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_AlphanumericFullWidth = 41,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_CurrencyChinese = 42,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Bopomofo = 43,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Hiragana = 44,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_KatakanaHalfWidth = 45,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_KatakanaFullWidth = 46,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Hanja = 47,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_HangulHalfWidth = 48,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_HangulFullWidth = 49,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Search = 50,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Formula = 51,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_SearchIncremental = 52,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_ChineseHalfWidth = 53,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_ChineseFullWidth = 54,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_NativeScript = 55,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Text = 57,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Chat = 58,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_NameOrPhoneNumber = 59,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_EmailUserNameOrAddress = 60,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Private = 61,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Maps = 62,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PasswordNumeric = 63,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_FormulaNumber = 67,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_ChatWithoutEmoji = 68,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_Digits = 28,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PinNumeric = 64,
    _q_CWindows_CUI_CText_CCore_CCoreTextInputScope_PinAlphanumeric = 65,
} _q_CWindows_CUI_CText_CCore_CCoreTextInputScope;
typedef enum _q_CWindows_CUI_CText_CFontStretch
{
    _q_CWindows_CUI_CText_CFontStretch_Undefined = 0,
    _q_CWindows_CUI_CText_CFontStretch_UltraCondensed = 1,
    _q_CWindows_CUI_CText_CFontStretch_ExtraCondensed = 2,
    _q_CWindows_CUI_CText_CFontStretch_Condensed = 3,
    _q_CWindows_CUI_CText_CFontStretch_SemiCondensed = 4,
    _q_CWindows_CUI_CText_CFontStretch_Normal = 5,
    _q_CWindows_CUI_CText_CFontStretch_SemiExpanded = 6,
    _q_CWindows_CUI_CText_CFontStretch_Expanded = 7,
    _q_CWindows_CUI_CText_CFontStretch_ExtraExpanded = 8,
    _q_CWindows_CUI_CText_CFontStretch_UltraExpanded = 9,
} _q_CWindows_CUI_CText_CFontStretch;
typedef enum _q_CWindows_CUI_CText_CFontStyle
{
    _q_CWindows_CUI_CText_CFontStyle_Normal = 0,
    _q_CWindows_CUI_CText_CFontStyle_Oblique = 1,
    _q_CWindows_CUI_CText_CFontStyle_Italic = 2,
} _q_CWindows_CUI_CText_CFontStyle;
typedef enum _q_CWindows_CUI_CText_CTextDecorations
{
    _q_CWindows_CUI_CText_CTextDecorations_None = 0,
    _q_CWindows_CUI_CText_CTextDecorations_Underline = 1,
    _q_CWindows_CUI_CText_CTextDecorations_Strikethrough = 2,
} _q_CWindows_CUI_CText_CTextDecorations;
typedef enum _q_CWindows_CUI_CXaml_CInterop_CTypeKind
{
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind_Primitive = 0,
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind_Metadata = 1,
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind_Custom = 2,
} _q_CWindows_CUI_CXaml_CInterop_CTypeKind;
typedef enum _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_ParsedElement = 0,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Script = 1,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Image = 2,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Link = 3,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Style = 4,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_XmlHttpRequest = 5,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Media = 6,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_HtmlDownload = 7,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Prefetch = 8,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Other = 9,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_CrossOriginPreFlight = 10,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Fetch = 11,
    _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Beacon = 12,
} _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator;
typedef enum _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior
{
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior_Default = 0,
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior_MostRecent = 1,
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior_OnlyFromCache = 2,
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior_NoCache = 3,
} _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior;
typedef enum _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheWriteBehavior
{
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheWriteBehavior_Default = 0,
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheWriteBehavior_NoCache = 1,
} _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheWriteBehavior;
typedef enum _q_CWindows_CWeb_CHttp_CFilters_CHttpCookieUsageBehavior
{
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCookieUsageBehavior_Default = 0,
    _q_CWindows_CWeb_CHttp_CFilters_CHttpCookieUsageBehavior_NoCookies = 1,
} _q_CWindows_CWeb_CHttp_CFilters_CHttpCookieUsageBehavior;
typedef enum _q_CWindows_CWeb_CHttp_CHttpCompletionOption
{
    _q_CWindows_CWeb_CHttp_CHttpCompletionOption_ResponseContentRead = 0,
    _q_CWindows_CWeb_CHttp_CHttpCompletionOption_ResponseHeadersRead = 1,
} _q_CWindows_CWeb_CHttp_CHttpCompletionOption;
typedef enum _q_CWindows_CWeb_CHttp_CHttpProgressStage
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_DetectingProxy = 10,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ResolvingName = 20,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ConnectingToServer = 30,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_NegotiatingSsl = 40,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingHeaders = 50,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingContent = 60,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_WaitingForResponse = 70,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingHeaders = 80,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingContent = 90,
} _q_CWindows_CWeb_CHttp_CHttpProgressStage;
typedef enum _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource
{
    _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_Cache = 1,
    _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_Network = 2,
} _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource;
typedef enum _q_CWindows_CWeb_CHttp_CHttpStatusCode
{
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Continue = 100,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SwitchingProtocols = 101,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Processing = 102,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Ok = 200,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Created = 201,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Accepted = 202,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NonAuthoritativeInformation = 203,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NoContent = 204,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ResetContent = 205,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PartialContent = 206,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultiStatus = 207,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_AlreadyReported = 208,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_IMUsed = 226,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultipleChoices = 300,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MovedPermanently = 301,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Found = 302,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SeeOther = 303,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotModified = 304,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UseProxy = 305,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TemporaryRedirect = 307,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PermanentRedirect = 308,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadRequest = 400,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Unauthorized = 401,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PaymentRequired = 402,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Forbidden = 403,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotFound = 404,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MethodNotAllowed = 405,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotAcceptable = 406,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ProxyAuthenticationRequired = 407,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestTimeout = 408,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Conflict = 409,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Gone = 410,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LengthRequired = 411,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionFailed = 412,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestEntityTooLarge = 413,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestUriTooLong = 414,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnsupportedMediaType = 415,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestedRangeNotSatisfiable = 416,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ExpectationFailed = 417,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnprocessableEntity = 422,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Locked = 423,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_FailedDependency = 424,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UpgradeRequired = 426,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionRequired = 428,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TooManyRequests = 429,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestHeaderFieldsTooLarge = 431,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InternalServerError = 500,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotImplemented = 501,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadGateway = 502,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ServiceUnavailable = 503,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_GatewayTimeout = 504,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_HttpVersionNotSupported = 505,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_VariantAlsoNegotiates = 506,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InsufficientStorage = 507,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LoopDetected = 508,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotExtended = 510,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NetworkAuthenticationRequired = 511,
} _q_CWindows_CWeb_CHttp_CHttpStatusCode;
typedef enum _q_CWindows_CWeb_CHttp_CHttpVersion
{
    _q_CWindows_CWeb_CHttp_CHttpVersion_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpVersion_Http10 = 1,
    _q_CWindows_CWeb_CHttp_CHttpVersion_Http11 = 2,
    _q_CWindows_CWeb_CHttp_CHttpVersion_Http20 = 3,
} _q_CWindows_CWeb_CHttp_CHttpVersion;
typedef enum _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus
{
    _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_Unknown = 0,
    _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_MissingRequiredElement = 1,
    _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_MissingRequiredAttribute = 2,
    _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_InvalidXml = 3,
    _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_UnexpectedContent = 4,
    _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus_UnsupportedFormat = 5,
} _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus;
typedef enum _q_CWindows_CWeb_CSyndication_CSyndicationFormat
{
    _q_CWindows_CWeb_CSyndication_CSyndicationFormat_Atom10 = 0,
    _q_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss20 = 1,
    _q_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss10 = 2,
    _q_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss092 = 3,
    _q_CWindows_CWeb_CSyndication_CSyndicationFormat_Rss091 = 4,
    _q_CWindows_CWeb_CSyndication_CSyndicationFormat_Atom03 = 5,
} _q_CWindows_CWeb_CSyndication_CSyndicationFormat;
typedef enum _q_CWindows_CWeb_CSyndication_CSyndicationTextType
{
    _q_CWindows_CWeb_CSyndication_CSyndicationTextType_Text = 0,
    _q_CWindows_CWeb_CSyndication_CSyndicationTextType_Html = 1,
    _q_CWindows_CWeb_CSyndication_CSyndicationTextType_Xhtml = 2,
} _q_CWindows_CWeb_CSyndication_CSyndicationTextType;
typedef enum _q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyRoutingStage
{
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyRoutingStage_Tunneling = 0,
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyRoutingStage_Bubbling = 1,
} _q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyRoutingStage;
typedef enum _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason
{
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason_Programmatic = 0,
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason_Next = 1,
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason_Previous = 2,
} _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason;
typedef enum _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState
{
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState_Default = 0,
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState_Disabled = 1,
    _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState_Enabled = 2,
} _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState;
typedef enum _q_CWindows_CWeb_CUI_CWebViewControlPermissionState
{
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Unknown = 0,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Defer = 1,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Allow = 2,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Deny = 3,
} _q_CWindows_CWeb_CUI_CWebViewControlPermissionState;
typedef enum _q_CWindows_CWeb_CUI_CWebViewControlPermissionType
{
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Geolocation = 0,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_UnlimitedIndexedDBQuota = 1,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Media = 2,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_PointerLock = 3,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_WebNotifications = 4,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Screen = 5,
    _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_ImmersiveView = 6,
} _q_CWindows_CWeb_CUI_CWebViewControlPermissionType;
typedef enum _q_CWindows_CWeb_CWebErrorStatus
{
    _q_CWindows_CWeb_CWebErrorStatus_Unknown = 0,
    _q_CWindows_CWeb_CWebErrorStatus_CertificateCommonNameIsIncorrect = 1,
    _q_CWindows_CWeb_CWebErrorStatus_CertificateExpired = 2,
    _q_CWindows_CWeb_CWebErrorStatus_CertificateContainsErrors = 3,
    _q_CWindows_CWeb_CWebErrorStatus_CertificateRevoked = 4,
    _q_CWindows_CWeb_CWebErrorStatus_CertificateIsInvalid = 5,
    _q_CWindows_CWeb_CWebErrorStatus_ServerUnreachable = 6,
    _q_CWindows_CWeb_CWebErrorStatus_Timeout = 7,
    _q_CWindows_CWeb_CWebErrorStatus_ErrorHttpInvalidServerResponse = 8,
    _q_CWindows_CWeb_CWebErrorStatus_ConnectionAborted = 9,
    _q_CWindows_CWeb_CWebErrorStatus_ConnectionReset = 10,
    _q_CWindows_CWeb_CWebErrorStatus_Disconnected = 11,
    _q_CWindows_CWeb_CWebErrorStatus_HttpToHttpsOnRedirection = 12,
    _q_CWindows_CWeb_CWebErrorStatus_HttpsToHttpOnRedirection = 13,
    _q_CWindows_CWeb_CWebErrorStatus_CannotConnect = 14,
    _q_CWindows_CWeb_CWebErrorStatus_HostNameNotResolved = 15,
    _q_CWindows_CWeb_CWebErrorStatus_OperationCanceled = 16,
    _q_CWindows_CWeb_CWebErrorStatus_RedirectFailed = 17,
    _q_CWindows_CWeb_CWebErrorStatus_UnexpectedStatusCode = 18,
    _q_CWindows_CWeb_CWebErrorStatus_UnexpectedRedirection = 19,
    _q_CWindows_CWeb_CWebErrorStatus_UnexpectedClientError = 20,
    _q_CWindows_CWeb_CWebErrorStatus_UnexpectedServerError = 21,
    _q_CWindows_CWeb_CWebErrorStatus_InsufficientRangeSupport = 22,
    _q_CWindows_CWeb_CWebErrorStatus_MissingContentLengthSupport = 23,
    _q_CWindows_CWeb_CWebErrorStatus_MultipleChoices = 300,
    _q_CWindows_CWeb_CWebErrorStatus_MovedPermanently = 301,
    _q_CWindows_CWeb_CWebErrorStatus_Found = 302,
    _q_CWindows_CWeb_CWebErrorStatus_SeeOther = 303,
    _q_CWindows_CWeb_CWebErrorStatus_NotModified = 304,
    _q_CWindows_CWeb_CWebErrorStatus_UseProxy = 305,
    _q_CWindows_CWeb_CWebErrorStatus_TemporaryRedirect = 307,
    _q_CWindows_CWeb_CWebErrorStatus_BadRequest = 400,
    _q_CWindows_CWeb_CWebErrorStatus_Unauthorized = 401,
    _q_CWindows_CWeb_CWebErrorStatus_PaymentRequired = 402,
    _q_CWindows_CWeb_CWebErrorStatus_Forbidden = 403,
    _q_CWindows_CWeb_CWebErrorStatus_NotFound = 404,
    _q_CWindows_CWeb_CWebErrorStatus_MethodNotAllowed = 405,
    _q_CWindows_CWeb_CWebErrorStatus_NotAcceptable = 406,
    _q_CWindows_CWeb_CWebErrorStatus_ProxyAuthenticationRequired = 407,
    _q_CWindows_CWeb_CWebErrorStatus_RequestTimeout = 408,
    _q_CWindows_CWeb_CWebErrorStatus_Conflict = 409,
    _q_CWindows_CWeb_CWebErrorStatus_Gone = 410,
    _q_CWindows_CWeb_CWebErrorStatus_LengthRequired = 411,
    _q_CWindows_CWeb_CWebErrorStatus_PreconditionFailed = 412,
    _q_CWindows_CWeb_CWebErrorStatus_RequestEntityTooLarge = 413,
    _q_CWindows_CWeb_CWebErrorStatus_RequestUriTooLong = 414,
    _q_CWindows_CWeb_CWebErrorStatus_UnsupportedMediaType = 415,
    _q_CWindows_CWeb_CWebErrorStatus_RequestedRangeNotSatisfiable = 416,
    _q_CWindows_CWeb_CWebErrorStatus_ExpectationFailed = 417,
    _q_CWindows_CWeb_CWebErrorStatus_InternalServerError = 500,
    _q_CWindows_CWeb_CWebErrorStatus_NotImplemented = 501,
    _q_CWindows_CWeb_CWebErrorStatus_BadGateway = 502,
    _q_CWindows_CWeb_CWebErrorStatus_ServiceUnavailable = 503,
    _q_CWindows_CWeb_CWebErrorStatus_GatewayTimeout = 504,
    _q_CWindows_CWeb_CWebErrorStatus_HttpVersionNotSupported = 505,
} _q_CWindows_CWeb_CWebErrorStatus;
// forward decls for value types
typedef struct _q_CWindows_CData_CText_CTextSegment _q_CWindows_CData_CText_CTextSegment;
typedef struct _q_CWindows_CDevices_CGeolocation_CBasicGeoposition _q_CWindows_CDevices_CGeolocation_CBasicGeoposition;
typedef struct _q_CWindows_CFoundation_CDateTime _q_CWindows_CFoundation_CDateTime;
typedef struct _q_CWindows_CFoundation_CEventRegistrationToken _q_CWindows_CFoundation_CEventRegistrationToken;
typedef struct _q_CWindows_CFoundation_CHResult _q_CWindows_CFoundation_CHResult;
typedef struct _q_CWindows_CFoundation_CNumerics_CMatrix3x2 _q_CWindows_CFoundation_CNumerics_CMatrix3x2;
typedef struct _q_CWindows_CFoundation_CNumerics_CMatrix4x4 _q_CWindows_CFoundation_CNumerics_CMatrix4x4;
typedef struct _q_CWindows_CFoundation_CNumerics_CVector2 _q_CWindows_CFoundation_CNumerics_CVector2;
typedef struct _q_CWindows_CFoundation_CNumerics_CVector3 _q_CWindows_CFoundation_CNumerics_CVector3;
typedef struct _q_CWindows_CFoundation_CNumerics_CVector4 _q_CWindows_CFoundation_CNumerics_CVector4;
typedef struct _q_CWindows_CFoundation_CPoint _q_CWindows_CFoundation_CPoint;
typedef struct _q_CWindows_CFoundation_CRect _q_CWindows_CFoundation_CRect;
typedef struct _q_CWindows_CFoundation_CSize _q_CWindows_CFoundation_CSize;
typedef struct _q_CWindows_CFoundation_CTimeSpan _q_CWindows_CFoundation_CTimeSpan;
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription;
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription;
typedef struct _q_CWindows_CGraphics_CImaging_CBitmapSize _q_CWindows_CGraphics_CImaging_CBitmapSize;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress;
typedef struct _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress _q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CProfileUsage _q_CWindows_CNetworking_CNetworkOperators_CProfileUsage;
typedef struct _q_CWindows_CNetworking_CSockets_CBandwidthStatistics _q_CWindows_CNetworking_CSockets_CBandwidthStatistics;
typedef struct _q_CWindows_CNetworking_CSockets_CRoundTripTimeStatistics _q_CWindows_CNetworking_CSockets_CRoundTripTimeStatistics;
typedef struct _q_CWindows_CStorage_CAccessCache_CAccessListEntry _q_CWindows_CStorage_CAccessCache_CAccessListEntry;
typedef struct _q_CWindows_CStorage_CSearch_CSortEntry _q_CWindows_CStorage_CSearch_CSortEntry;
typedef struct _q_CWindows_CUI_CColor _q_CWindows_CUI_CColor;
typedef struct _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus;
typedef struct _q_CWindows_CUI_CText_CFontWeight _q_CWindows_CUI_CText_CFontWeight;
typedef struct _q_CWindows_CUI_CXaml_CInterop_CTypeName _q_CWindows_CUI_CXaml_CInterop_CTypeName;
typedef struct _q_CWindows_CWeb_CHttp_CHttpProgress _q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _q_CWindows_CWeb_CSyndication_CRetrievalProgress _q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _q_CWindows_CWeb_CSyndication_CTransferProgress _q_CWindows_CWeb_CSyndication_CTransferProgress;
// forward decls for interfaces
typedef struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser;
typedef struct _q_CWindows_CApplicationModel_CActivation_CISplashScreen _q_CWindows_CApplicationModel_CActivation_CISplashScreen;
typedef struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTask _q_CWindows_CApplicationModel_CBackground_CIBackgroundTask;
typedef struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance;
typedef struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger _q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger;
typedef struct _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage;
typedef struct _q_CWindows_CData_CHtml_CIHtmlUtilities _q_CWindows_CData_CHtml_CIHtmlUtilities;
typedef struct _q_CWindows_CData_CJson_CIJsonArray _q_CWindows_CData_CJson_CIJsonArray;
typedef struct _q_CWindows_CData_CJson_CIJsonArrayStatics _q_CWindows_CData_CJson_CIJsonArrayStatics;
typedef struct _q_CWindows_CData_CJson_CIJsonErrorStatics2 _q_CWindows_CData_CJson_CIJsonErrorStatics2;
typedef struct _q_CWindows_CData_CJson_CIJsonObject _q_CWindows_CData_CJson_CIJsonObject;
typedef struct _q_CWindows_CData_CJson_CIJsonObjectStatics _q_CWindows_CData_CJson_CIJsonObjectStatics;
typedef struct _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues;
typedef struct _q_CWindows_CData_CJson_CIJsonValue _q_CWindows_CData_CJson_CIJsonValue;
typedef struct _q_CWindows_CData_CJson_CIJsonValueStatics _q_CWindows_CData_CJson_CIJsonValueStatics;
typedef struct _q_CWindows_CData_CJson_CIJsonValueStatics2 _q_CWindows_CData_CJson_CIJsonValueStatics2;
typedef struct _q_CWindows_CData_CPdf_CIPdfDocument _q_CWindows_CData_CPdf_CIPdfDocument;
typedef struct _q_CWindows_CData_CPdf_CIPdfDocumentStatics _q_CWindows_CData_CPdf_CIPdfDocumentStatics;
typedef struct _q_CWindows_CData_CPdf_CIPdfPage _q_CWindows_CData_CPdf_CIPdfPage;
typedef struct _q_CWindows_CData_CPdf_CIPdfPageDimensions _q_CWindows_CData_CPdf_CIPdfPageDimensions;
typedef struct _q_CWindows_CData_CPdf_CIPdfPageRenderOptions _q_CWindows_CData_CPdf_CIPdfPageRenderOptions;
typedef struct _q_CWindows_CData_CText_CIAlternateWordForm _q_CWindows_CData_CText_CIAlternateWordForm;
typedef struct _q_CWindows_CData_CText_CISelectableWordSegment _q_CWindows_CData_CText_CISelectableWordSegment;
typedef struct _q_CWindows_CData_CText_CISelectableWordsSegmenter _q_CWindows_CData_CText_CISelectableWordsSegmenter;
typedef struct _q_CWindows_CData_CText_CISelectableWordsSegmenterFactory _q_CWindows_CData_CText_CISelectableWordsSegmenterFactory;
typedef struct _q_CWindows_CData_CText_CISemanticTextQuery _q_CWindows_CData_CText_CISemanticTextQuery;
typedef struct _q_CWindows_CData_CText_CISemanticTextQueryFactory _q_CWindows_CData_CText_CISemanticTextQueryFactory;
typedef struct _q_CWindows_CData_CText_CITextConversionGenerator _q_CWindows_CData_CText_CITextConversionGenerator;
typedef struct _q_CWindows_CData_CText_CITextConversionGeneratorFactory _q_CWindows_CData_CText_CITextConversionGeneratorFactory;
typedef struct _q_CWindows_CData_CText_CITextPhoneme _q_CWindows_CData_CText_CITextPhoneme;
typedef struct _q_CWindows_CData_CText_CITextPredictionGenerator _q_CWindows_CData_CText_CITextPredictionGenerator;
typedef struct _q_CWindows_CData_CText_CITextPredictionGenerator2 _q_CWindows_CData_CText_CITextPredictionGenerator2;
typedef struct _q_CWindows_CData_CText_CITextPredictionGeneratorFactory _q_CWindows_CData_CText_CITextPredictionGeneratorFactory;
typedef struct _q_CWindows_CData_CText_CITextReverseConversionGenerator _q_CWindows_CData_CText_CITextReverseConversionGenerator;
typedef struct _q_CWindows_CData_CText_CITextReverseConversionGenerator2 _q_CWindows_CData_CText_CITextReverseConversionGenerator2;
typedef struct _q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory _q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory;
typedef struct _q_CWindows_CData_CText_CIUnicodeCharactersStatics _q_CWindows_CData_CText_CIUnicodeCharactersStatics;
typedef struct _q_CWindows_CData_CText_CIWordSegment _q_CWindows_CData_CText_CIWordSegment;
typedef struct _q_CWindows_CData_CText_CIWordsSegmenter _q_CWindows_CData_CText_CIWordsSegmenter;
typedef struct _q_CWindows_CData_CText_CIWordsSegmenterFactory _q_CWindows_CData_CText_CIWordsSegmenterFactory;
typedef struct _q_CWindows_CData_CXml_CDom_CIDtdEntity _q_CWindows_CData_CXml_CDom_CIDtdEntity;
typedef struct _q_CWindows_CData_CXml_CDom_CIDtdNotation _q_CWindows_CData_CXml_CDom_CIDtdNotation;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlAttribute _q_CWindows_CData_CXml_CDom_CIXmlAttribute;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCDataSection _q_CWindows_CData_CXml_CDom_CIXmlCDataSection;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCharacterData _q_CWindows_CData_CXml_CDom_CIXmlCharacterData;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlComment _q_CWindows_CData_CXml_CDom_CIXmlComment;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocument _q_CWindows_CData_CXml_CDom_CIXmlDocument;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2 _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics _q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentType _q_CWindows_CData_CXml_CDom_CIXmlDocumentType;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlElement _q_CWindows_CData_CXml_CDom_CIXmlElement;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlEntityReference _q_CWindows_CData_CXml_CDom_CIXmlEntityReference;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNode _q_CWindows_CData_CXml_CDom_CIXmlNode;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeList _q_CWindows_CData_CXml_CDom_CIXmlNodeList;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSelector _q_CWindows_CData_CXml_CDom_CIXmlNodeSelector;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlText _q_CWindows_CData_CXml_CDom_CIXmlText;
typedef struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessor _q_CWindows_CData_CXml_CXsl_CIXsltProcessor;
typedef struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessor2 _q_CWindows_CData_CXml_CXsl_CIXsltProcessor2;
typedef struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory _q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory;
typedef struct _q_CWindows_CDevices_CGeolocation_CIGeolocator _q_CWindows_CDevices_CGeolocation_CIGeolocator;
typedef struct _q_CWindows_CDevices_CGeolocation_CIGeopoint _q_CWindows_CDevices_CGeolocation_CIGeopoint;
typedef struct _q_CWindows_CDevices_CGeolocation_CIGeopointFactory _q_CWindows_CDevices_CGeolocation_CIGeopointFactory;
typedef struct _q_CWindows_CDevices_CSms_CISmsMessage _q_CWindows_CDevices_CSms_CISmsMessage;
typedef struct _q_CWindows_CFoundation_CCollections_CIPropertySet _q_CWindows_CFoundation_CCollections_CIPropertySet;
typedef struct _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs;
typedef struct _q_CWindows_CFoundation_CIAsyncAction _q_CWindows_CFoundation_CIAsyncAction;
typedef struct _q_CWindows_CFoundation_CIAsyncInfo _q_CWindows_CFoundation_CIAsyncInfo;
typedef struct _q_CWindows_CFoundation_CIClosable _q_CWindows_CFoundation_CIClosable;
typedef struct _q_CWindows_CFoundation_CIDeferral _q_CWindows_CFoundation_CIDeferral;
typedef struct _q_CWindows_CFoundation_CIDeferralFactory _q_CWindows_CFoundation_CIDeferralFactory;
typedef struct _q_CWindows_CFoundation_CIMemoryBuffer _q_CWindows_CFoundation_CIMemoryBuffer;
typedef struct _q_CWindows_CFoundation_CIMemoryBufferFactory _q_CWindows_CFoundation_CIMemoryBufferFactory;
typedef struct _q_CWindows_CFoundation_CIStringable _q_CWindows_CFoundation_CIStringable;
typedef struct _q_CWindows_CFoundation_CIUriEscapeStatics _q_CWindows_CFoundation_CIUriEscapeStatics;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClass _q_CWindows_CFoundation_CIUriRuntimeClass;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory _q_CWindows_CFoundation_CIUriRuntimeClassFactory;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri;
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass;
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory;
typedef struct _q_CWindows_CGlobalization_CILanguage _q_CWindows_CGlobalization_CILanguage;
typedef struct _q_CWindows_CGlobalization_CILanguageFactory _q_CWindows_CGlobalization_CILanguageFactory;
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface;
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmap _q_CWindows_CGraphics_CImaging_CISoftwareBitmap;
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2 _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3 _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2 _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2 _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3 _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2 _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2 _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3 _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4 _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5 _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2 _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3 _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3;
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4 _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage _q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage;
typedef struct _q_CWindows_CNetworking_CConnectivity_CICellularApnContext _q_CWindows_CNetworking_CConnectivity_CICellularApnContext;
typedef struct _q_CWindows_CNetworking_CConnectivity_CICellularApnContext2 _q_CWindows_CNetworking_CConnectivity_CICellularApnContext2;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionCost _q_CWindows_CNetworking_CConnectivity_CIConnectionCost;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionCost2 _q_CWindows_CNetworking_CConnectivity_CIConnectionCost2;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2 _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3 _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4 _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5 _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2 _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3 _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionSession _q_CWindows_CNetworking_CConnectivity_CIConnectionSession;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval _q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics _q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIDataUsage _q_CWindows_CNetworking_CConnectivity_CIDataUsage;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIIPInformation _q_CWindows_CNetworking_CConnectivity_CIIPInformation;
typedef struct _q_CWindows_CNetworking_CConnectivity_CILanIdentifier _q_CWindows_CNetworking_CConnectivity_CILanIdentifier;
typedef struct _q_CWindows_CNetworking_CConnectivity_CILanIdentifierData _q_CWindows_CNetworking_CConnectivity_CILanIdentifierData;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2 _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkItem _q_CWindows_CNetworking_CConnectivity_CINetworkItem;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2 _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2;
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkUsage _q_CWindows_CNetworking_CConnectivity_CINetworkUsage;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage _q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration _q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIRoutePolicy _q_CWindows_CNetworking_CConnectivity_CIRoutePolicy;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails;
typedef struct _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2 _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2;
typedef struct _q_CWindows_CNetworking_CIEndpointPair _q_CWindows_CNetworking_CIEndpointPair;
typedef struct _q_CWindows_CNetworking_CIEndpointPairFactory _q_CWindows_CNetworking_CIEndpointPairFactory;
typedef struct _q_CWindows_CNetworking_CIHostName _q_CWindows_CNetworking_CIHostName;
typedef struct _q_CWindows_CNetworking_CIHostNameFactory _q_CWindows_CNetworking_CIHostNameFactory;
typedef struct _q_CWindows_CNetworking_CIHostNameStatics _q_CWindows_CNetworking_CIHostNameStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESim _q_CWindows_CNetworking_CNetworkOperators_CIESim;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESim2 _q_CWindows_CNetworking_CNetworkOperators_CIESim2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics _q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfile _q_CWindows_CNetworking_CNetworkOperators_CIESimProfile;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2 _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics _q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics _q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics _q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics _q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3 _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2 _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2 _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3 _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4 _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails _q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdReply _q_CWindows_CNetworking_CNetworkOperators_CIUssdReply;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdSession _q_CWindows_CNetworking_CNetworkOperators_CIUssdSession;
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics;
typedef struct _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs;
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics;
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2 _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2;
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerInformation _q_CWindows_CNetworking_CProximity_CIPeerInformation;
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerInformation3 _q_CWindows_CNetworking_CProximity_CIPeerInformation3;
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService _q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService;
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerWatcher _q_CWindows_CNetworking_CProximity_CIPeerWatcher;
typedef struct _q_CWindows_CNetworking_CProximity_CIProximityDevice _q_CWindows_CNetworking_CProximity_CIProximityDevice;
typedef struct _q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics _q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics;
typedef struct _q_CWindows_CNetworking_CProximity_CIProximityMessage _q_CWindows_CNetworking_CProximity_CIProximityMessage;
typedef struct _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2 _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2 _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3 _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4 _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification _q_CWindows_CNetworking_CPushNotifications_CIRawNotification;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification2 _q_CWindows_CNetworking_CPushNotifications_CIRawNotification2;
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification3 _q_CWindows_CNetworking_CPushNotifications_CIRawNotification3;
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult;
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance;
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory;
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher;
typedef struct _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger;
typedef struct _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2 _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2;
typedef struct _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket _q_CWindows_CNetworking_CSockets_CIDatagramSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket2 _q_CWindows_CNetworking_CSockets_CIDatagramSocket2;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket3 _q_CWindows_CNetworking_CSockets_CIDatagramSocket3;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2 _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3 _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs;
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics _q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket _q_CWindows_CNetworking_CSockets_CIMessageWebSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket2 _q_CWindows_CNetworking_CSockets_CIMessageWebSocket2;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket3 _q_CWindows_CNetworking_CSockets_CIMessageWebSocket3;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2 _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs;
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2 _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2;
typedef struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityContext _q_CWindows_CNetworking_CSockets_CISocketActivityContext;
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory _q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory;
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityInformation _q_CWindows_CNetworking_CSockets_CISocketActivityInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics _q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics;
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails _q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails;
typedef struct _q_CWindows_CNetworking_CSockets_CISocketErrorStatics _q_CWindows_CNetworking_CSockets_CISocketErrorStatics;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocket _q_CWindows_CNetworking_CSockets_CIStreamSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocket2 _q_CWindows_CNetworking_CSockets_CIStreamSocket2;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocket3 _q_CWindows_CNetworking_CSockets_CIStreamSocket3;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl _q_CWindows_CNetworking_CSockets_CIStreamSocketControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl2 _q_CWindows_CNetworking_CSockets_CIStreamSocketControl2;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl3 _q_CWindows_CNetworking_CSockets_CIStreamSocketControl3;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl4 _q_CWindows_CNetworking_CSockets_CIStreamSocketControl4;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2 _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener _q_CWindows_CNetworking_CSockets_CIStreamSocketListener;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener2 _q_CWindows_CNetworking_CSockets_CIStreamSocketListener2;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener3 _q_CWindows_CNetworking_CSockets_CIStreamSocketListener3;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2 _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketStatics _q_CWindows_CNetworking_CSockets_CIStreamSocketStatics;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocket _q_CWindows_CNetworking_CSockets_CIStreamWebSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocket2 _q_CWindows_CNetworking_CSockets_CIStreamWebSocket2;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2 _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocket _q_CWindows_CNetworking_CSockets_CIWebSocket;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketControl _q_CWindows_CNetworking_CSockets_CIWebSocketControl;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketControl2 _q_CWindows_CNetworking_CSockets_CIWebSocketControl2;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics _q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketInformation _q_CWindows_CNetworking_CSockets_CIWebSocketInformation;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketInformation2 _q_CWindows_CNetworking_CSockets_CIWebSocketInformation2;
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnAppId _q_CWindows_CNetworking_CVpn_CIVpnAppId;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory _q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel _q_CWindows_CNetworking_CVpn_CIVpnChannel;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel2 _q_CWindows_CNetworking_CVpn_CIVpnChannel2;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel4 _q_CWindows_CNetworking_CVpn_CIVpnChannel4;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel5 _q_CWindows_CNetworking_CVpn_CIVpnChannel5;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel6 _q_CWindows_CNetworking_CVpn_CIVpnChannel6;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2 _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelStatics _q_CWindows_CNetworking_CVpn_CIVpnChannelStatics;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCredential _q_CWindows_CNetworking_CVpn_CIVpnCredential;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox _q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox _q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox _q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox _q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt _q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox _q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2 _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnManagementAgent _q_CWindows_CNetworking_CVpn_CIVpnManagementAgent;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2 _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2 _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3 _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPickedCredential _q_CWindows_CNetworking_CVpn_CIVpnPickedCredential;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2 _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnProfile _q_CWindows_CNetworking_CVpn_CIVpnProfile;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnRoute _q_CWindows_CNetworking_CVpn_CIVpnRoute;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnRouteFactory _q_CWindows_CNetworking_CVpn_CIVpnRouteFactory;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnSystemHealth _q_CWindows_CNetworking_CVpn_CIVpnSystemHealth;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment;
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult;
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult;
typedef struct _q_CWindows_CSecurity_CCredentials_CICredentialFactory _q_CWindows_CSecurity_CCredentials_CICredentialFactory;
typedef struct _q_CWindows_CSecurity_CCredentials_CIPasswordCredential _q_CWindows_CSecurity_CCredentials_CIPasswordCredential;
typedef struct _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate;
typedef struct _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory;
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics;
typedef struct _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs;
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics;
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2 _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2;
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList;
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList;
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2 _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2;
typedef struct _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory;
typedef struct _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory;
typedef struct _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation;
typedef struct _q_CWindows_CStorage_CCompression_CICompressor _q_CWindows_CStorage_CCompression_CICompressor;
typedef struct _q_CWindows_CStorage_CCompression_CICompressorFactory _q_CWindows_CStorage_CCompression_CICompressorFactory;
typedef struct _q_CWindows_CStorage_CCompression_CIDecompressor _q_CWindows_CStorage_CCompression_CIDecompressor;
typedef struct _q_CWindows_CStorage_CCompression_CIDecompressorFactory _q_CWindows_CStorage_CCompression_CIDecompressorFactory;
typedef struct _q_CWindows_CStorage_CFileProperties_CIBasicProperties _q_CWindows_CStorage_CFileProperties_CIBasicProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIDocumentProperties _q_CWindows_CStorage_CFileProperties_CIDocumentProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics _q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics;
typedef struct _q_CWindows_CStorage_CFileProperties_CIImageProperties _q_CWindows_CStorage_CFileProperties_CIImageProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIMusicProperties _q_CWindows_CStorage_CFileProperties_CIMusicProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties;
typedef struct _q_CWindows_CStorage_CFileProperties_CIVideoProperties _q_CWindows_CStorage_CFileProperties_CIVideoProperties;
typedef struct _q_CWindows_CStorage_CIAppDataPaths _q_CWindows_CStorage_CIAppDataPaths;
typedef struct _q_CWindows_CStorage_CIAppDataPathsStatics _q_CWindows_CStorage_CIAppDataPathsStatics;
typedef struct _q_CWindows_CStorage_CIApplicationData _q_CWindows_CStorage_CIApplicationData;
typedef struct _q_CWindows_CStorage_CIApplicationData2 _q_CWindows_CStorage_CIApplicationData2;
typedef struct _q_CWindows_CStorage_CIApplicationData3 _q_CWindows_CStorage_CIApplicationData3;
typedef struct _q_CWindows_CStorage_CIApplicationDataContainer _q_CWindows_CStorage_CIApplicationDataContainer;
typedef struct _q_CWindows_CStorage_CIApplicationDataStatics _q_CWindows_CStorage_CIApplicationDataStatics;
typedef struct _q_CWindows_CStorage_CIApplicationDataStatics2 _q_CWindows_CStorage_CIApplicationDataStatics2;
typedef struct _q_CWindows_CStorage_CICachedFileManagerStatics _q_CWindows_CStorage_CICachedFileManagerStatics;
typedef struct _q_CWindows_CStorage_CIDownloadsFolderStatics _q_CWindows_CStorage_CIDownloadsFolderStatics;
typedef struct _q_CWindows_CStorage_CIDownloadsFolderStatics2 _q_CWindows_CStorage_CIDownloadsFolderStatics2;
typedef struct _q_CWindows_CStorage_CIFileIOStatics _q_CWindows_CStorage_CIFileIOStatics;
typedef struct _q_CWindows_CStorage_CIKnownFoldersCameraRollStatics _q_CWindows_CStorage_CIKnownFoldersCameraRollStatics;
typedef struct _q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics _q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics;
typedef struct _q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics _q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics;
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics _q_CWindows_CStorage_CIKnownFoldersStatics;
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics2 _q_CWindows_CStorage_CIKnownFoldersStatics2;
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics3 _q_CWindows_CStorage_CIKnownFoldersStatics3;
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics4 _q_CWindows_CStorage_CIKnownFoldersStatics4;
typedef struct _q_CWindows_CStorage_CIPathIOStatics _q_CWindows_CStorage_CIPathIOStatics;
typedef struct _q_CWindows_CStorage_CISetVersionDeferral _q_CWindows_CStorage_CISetVersionDeferral;
typedef struct _q_CWindows_CStorage_CISetVersionRequest _q_CWindows_CStorage_CISetVersionRequest;
typedef struct _q_CWindows_CStorage_CIStorageFile _q_CWindows_CStorage_CIStorageFile;
typedef struct _q_CWindows_CStorage_CIStorageFile2 _q_CWindows_CStorage_CIStorageFile2;
typedef struct _q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability _q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability;
typedef struct _q_CWindows_CStorage_CIStorageFileStatics _q_CWindows_CStorage_CIStorageFileStatics;
typedef struct _q_CWindows_CStorage_CIStorageFileStatics2 _q_CWindows_CStorage_CIStorageFileStatics2;
typedef struct _q_CWindows_CStorage_CIStorageFolder _q_CWindows_CStorage_CIStorageFolder;
typedef struct _q_CWindows_CStorage_CIStorageFolder2 _q_CWindows_CStorage_CIStorageFolder2;
typedef struct _q_CWindows_CStorage_CIStorageFolder3 _q_CWindows_CStorage_CIStorageFolder3;
typedef struct _q_CWindows_CStorage_CIStorageFolderStatics _q_CWindows_CStorage_CIStorageFolderStatics;
typedef struct _q_CWindows_CStorage_CIStorageFolderStatics2 _q_CWindows_CStorage_CIStorageFolderStatics2;
typedef struct _q_CWindows_CStorage_CIStorageItem _q_CWindows_CStorage_CIStorageItem;
typedef struct _q_CWindows_CStorage_CIStorageItem2 _q_CWindows_CStorage_CIStorageItem2;
typedef struct _q_CWindows_CStorage_CIStorageItemProperties _q_CWindows_CStorage_CIStorageItemProperties;
typedef struct _q_CWindows_CStorage_CIStorageItemProperties2 _q_CWindows_CStorage_CIStorageItemProperties2;
typedef struct _q_CWindows_CStorage_CIStorageItemPropertiesWithProvider _q_CWindows_CStorage_CIStorageItemPropertiesWithProvider;
typedef struct _q_CWindows_CStorage_CIStorageLibrary _q_CWindows_CStorage_CIStorageLibrary;
typedef struct _q_CWindows_CStorage_CIStorageLibrary2 _q_CWindows_CStorage_CIStorageLibrary2;
typedef struct _q_CWindows_CStorage_CIStorageLibrary3 _q_CWindows_CStorage_CIStorageLibrary3;
typedef struct _q_CWindows_CStorage_CIStorageLibraryChange _q_CWindows_CStorage_CIStorageLibraryChange;
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeReader _q_CWindows_CStorage_CIStorageLibraryChangeReader;
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeReader2 _q_CWindows_CStorage_CIStorageLibraryChangeReader2;
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeTracker _q_CWindows_CStorage_CIStorageLibraryChangeTracker;
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeTracker2 _q_CWindows_CStorage_CIStorageLibraryChangeTracker2;
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions;
typedef struct _q_CWindows_CStorage_CIStorageLibraryLastChangeId _q_CWindows_CStorage_CIStorageLibraryLastChangeId;
typedef struct _q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics _q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics;
typedef struct _q_CWindows_CStorage_CIStorageLibraryStatics _q_CWindows_CStorage_CIStorageLibraryStatics;
typedef struct _q_CWindows_CStorage_CIStorageLibraryStatics2 _q_CWindows_CStorage_CIStorageLibraryStatics2;
typedef struct _q_CWindows_CStorage_CIStorageProvider _q_CWindows_CStorage_CIStorageProvider;
typedef struct _q_CWindows_CStorage_CIStorageProvider2 _q_CWindows_CStorage_CIStorageProvider2;
typedef struct _q_CWindows_CStorage_CIStorageStreamTransaction _q_CWindows_CStorage_CIStorageStreamTransaction;
typedef struct _q_CWindows_CStorage_CIStreamedFileDataRequest _q_CWindows_CStorage_CIStreamedFileDataRequest;
typedef struct _q_CWindows_CStorage_CISystemAudioProperties _q_CWindows_CStorage_CISystemAudioProperties;
typedef struct _q_CWindows_CStorage_CISystemDataPaths _q_CWindows_CStorage_CISystemDataPaths;
typedef struct _q_CWindows_CStorage_CISystemDataPathsStatics _q_CWindows_CStorage_CISystemDataPathsStatics;
typedef struct _q_CWindows_CStorage_CISystemGPSProperties _q_CWindows_CStorage_CISystemGPSProperties;
typedef struct _q_CWindows_CStorage_CISystemImageProperties _q_CWindows_CStorage_CISystemImageProperties;
typedef struct _q_CWindows_CStorage_CISystemMediaProperties _q_CWindows_CStorage_CISystemMediaProperties;
typedef struct _q_CWindows_CStorage_CISystemMusicProperties _q_CWindows_CStorage_CISystemMusicProperties;
typedef struct _q_CWindows_CStorage_CISystemPhotoProperties _q_CWindows_CStorage_CISystemPhotoProperties;
typedef struct _q_CWindows_CStorage_CISystemProperties _q_CWindows_CStorage_CISystemProperties;
typedef struct _q_CWindows_CStorage_CISystemVideoProperties _q_CWindows_CStorage_CISystemVideoProperties;
typedef struct _q_CWindows_CStorage_CIUserDataPaths _q_CWindows_CStorage_CIUserDataPaths;
typedef struct _q_CWindows_CStorage_CIUserDataPathsStatics _q_CWindows_CStorage_CIUserDataPathsStatics;
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker _q_CWindows_CStorage_CPickers_CIFileOpenPicker;
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker2 _q_CWindows_CStorage_CPickers_CIFileOpenPicker2;
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker3 _q_CWindows_CStorage_CPickers_CIFileOpenPicker3;
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics;
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2 _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2;
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId _q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId;
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker _q_CWindows_CStorage_CPickers_CIFileSavePicker;
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker2 _q_CWindows_CStorage_CPickers_CIFileSavePicker2;
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker3 _q_CWindows_CStorage_CPickers_CIFileSavePicker3;
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker4 _q_CWindows_CStorage_CPickers_CIFileSavePicker4;
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePickerStatics _q_CWindows_CStorage_CPickers_CIFileSavePickerStatics;
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPicker _q_CWindows_CStorage_CPickers_CIFolderPicker;
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPicker2 _q_CWindows_CStorage_CPickers_CIFolderPicker2;
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPicker3 _q_CWindows_CStorage_CPickers_CIFolderPicker3;
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPickerStatics _q_CWindows_CStorage_CPickers_CIFolderPickerStatics;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral;
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs;
typedef struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics _q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics;
typedef struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI;
typedef struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2 _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2;
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequest _q_CWindows_CStorage_CProvider_CIFileUpdateRequest;
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequest2 _q_CWindows_CStorage_CProvider_CIFileUpdateRequest2;
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral;
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderError _q_CWindows_CStorage_CProvider_CIStorageProviderError;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory _q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult _q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult _q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty _q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderStatus _q_CWindows_CStorage_CProvider_CIStorageProviderStatus;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory _q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2 _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3 _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics;
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2 _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2;
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexer _q_CWindows_CStorage_CSearch_CIContentIndexer;
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerQuery _q_CWindows_CStorage_CSearch_CIContentIndexerQuery;
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations _q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations;
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerStatics _q_CWindows_CStorage_CSearch_CIContentIndexerStatics;
typedef struct _q_CWindows_CStorage_CSearch_CIIndexableContent _q_CWindows_CStorage_CSearch_CIIndexableContent;
typedef struct _q_CWindows_CStorage_CSearch_CIQueryOptions _q_CWindows_CStorage_CSearch_CIQueryOptions;
typedef struct _q_CWindows_CStorage_CSearch_CIQueryOptionsFactory _q_CWindows_CStorage_CSearch_CIQueryOptionsFactory;
typedef struct _q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter _q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2 _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations _q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageItemQueryResult _q_CWindows_CStorage_CSearch_CIStorageItemQueryResult;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails _q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails _q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails;
typedef struct _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase;
typedef struct _q_CWindows_CStorage_CSearch_CIValueAndLanguage _q_CWindows_CStorage_CSearch_CIValueAndLanguage;
typedef struct _q_CWindows_CStorage_CStreams_CIBuffer _q_CWindows_CStorage_CStreams_CIBuffer;
typedef struct _q_CWindows_CStorage_CStreams_CIBufferFactory _q_CWindows_CStorage_CStreams_CIBufferFactory;
typedef struct _q_CWindows_CStorage_CStreams_CIBufferStatics _q_CWindows_CStorage_CStreams_CIBufferStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIContentTypeProvider _q_CWindows_CStorage_CStreams_CIContentTypeProvider;
typedef struct _q_CWindows_CStorage_CStreams_CIDataReader _q_CWindows_CStorage_CStreams_CIDataReader;
typedef struct _q_CWindows_CStorage_CStreams_CIDataReaderFactory _q_CWindows_CStorage_CStreams_CIDataReaderFactory;
typedef struct _q_CWindows_CStorage_CStreams_CIDataReaderStatics _q_CWindows_CStorage_CStreams_CIDataReaderStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIDataWriter _q_CWindows_CStorage_CStreams_CIDataWriter;
typedef struct _q_CWindows_CStorage_CStreams_CIDataWriterFactory _q_CWindows_CStorage_CStreams_CIDataWriterFactory;
typedef struct _q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics _q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIInputStream _q_CWindows_CStorage_CStreams_CIInputStream;
typedef struct _q_CWindows_CStorage_CStreams_CIInputStreamReference _q_CWindows_CStorage_CStreams_CIInputStreamReference;
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStream _q_CWindows_CStorage_CStreams_CIOutputStream;
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStream _q_CWindows_CStorage_CStreams_CIRandomAccessStream;
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics _q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;
typedef struct _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo;
typedef struct _q_CWindows_CSystem_CIDispatcherQueue _q_CWindows_CSystem_CIDispatcherQueue;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueController _q_CWindows_CSystem_CIDispatcherQueueController;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics _q_CWindows_CSystem_CIDispatcherQueueControllerStatics;
typedef struct _q_CWindows_CSystem_CIUser _q_CWindows_CSystem_CIUser;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics;
typedef struct _q_CWindows_CUI_CCore_CICoreDispatcher _q_CWindows_CUI_CCore_CICoreDispatcher;
typedef struct _q_CWindows_CUI_CCore_CICoreWindow _q_CWindows_CUI_CCore_CICoreWindow;
typedef struct _q_CWindows_CUI_CNotifications_CIBadgeNotification _q_CWindows_CUI_CNotifications_CIBadgeNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory _q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CINotificationData _q_CWindows_CUI_CNotifications_CINotificationData;
typedef struct _q_CWindows_CUI_CNotifications_CINotificationDataFactory _q_CWindows_CUI_CNotifications_CINotificationDataFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotification _q_CWindows_CUI_CNotifications_CIScheduledToastNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs;
typedef struct _q_CWindows_CUI_CNotifications_CITileNotification _q_CWindows_CUI_CNotifications_CITileNotification;
typedef struct _q_CWindows_CUI_CNotifications_CITileNotificationFactory _q_CWindows_CUI_CNotifications_CITileNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs;
typedef struct _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification _q_CWindows_CUI_CNotifications_CIToastNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification2 _q_CWindows_CUI_CNotifications_CIToastNotification2;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification3 _q_CWindows_CUI_CNotifications_CIToastNotification3;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification4 _q_CWindows_CUI_CNotifications_CIToastNotification4;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification6 _q_CWindows_CUI_CNotifications_CIToastNotification6;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory _q_CWindows_CUI_CNotifications_CIToastNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationHistory _q_CWindows_CUI_CNotifications_CIToastNotificationHistory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2 _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4 _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5 _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier _q_CWindows_CUI_CNotifications_CIToastNotifier;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier2 _q_CWindows_CUI_CNotifications_CIToastNotifier2;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier3 _q_CWindows_CUI_CNotifications_CIToastNotifier3;
typedef struct _q_CWindows_CWeb_CAtomPub_CIAtomPubClient _q_CWindows_CWeb_CAtomPub_CIAtomPubClient;
typedef struct _q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory _q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory;
typedef struct _q_CWindows_CWeb_CAtomPub_CIResourceCollection _q_CWindows_CWeb_CAtomPub_CIResourceCollection;
typedef struct _q_CWindows_CWeb_CAtomPub_CIServiceDocument _q_CWindows_CWeb_CAtomPub_CIServiceDocument;
typedef struct _q_CWindows_CWeb_CAtomPub_CIWorkspace _q_CWindows_CWeb_CAtomPub_CIWorkspace;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics;
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2 _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3 _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4 _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5 _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory;
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClient _q_CWindows_CWeb_CHttp_CIHttpClient;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClient2 _q_CWindows_CWeb_CHttp_CIHttpClient2;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory _q_CWindows_CWeb_CHttp_CIHttpClientFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContent _q_CWindows_CWeb_CHttp_CIHttpContent;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpCookie _q_CWindows_CWeb_CHttp_CIHttpCookie;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpCookieFactory _q_CWindows_CWeb_CHttp_CIHttpCookieFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpCookieManager _q_CWindows_CWeb_CHttp_CIHttpCookieManager;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpGetStringResult _q_CWindows_CWeb_CHttp_CIHttpGetStringResult;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMethod _q_CWindows_CWeb_CHttp_CIHttpMethod;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMethodFactory _q_CWindows_CWeb_CHttp_CIHttpMethodFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMethodStatics _q_CWindows_CWeb_CHttp_CIHttpMethodStatics;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartContent _q_CWindows_CWeb_CHttp_CIHttpMultipartContent;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpRequestMessage _q_CWindows_CWeb_CHttp_CIHttpRequestMessage;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpRequestResult _q_CWindows_CWeb_CHttp_CIHttpRequestResult;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage _q_CWindows_CWeb_CHttp_CIHttpResponseMessage;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpStringContentFactory _q_CWindows_CWeb_CHttp_CIHttpStringContentFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpTransportInformation _q_CWindows_CWeb_CHttp_CIHttpTransportInformation;
typedef struct _q_CWindows_CWeb_CIUriToStreamResolver _q_CWindows_CWeb_CIUriToStreamResolver;
typedef struct _q_CWindows_CWeb_CIWebErrorStatics _q_CWindows_CWeb_CIWebErrorStatics;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationAttribute _q_CWindows_CWeb_CSyndication_CISyndicationAttribute;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory _q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationCategory _q_CWindows_CWeb_CSyndication_CISyndicationCategory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory _q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationClient _q_CWindows_CWeb_CSyndication_CISyndicationClient;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationClientFactory _q_CWindows_CWeb_CSyndication_CISyndicationClientFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationContent _q_CWindows_CWeb_CSyndication_CISyndicationContent;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationContentFactory _q_CWindows_CWeb_CSyndication_CISyndicationContentFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics _q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationFeed _q_CWindows_CWeb_CSyndication_CISyndicationFeed;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory _q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationGenerator _q_CWindows_CWeb_CSyndication_CISyndicationGenerator;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationItem _q_CWindows_CWeb_CSyndication_CISyndicationItem;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationItemFactory _q_CWindows_CWeb_CSyndication_CISyndicationItemFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationLink _q_CWindows_CWeb_CSyndication_CISyndicationLink;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory _q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationNode _q_CWindows_CWeb_CSyndication_CISyndicationNode;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory _q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationPerson _q_CWindows_CWeb_CSyndication_CISyndicationPerson;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory _q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationText _q_CWindows_CWeb_CSyndication_CISyndicationText;
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationTextFactory _q_CWindows_CWeb_CSyndication_CISyndicationTextFactory;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite;
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2 _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControl _q_CWindows_CWeb_CUI_CIWebViewControl;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControl2 _q_CWindows_CWeb_CUI_CIWebViewControl2;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2 _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlSettings _q_CWindows_CWeb_CUI_CIWebViewControlSettings;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs;
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs;
// forward decls for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus;
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IReference_1_GUID _cg_CWindows_CFoundation_IReference_1_GUID;
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT8 _cg_CWindows_CFoundation_IReference_1_UINT8;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus;
typedef struct _cg_CWindows_CFoundation_IReference_1_boolean _cg_CWindows_CFoundation_IReference_1_boolean;
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT32 _cg_CWindows_CFoundation_IReference_1_UINT32;
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64 _cg_CWindows_CFoundation_IReference_1_UINT64;
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8 _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID;
typedef struct _cg_CWindows_CFoundation_IReference_1_INT32 _cg_CWindows_CFoundation_IReference_1_INT32;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable;
typedef struct _cg_CWindows_CFoundation_IReference_1_DOUBLE _cg_CWindows_CFoundation_IReference_1_DOUBLE;
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan;
typedef struct _cg_CWindows_CFoundation_IReference_1_INT64 _cg_CWindows_CFoundation_IReference_1_INT64;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32 _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean _cg_CWindows_CFoundation_IAsyncOperation_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32 _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32 _cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel;
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable _cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile;
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable _cg_CWindows_CFoundation_IEventHandler_1_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket;
typedef struct _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING _cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties;
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32 _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32 _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable;
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment;
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary;
typedef struct _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder _cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT;
// definition of structs for value types
struct _q_CWindows_CData_CText_CTextSegment
{
    UINT32 StartPosition;
    UINT32 Length;
};
struct _q_CWindows_CDevices_CGeolocation_CBasicGeoposition
{
    DOUBLE Latitude;
    DOUBLE Longitude;
    DOUBLE Altitude;
};
struct _q_CWindows_CFoundation_CDateTime
{
    INT64 UniversalTime;
};
struct _q_CWindows_CFoundation_CEventRegistrationToken
{
    INT64 Value;
};
struct _q_CWindows_CFoundation_CHResult
{
    INT32 Value;
};
struct _q_CWindows_CFoundation_CNumerics_CMatrix3x2
{
    FLOAT M11;
    FLOAT M12;
    FLOAT M21;
    FLOAT M22;
    FLOAT M31;
    FLOAT M32;
};
struct _q_CWindows_CFoundation_CNumerics_CMatrix4x4
{
    FLOAT M11;
    FLOAT M12;
    FLOAT M13;
    FLOAT M14;
    FLOAT M21;
    FLOAT M22;
    FLOAT M23;
    FLOAT M24;
    FLOAT M31;
    FLOAT M32;
    FLOAT M33;
    FLOAT M34;
    FLOAT M41;
    FLOAT M42;
    FLOAT M43;
    FLOAT M44;
};
struct _q_CWindows_CFoundation_CNumerics_CVector2
{
    FLOAT X;
    FLOAT Y;
};
struct _q_CWindows_CFoundation_CNumerics_CVector3
{
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
};
struct _q_CWindows_CFoundation_CNumerics_CVector4
{
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
    FLOAT W;
};
struct _q_CWindows_CFoundation_CPoint
{
    FLOAT X;
    FLOAT Y;
};
struct _q_CWindows_CFoundation_CRect
{
    FLOAT X;
    FLOAT Y;
    FLOAT Width;
    FLOAT Height;
};
struct _q_CWindows_CFoundation_CSize
{
    FLOAT Width;
    FLOAT Height;
};
struct _q_CWindows_CFoundation_CTimeSpan
{
    INT64 Duration;
};
struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription
{
    INT32 Count;
    INT32 Quality;
};
struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription
{
    INT32 Width;
    INT32 Height;
    _q_CWindows_CGraphics_CDirectX_CDirectXPixelFormat Format;
    _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DMultisampleDescription MultisampleDescription;
};
struct _q_CWindows_CGraphics_CImaging_CBitmapSize
{
    UINT32 Width;
    UINT32 Height;
};
struct _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress
{
    UINT64 BytesReceived;
    UINT64 TotalBytesToReceive;
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus Status;
    boolean HasResponseChanged;
    boolean HasRestarted;
};
struct _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange
{
    UINT64 Offset;
    UINT64 Length;
};
struct _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress
{
    UINT64 BytesReceived;
    UINT64 BytesSent;
    UINT64 TotalBytesToReceive;
    UINT64 TotalBytesToSend;
    _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferStatus Status;
    boolean HasResponseChanged;
    boolean HasRestarted;
};
struct _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates
{
    _q_CWindows_CNetworking_CConnectivity_CTriStates Roaming;
    _q_CWindows_CNetworking_CConnectivity_CTriStates Shared;
};
struct _q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    INT32 TotalSizeInBytes;
    INT32 InstalledSizeInBytes;
};
struct _q_CWindows_CNetworking_CNetworkOperators_CProfileUsage
{
    UINT32 UsageInMegabytes;
    _q_CWindows_CFoundation_CDateTime LastSyncTime;
};
struct _q_CWindows_CNetworking_CSockets_CBandwidthStatistics
{
    UINT64 OutboundBitsPerSecond;
    UINT64 InboundBitsPerSecond;
    UINT64 OutboundBitsPerSecondInstability;
    UINT64 InboundBitsPerSecondInstability;
    boolean OutboundBandwidthPeaked;
    boolean InboundBandwidthPeaked;
};
struct _q_CWindows_CNetworking_CSockets_CRoundTripTimeStatistics
{
    UINT32 Variance;
    UINT32 Max;
    UINT32 Min;
    UINT32 Sum;
};
struct _q_CWindows_CStorage_CAccessCache_CAccessListEntry
{
    HSTRING Token;
    HSTRING Metadata;
};
struct _q_CWindows_CStorage_CSearch_CSortEntry
{
    HSTRING PropertyName;
    boolean AscendingOrder;
};
struct _q_CWindows_CUI_CColor
{
    UINT8 A;
    UINT8 R;
    UINT8 G;
    UINT8 B;
};
struct _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus
{
    UINT32 RepeatCount;
    UINT32 ScanCode;
    boolean IsExtendedKey;
    boolean IsMenuKeyDown;
    boolean WasKeyDown;
    boolean IsKeyReleased;
};
struct _q_CWindows_CUI_CText_CFontWeight
{
    UINT16 Weight;
};
struct _q_CWindows_CUI_CXaml_CInterop_CTypeName
{
    HSTRING Name;
    _q_CWindows_CUI_CXaml_CInterop_CTypeKind Kind;
};
struct _q_CWindows_CWeb_CHttp_CHttpProgress
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage Stage;
    UINT64 BytesSent;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToSend;
    UINT64 BytesReceived;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToReceive;
    UINT32 Retries;
};
struct _q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    UINT32 BytesRetrieved;
    UINT32 TotalBytesToRetrieve;
};
struct _q_CWindows_CWeb_CSyndication_CTransferProgress
{
    UINT32 BytesSent;
    UINT32 TotalBytesToSend;
    UINT32 BytesRetrieved;
    UINT32 TotalBytesToRetrieve;
};
// definitions for delegates
typedef struct _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* precedingWords, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* words);
} _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandlerVtbl;
struct _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler
{
    _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* precedingWords, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* words);
} _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandlerVtbl;
struct _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler
{
    _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* pThis, _q_CWindows_CFoundation_CIAsyncAction* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl;
struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler
{
    _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIDeferralCompletedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIDeferralCompletedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIDeferralCompletedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIDeferralCompletedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CFoundation_CIDeferralCompletedHandler* pThis);
} _q_CWindows_CFoundation_CIDeferralCompletedHandlerVtbl;
struct _q_CWindows_CFoundation_CIDeferralCompletedHandler
{
    _q_CWindows_CFoundation_CIDeferralCompletedHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler* pThis, IInspectable* sender);
} _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandlerVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler* pThis, _q_CWindows_CNetworking_CProximity_CIProximityDevice* sender);
} _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandlerVtbl;
struct _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler
{
    _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler* pThis, _q_CWindows_CNetworking_CProximity_CIProximityDevice* sender);
} _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandlerVtbl;
struct _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler
{
    _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler* pThis, _q_CWindows_CNetworking_CProximity_CIProximityDevice* sender, _q_CWindows_CNetworking_CProximity_CIProximityMessage* message);
} _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandlerVtbl;
struct _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler
{
    _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* pThis, _q_CWindows_CNetworking_CProximity_CIProximityDevice* sender, INT64 messageId);
} _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandlerVtbl;
struct _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler
{
    _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationDataSetVersionHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationDataSetVersionHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationDataSetVersionHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationDataSetVersionHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CStorage_CIApplicationDataSetVersionHandler* pThis, _q_CWindows_CStorage_CISetVersionRequest* setVersionRequest);
} _q_CWindows_CStorage_CIApplicationDataSetVersionHandlerVtbl;
struct _q_CWindows_CStorage_CIApplicationDataSetVersionHandler
{
    _q_CWindows_CStorage_CIApplicationDataSetVersionHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStreamedFileDataRequestedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CStorage_CIStreamedFileDataRequestedHandler* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream* stream);
} _q_CWindows_CStorage_CIStreamedFileDataRequestedHandlerVtbl;
struct _q_CWindows_CStorage_CIStreamedFileDataRequestedHandler
{
    _q_CWindows_CStorage_CIStreamedFileDataRequestedHandlerVtbl* lpVtbl;
};
// definitions for interface types
typedef struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* pThis, _q_CWindows_CApplicationModel_CActivation_CActivationKind* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PreviousExecutionState)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* pThis, _q_CWindows_CApplicationModel_CActivation_CApplicationExecutionState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SplashScreen)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* pThis, _q_CWindows_CApplicationModel_CActivation_CISplashScreen** __pret);
} _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser* pThis, _q_CWindows_CSystem_CIUser** __pret);
} _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUserVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUser
{
    _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsWithUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CISplashScreenVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CISplashScreen* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CISplashScreen* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CISplashScreen* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CISplashScreen* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CISplashScreen* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CISplashScreen* This, TrustLevel* trustLevel);
    void* unneeded_get_ImageLocation;
    void* unneeded_add_Dismissed;
    void* unneeded_remove_Dismissed;
} _q_CWindows_CApplicationModel_CActivation_CISplashScreenVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CISplashScreen
{
    _q_CWindows_CApplicationModel_CActivation_CISplashScreenVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Run)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTask* pThis, _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* taskInstance);
} _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskVtbl;
struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTask
{
    _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstanceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance* This, TrustLevel* trustLevel);
    void* unneeded_get_InstanceId;
    void* unneeded_get_Task;
    void* unneeded_get_Progress;
    void* unneeded_put_Progress;
    void* unneeded_get_TriggerDetails;
    void* unneeded_add_Canceled;
    void* unneeded_remove_Canceled;
    void* unneeded_get_SuspendedCount;
    void* unneeded_GetDeferral;
} _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstanceVtbl;
struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstance
{
    _q_CWindows_CApplicationModel_CBackground_CIBackgroundTaskInstanceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTriggerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger* This, TrustLevel* trustLevel);
} _q_CWindows_CApplicationModel_CBackground_CIBackgroundTriggerVtbl;
struct _q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger
{
    _q_CWindows_CApplicationModel_CBackground_CIBackgroundTriggerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage* This, TrustLevel* trustLevel);
    void* unneeded_GetView;
    void* unneeded_get_Properties;
    void* unneeded_get_RequestedOperation;
    void* unneeded_put_RequestedOperation;
    void* unneeded_add_OperationCompleted;
    void* unneeded_remove_OperationCompleted;
    void* unneeded_add_Destroyed;
    void* unneeded_remove_Destroyed;
    void* unneeded_SetData;
    void* unneeded_SetDataProvider;
    void* unneeded_SetText;
    void* unneeded_SetUri;
    void* unneeded_SetHtmlFormat;
    void* unneeded_get_ResourceMap;
    void* unneeded_SetRtf;
    void* unneeded_SetBitmap;
    void* unneeded_SetStorageItemsReadOnly;
    void* unneeded_SetStorageItems;
} _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackageVtbl;
struct _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage
{
    _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CHtml_CIHtmlUtilitiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CHtml_CIHtmlUtilities* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CHtml_CIHtmlUtilities* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CHtml_CIHtmlUtilities* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CHtml_CIHtmlUtilities* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CHtml_CIHtmlUtilities* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CHtml_CIHtmlUtilities* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ConvertToText)(_q_CWindows_CData_CHtml_CIHtmlUtilities* pThis, HSTRING html, HSTRING* __pret);
} _q_CWindows_CData_CHtml_CIHtmlUtilitiesVtbl;
struct _q_CWindows_CData_CHtml_CIHtmlUtilities
{
    _q_CWindows_CData_CHtml_CIHtmlUtilitiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonArrayVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonArray* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonArray* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonArray* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonArray* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonArray* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonArray* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetObjectAt)(_q_CWindows_CData_CJson_CIJsonArray* pThis, UINT32 index, _q_CWindows_CData_CJson_CIJsonObject** __pret);
    HRESULT (STDMETHODCALLTYPE* GetArrayAt)(_q_CWindows_CData_CJson_CIJsonArray* pThis, UINT32 index, _q_CWindows_CData_CJson_CIJsonArray** __pret);
    HRESULT (STDMETHODCALLTYPE* GetStringAt)(_q_CWindows_CData_CJson_CIJsonArray* pThis, UINT32 index, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNumberAt)(_q_CWindows_CData_CJson_CIJsonArray* pThis, UINT32 index, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* GetBooleanAt)(_q_CWindows_CData_CJson_CIJsonArray* pThis, UINT32 index, boolean* __pret);
} _q_CWindows_CData_CJson_CIJsonArrayVtbl;
struct _q_CWindows_CData_CJson_CIJsonArray
{
    _q_CWindows_CData_CJson_CIJsonArrayVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonArrayStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonArrayStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonArrayStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonArrayStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonArrayStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonArrayStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonArrayStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CData_CJson_CIJsonArrayStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonArray** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CData_CJson_CIJsonArrayStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonArray** result, boolean* __pret);
} _q_CWindows_CData_CJson_CIJsonArrayStaticsVtbl;
struct _q_CWindows_CData_CJson_CIJsonArrayStatics
{
    _q_CWindows_CData_CJson_CIJsonArrayStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonErrorStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetJsonStatus)(_q_CWindows_CData_CJson_CIJsonErrorStatics2* pThis, INT32 hresult, _q_CWindows_CData_CJson_CJsonErrorStatus* __pret);
} _q_CWindows_CData_CJson_CIJsonErrorStatics2Vtbl;
struct _q_CWindows_CData_CJson_CIJsonErrorStatics2
{
    _q_CWindows_CData_CJson_CIJsonErrorStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonObjectVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonObject* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonObject* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonObject* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonObject* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetNamedValue)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* SetNamedValue)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonValue* value);
    HRESULT (STDMETHODCALLTYPE* GetNamedObject)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonObject** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedArray)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonArray** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedString)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedNumber)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedBoolean)(_q_CWindows_CData_CJson_CIJsonObject* pThis, HSTRING name, boolean* __pret);
} _q_CWindows_CData_CJson_CIJsonObjectVtbl;
struct _q_CWindows_CData_CJson_CIJsonObject
{
    _q_CWindows_CData_CJson_CIJsonObjectVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonObjectStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonObjectStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonObjectStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonObjectStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonObjectStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonObjectStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonObjectStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CData_CJson_CIJsonObjectStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonObject** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CData_CJson_CIJsonObjectStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonObject** result, boolean* __pret);
} _q_CWindows_CData_CJson_CIJsonObjectStaticsVtbl;
struct _q_CWindows_CData_CJson_CIJsonObjectStatics
{
    _q_CWindows_CData_CJson_CIJsonObjectStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValuesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetNamedValueOrDefault)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonValue* defaultValue, _q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedObjectOrDefault)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonObject* defaultValue, _q_CWindows_CData_CJson_CIJsonObject** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedStringOrDefault)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* pThis, HSTRING name, HSTRING defaultValue, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedArrayOrDefault)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* pThis, HSTRING name, _q_CWindows_CData_CJson_CIJsonArray* defaultValue, _q_CWindows_CData_CJson_CIJsonArray** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedNumberOrDefault)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* pThis, HSTRING name, DOUBLE defaultValue, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedBooleanOrDefault)(_q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues* pThis, HSTRING name, boolean defaultValue, boolean* __pret);
} _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValuesVtbl;
struct _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues
{
    _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValuesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ValueType)(_q_CWindows_CData_CJson_CIJsonValue* pThis, _q_CWindows_CData_CJson_CJsonValueType* __pret);
    HRESULT (STDMETHODCALLTYPE* Stringify)(_q_CWindows_CData_CJson_CIJsonValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetString)(_q_CWindows_CData_CJson_CIJsonValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNumber)(_q_CWindows_CData_CJson_CIJsonValue* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* GetBoolean)(_q_CWindows_CData_CJson_CIJsonValue* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GetArray)(_q_CWindows_CData_CJson_CIJsonValue* pThis, _q_CWindows_CData_CJson_CIJsonArray** __pret);
    HRESULT (STDMETHODCALLTYPE* GetObject_)(_q_CWindows_CData_CJson_CIJsonValue* pThis, _q_CWindows_CData_CJson_CIJsonObject** __pret);
} _q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _q_CWindows_CData_CJson_CIJsonValue
{
    _q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CData_CJson_CIJsonValueStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CData_CJson_CIJsonValueStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonValue** result, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateBooleanValue)(_q_CWindows_CData_CJson_CIJsonValueStatics* pThis, boolean input, _q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateNumberValue)(_q_CWindows_CData_CJson_CIJsonValueStatics* pThis, DOUBLE input, _q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateStringValue)(_q_CWindows_CData_CJson_CIJsonValueStatics* pThis, HSTRING input, _q_CWindows_CData_CJson_CIJsonValue** __pret);
} _q_CWindows_CData_CJson_CIJsonValueStaticsVtbl;
struct _q_CWindows_CData_CJson_CIJsonValueStatics
{
    _q_CWindows_CData_CJson_CIJsonValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CJson_CIJsonValueStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CJson_CIJsonValueStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CJson_CIJsonValueStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CJson_CIJsonValueStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CJson_CIJsonValueStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CJson_CIJsonValueStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CJson_CIJsonValueStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateNullValue)(_q_CWindows_CData_CJson_CIJsonValueStatics2* pThis, _q_CWindows_CData_CJson_CIJsonValue** __pret);
} _q_CWindows_CData_CJson_CIJsonValueStatics2Vtbl;
struct _q_CWindows_CData_CJson_CIJsonValueStatics2
{
    _q_CWindows_CData_CJson_CIJsonValueStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CPdf_CIPdfDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CPdf_CIPdfDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CPdf_CIPdfDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CPdf_CIPdfDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CPdf_CIPdfDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CPdf_CIPdfDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CPdf_CIPdfDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetPage)(_q_CWindows_CData_CPdf_CIPdfDocument* pThis, UINT32 pageIndex, _q_CWindows_CData_CPdf_CIPdfPage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PageCount)(_q_CWindows_CData_CPdf_CIPdfDocument* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsPasswordProtected)(_q_CWindows_CData_CPdf_CIPdfDocument* pThis, boolean* __pret);
} _q_CWindows_CData_CPdf_CIPdfDocumentVtbl;
struct _q_CWindows_CData_CPdf_CIPdfDocument
{
    _q_CWindows_CData_CPdf_CIPdfDocumentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CPdf_CIPdfDocumentStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileAsync)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileWithPasswordAsync)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, HSTRING password, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromStreamAsync)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* inputStream, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromStreamWithPasswordAsync)(_q_CWindows_CData_CPdf_CIPdfDocumentStatics* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* inputStream, HSTRING password, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument** __pret);
} _q_CWindows_CData_CPdf_CIPdfDocumentStaticsVtbl;
struct _q_CWindows_CData_CPdf_CIPdfDocumentStatics
{
    _q_CWindows_CData_CPdf_CIPdfDocumentStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CPdf_CIPdfPageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CPdf_CIPdfPage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CPdf_CIPdfPage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CPdf_CIPdfPage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CPdf_CIPdfPage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CPdf_CIPdfPage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CPdf_CIPdfPage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RenderToStreamAsync)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* outputStream, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* RenderWithOptionsToStreamAsync)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* outputStream, _q_CWindows_CData_CPdf_CIPdfPageRenderOptions* options, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* PreparePageAsync)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Index)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, _q_CWindows_CFoundation_CSize* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Dimensions)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, _q_CWindows_CData_CPdf_CIPdfPageDimensions** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Rotation)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, _q_CWindows_CData_CPdf_CPdfPageRotation* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PreferredZoom)(_q_CWindows_CData_CPdf_CIPdfPage* pThis, FLOAT* __pret);
} _q_CWindows_CData_CPdf_CIPdfPageVtbl;
struct _q_CWindows_CData_CPdf_CIPdfPage
{
    _q_CWindows_CData_CPdf_CIPdfPageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CPdf_CIPdfPageDimensionsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MediaBox)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CropBox)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BleedBox)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TrimBox)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ArtBox)(_q_CWindows_CData_CPdf_CIPdfPageDimensions* pThis, _q_CWindows_CFoundation_CRect* __pret);
} _q_CWindows_CData_CPdf_CIPdfPageDimensionsVtbl;
struct _q_CWindows_CData_CPdf_CIPdfPageDimensions
{
    _q_CWindows_CData_CPdf_CIPdfPageDimensionsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CPdf_CIPdfPageRenderOptionsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceRect)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SourceRect)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, _q_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_DestinationWidth)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DestinationWidth)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DestinationHeight)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DestinationHeight)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, _q_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_IsIgnoringHighContrast)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsIgnoringHighContrast)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BitmapEncoderId)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* put_BitmapEncoderId)(_q_CWindows_CData_CPdf_CIPdfPageRenderOptions* pThis, GUID value);
} _q_CWindows_CData_CPdf_CIPdfPageRenderOptionsVtbl;
struct _q_CWindows_CData_CPdf_CIPdfPageRenderOptions
{
    _q_CWindows_CData_CPdf_CIPdfPageRenderOptionsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CIAlternateWordFormVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CIAlternateWordForm* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CIAlternateWordForm* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CIAlternateWordForm* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CIAlternateWordForm* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CIAlternateWordForm* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CIAlternateWordForm* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceTextSegment)(_q_CWindows_CData_CText_CIAlternateWordForm* pThis, _q_CWindows_CData_CText_CTextSegment* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AlternateText)(_q_CWindows_CData_CText_CIAlternateWordForm* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NormalizationFormat)(_q_CWindows_CData_CText_CIAlternateWordForm* pThis, _q_CWindows_CData_CText_CAlternateNormalizationFormat* __pret);
} _q_CWindows_CData_CText_CIAlternateWordFormVtbl;
struct _q_CWindows_CData_CText_CIAlternateWordForm
{
    _q_CWindows_CData_CText_CIAlternateWordFormVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CISelectableWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CISelectableWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CISelectableWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CISelectableWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CISelectableWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CISelectableWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CISelectableWordSegment* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CData_CText_CISelectableWordSegment* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SourceTextSegment)(_q_CWindows_CData_CText_CISelectableWordSegment* pThis, _q_CWindows_CData_CText_CTextSegment* __pret);
} _q_CWindows_CData_CText_CISelectableWordSegmentVtbl;
struct _q_CWindows_CData_CText_CISelectableWordSegment
{
    _q_CWindows_CData_CText_CISelectableWordSegmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CISelectableWordsSegmenterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetTokenAt)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* pThis, HSTRING text, UINT32 startIndex, _q_CWindows_CData_CText_CISelectableWordSegment** __pret);
    HRESULT (STDMETHODCALLTYPE* GetTokens)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* pThis, HSTRING text, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment** __pret);
    HRESULT (STDMETHODCALLTYPE* Tokenize)(_q_CWindows_CData_CText_CISelectableWordsSegmenter* pThis, HSTRING text, UINT32 startIndex, _q_CWindows_CData_CText_CISelectableWordSegmentsTokenizingHandler* handler);
} _q_CWindows_CData_CText_CISelectableWordsSegmenterVtbl;
struct _q_CWindows_CData_CText_CISelectableWordsSegmenter
{
    _q_CWindows_CData_CText_CISelectableWordsSegmenterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CISelectableWordsSegmenterFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithLanguage)(_q_CWindows_CData_CText_CISelectableWordsSegmenterFactory* pThis, HSTRING language, _q_CWindows_CData_CText_CISelectableWordsSegmenter** __pret);
} _q_CWindows_CData_CText_CISelectableWordsSegmenterFactoryVtbl;
struct _q_CWindows_CData_CText_CISelectableWordsSegmenterFactory
{
    _q_CWindows_CData_CText_CISelectableWordsSegmenterFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CISemanticTextQueryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CISemanticTextQuery* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CISemanticTextQuery* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CISemanticTextQuery* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CISemanticTextQuery* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CISemanticTextQuery* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CISemanticTextQuery* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Find)(_q_CWindows_CData_CText_CISemanticTextQuery* pThis, HSTRING content, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment** __pret);
    HRESULT (STDMETHODCALLTYPE* FindInProperty)(_q_CWindows_CData_CText_CISemanticTextQuery* pThis, HSTRING propertyContent, HSTRING propertyName, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment** __pret);
} _q_CWindows_CData_CText_CISemanticTextQueryVtbl;
struct _q_CWindows_CData_CText_CISemanticTextQuery
{
    _q_CWindows_CData_CText_CISemanticTextQueryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CISemanticTextQueryFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* pThis, HSTRING aqsFilter, _q_CWindows_CData_CText_CISemanticTextQuery** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithLanguage)(_q_CWindows_CData_CText_CISemanticTextQueryFactory* pThis, HSTRING aqsFilter, HSTRING filterLanguage, _q_CWindows_CData_CText_CISemanticTextQuery** __pret);
} _q_CWindows_CData_CText_CISemanticTextQueryFactoryVtbl;
struct _q_CWindows_CData_CText_CISemanticTextQueryFactory
{
    _q_CWindows_CData_CText_CISemanticTextQueryFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextConversionGeneratorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextConversionGenerator* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextConversionGenerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextConversionGenerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextConversionGenerator* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextConversionGenerator* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextConversionGenerator* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(_q_CWindows_CData_CText_CITextConversionGenerator* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LanguageAvailableButNotInstalled)(_q_CWindows_CData_CText_CITextConversionGenerator* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GetCandidatesAsync)(_q_CWindows_CData_CText_CITextConversionGenerator* pThis, HSTRING input, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCandidatesWithMaxCountAsync)(_q_CWindows_CData_CText_CITextConversionGenerator* pThis, HSTRING input, UINT32 maxCandidates, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
} _q_CWindows_CData_CText_CITextConversionGeneratorVtbl;
struct _q_CWindows_CData_CText_CITextConversionGenerator
{
    _q_CWindows_CData_CText_CITextConversionGeneratorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextConversionGeneratorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CData_CText_CITextConversionGeneratorFactory* pThis, HSTRING languageTag, _q_CWindows_CData_CText_CITextConversionGenerator** __pret);
} _q_CWindows_CData_CText_CITextConversionGeneratorFactoryVtbl;
struct _q_CWindows_CData_CText_CITextConversionGeneratorFactory
{
    _q_CWindows_CData_CText_CITextConversionGeneratorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextPhonemeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextPhoneme* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextPhoneme* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextPhoneme* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextPhoneme* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextPhoneme* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextPhoneme* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DisplayText)(_q_CWindows_CData_CText_CITextPhoneme* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReadingText)(_q_CWindows_CData_CText_CITextPhoneme* pThis, HSTRING* __pret);
} _q_CWindows_CData_CText_CITextPhonemeVtbl;
struct _q_CWindows_CData_CText_CITextPhoneme
{
    _q_CWindows_CData_CText_CITextPhonemeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextPredictionGeneratorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextPredictionGenerator* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextPredictionGenerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextPredictionGenerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextPredictionGenerator* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextPredictionGenerator* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextPredictionGenerator* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(_q_CWindows_CData_CText_CITextPredictionGenerator* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LanguageAvailableButNotInstalled)(_q_CWindows_CData_CText_CITextPredictionGenerator* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GetCandidatesAsync)(_q_CWindows_CData_CText_CITextPredictionGenerator* pThis, HSTRING input, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCandidatesWithMaxCountAsync)(_q_CWindows_CData_CText_CITextPredictionGenerator* pThis, HSTRING input, UINT32 maxCandidates, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
} _q_CWindows_CData_CText_CITextPredictionGeneratorVtbl;
struct _q_CWindows_CData_CText_CITextPredictionGenerator
{
    _q_CWindows_CData_CText_CITextPredictionGeneratorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextPredictionGenerator2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextPredictionGenerator2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextPredictionGenerator2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextPredictionGenerator2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextPredictionGenerator2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextPredictionGenerator2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextPredictionGenerator2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCandidatesWithParametersAsync)(_q_CWindows_CData_CText_CITextPredictionGenerator2* pThis, HSTRING input, UINT32 maxCandidates, _q_CWindows_CData_CText_CTextPredictionOptions predictionOptions, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* previousStrings, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNextWordCandidatesAsync)(_q_CWindows_CData_CText_CITextPredictionGenerator2* pThis, UINT32 maxCandidates, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* previousStrings, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_InputScope)(_q_CWindows_CData_CText_CITextPredictionGenerator2* pThis, _q_CWindows_CUI_CText_CCore_CCoreTextInputScope* __pret);
    HRESULT (STDMETHODCALLTYPE* put_InputScope)(_q_CWindows_CData_CText_CITextPredictionGenerator2* pThis, _q_CWindows_CUI_CText_CCore_CCoreTextInputScope value);
} _q_CWindows_CData_CText_CITextPredictionGenerator2Vtbl;
struct _q_CWindows_CData_CText_CITextPredictionGenerator2
{
    _q_CWindows_CData_CText_CITextPredictionGenerator2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextPredictionGeneratorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CData_CText_CITextPredictionGeneratorFactory* pThis, HSTRING languageTag, _q_CWindows_CData_CText_CITextPredictionGenerator** __pret);
} _q_CWindows_CData_CText_CITextPredictionGeneratorFactoryVtbl;
struct _q_CWindows_CData_CText_CITextPredictionGeneratorFactory
{
    _q_CWindows_CData_CText_CITextPredictionGeneratorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextReverseConversionGeneratorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LanguageAvailableButNotInstalled)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* ConvertBackAsync)(_q_CWindows_CData_CText_CITextReverseConversionGenerator* pThis, HSTRING input, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING** __pret);
} _q_CWindows_CData_CText_CITextReverseConversionGeneratorVtbl;
struct _q_CWindows_CData_CText_CITextReverseConversionGenerator
{
    _q_CWindows_CData_CText_CITextReverseConversionGeneratorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextReverseConversionGenerator2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetPhonemesAsync)(_q_CWindows_CData_CText_CITextReverseConversionGenerator2* pThis, HSTRING input, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme** __pret);
} _q_CWindows_CData_CText_CITextReverseConversionGenerator2Vtbl;
struct _q_CWindows_CData_CText_CITextReverseConversionGenerator2
{
    _q_CWindows_CData_CText_CITextReverseConversionGenerator2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CITextReverseConversionGeneratorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory* pThis, HSTRING languageTag, _q_CWindows_CData_CText_CITextReverseConversionGenerator** __pret);
} _q_CWindows_CData_CText_CITextReverseConversionGeneratorFactoryVtbl;
struct _q_CWindows_CData_CText_CITextReverseConversionGeneratorFactory
{
    _q_CWindows_CData_CText_CITextReverseConversionGeneratorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CIUnicodeCharactersStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCodepointFromSurrogatePair)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 highSurrogate, UINT32 lowSurrogate, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetSurrogatePairFromCodepoint)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, WCHAR* highSurrogate, WCHAR* lowSurrogate);
    HRESULT (STDMETHODCALLTYPE* IsHighSurrogate)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsLowSurrogate)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsSupplementary)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsNoncharacter)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsWhitespace)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsAlphabetic)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsCased)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsUppercase)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsLowercase)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsIdStart)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsIdContinue)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsGraphemeBase)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsGraphemeExtend)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNumericType)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, _q_CWindows_CData_CText_CUnicodeNumericType* __pret);
    HRESULT (STDMETHODCALLTYPE* GetGeneralCategory)(_q_CWindows_CData_CText_CIUnicodeCharactersStatics* pThis, UINT32 codepoint, _q_CWindows_CData_CText_CUnicodeGeneralCategory* __pret);
} _q_CWindows_CData_CText_CIUnicodeCharactersStaticsVtbl;
struct _q_CWindows_CData_CText_CIUnicodeCharactersStatics
{
    _q_CWindows_CData_CText_CIUnicodeCharactersStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CIWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CIWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CIWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CIWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CIWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CIWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CIWordSegment* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CData_CText_CIWordSegment* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SourceTextSegment)(_q_CWindows_CData_CText_CIWordSegment* pThis, _q_CWindows_CData_CText_CTextSegment* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AlternateForms)(_q_CWindows_CData_CText_CIWordSegment* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm** __pret);
} _q_CWindows_CData_CText_CIWordSegmentVtbl;
struct _q_CWindows_CData_CText_CIWordSegment
{
    _q_CWindows_CData_CText_CIWordSegmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CIWordsSegmenterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CIWordsSegmenter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CIWordsSegmenter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CIWordsSegmenter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CIWordsSegmenter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CIWordsSegmenter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CIWordsSegmenter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResolvedLanguage)(_q_CWindows_CData_CText_CIWordsSegmenter* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetTokenAt)(_q_CWindows_CData_CText_CIWordsSegmenter* pThis, HSTRING text, UINT32 startIndex, _q_CWindows_CData_CText_CIWordSegment** __pret);
    HRESULT (STDMETHODCALLTYPE* GetTokens)(_q_CWindows_CData_CText_CIWordsSegmenter* pThis, HSTRING text, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment** __pret);
    HRESULT (STDMETHODCALLTYPE* Tokenize)(_q_CWindows_CData_CText_CIWordsSegmenter* pThis, HSTRING text, UINT32 startIndex, _q_CWindows_CData_CText_CIWordSegmentsTokenizingHandler* handler);
} _q_CWindows_CData_CText_CIWordsSegmenterVtbl;
struct _q_CWindows_CData_CText_CIWordsSegmenter
{
    _q_CWindows_CData_CText_CIWordsSegmenterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CText_CIWordsSegmenterFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithLanguage)(_q_CWindows_CData_CText_CIWordsSegmenterFactory* pThis, HSTRING language, _q_CWindows_CData_CText_CIWordsSegmenter** __pret);
} _q_CWindows_CData_CText_CIWordsSegmenterFactoryVtbl;
struct _q_CWindows_CData_CText_CIWordsSegmenterFactory
{
    _q_CWindows_CData_CText_CIWordsSegmenterFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIDtdEntityVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PublicId)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemId)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NotationName)(_q_CWindows_CData_CXml_CDom_CIDtdEntity* pThis, IInspectable** __pret);
} _q_CWindows_CData_CXml_CDom_CIDtdEntityVtbl;
struct _q_CWindows_CData_CXml_CDom_CIDtdEntity
{
    _q_CWindows_CData_CXml_CDom_CIDtdEntityVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIDtdNotationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PublicId)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemId)(_q_CWindows_CData_CXml_CDom_CIDtdNotation* pThis, IInspectable** __pret);
} _q_CWindows_CData_CXml_CDom_CIDtdNotationVtbl;
struct _q_CWindows_CData_CXml_CDom_CIDtdNotation
{
    _q_CWindows_CData_CXml_CDom_CIDtdNotationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlAttribute* This, TrustLevel* trustLevel);
    void* unneeded_get_Name;
    void* unneeded_get_Specified;
    void* unneeded_get_Value;
    void* unneeded_put_Value;
} _q_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlAttribute
{
    _q_CWindows_CData_CXml_CDom_CIXmlAttributeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlCDataSection* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlCDataSection
{
    _q_CWindows_CData_CXml_CDom_CIXmlCDataSectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCharacterDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Data)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Length)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* SubstringData)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, UINT32 offset, UINT32 count, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* AppendData)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, HSTRING data);
    HRESULT (STDMETHODCALLTYPE* InsertData)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, UINT32 offset, HSTRING data);
    HRESULT (STDMETHODCALLTYPE* DeleteData)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, UINT32 offset, UINT32 count);
    HRESULT (STDMETHODCALLTYPE* ReplaceData)(_q_CWindows_CData_CXml_CDom_CIXmlCharacterData* pThis, UINT32 offset, UINT32 count, HSTRING data);
} _q_CWindows_CData_CXml_CDom_CIXmlCharacterDataVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlCharacterData
{
    _q_CWindows_CData_CXml_CDom_CIXmlCharacterDataVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlCommentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlComment* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlCommentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlComment
{
    _q_CWindows_CData_CXml_CDom_CIXmlCommentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Doctype)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocumentType** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Implementation)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DocumentElement)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateElement)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING tagName, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateDocumentFragment)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateTextNode)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlText** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateComment)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlComment** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateProcessingInstruction)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING target, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateAttribute)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateEntityReference)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlEntityReference** __pret);
    HRESULT (STDMETHODCALLTYPE* GetElementsByTagName)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING tagName, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateCDataSection)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING data, _q_CWindows_CData_CXml_CDom_CIXmlCDataSection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DocumentUri)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateAttributeNS)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, IInspectable* namespaceUri, HSTRING qualifiedName, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateElementNS)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, IInspectable* namespaceUri, HSTRING qualifiedName, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* GetElementById)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, HSTRING elementId, _q_CWindows_CData_CXml_CDom_CIXmlElement** __pret);
    HRESULT (STDMETHODCALLTYPE* ImportNode)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* node, boolean deep, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocument
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragment
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentFragmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadXml)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, HSTRING xml);
    HRESULT (STDMETHODCALLTYPE* LoadXmlWithSettings)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, HSTRING xml, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings);
    HRESULT (STDMETHODCALLTYPE* SaveToFileAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadXmlFromBuffer)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer);
    HRESULT (STDMETHODCALLTYPE* LoadXmlFromBufferWithSettings)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadFromUriAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromUriWithSettingsAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileWithSettingsAsync)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* loadSettings, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentStatics
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Entities)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Notations)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentType* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentType
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentTypeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* HasFeature)(_q_CWindows_CData_CXml_CDom_CIXmlDomImplementation* pThis, HSTRING feature, IInspectable* version, boolean* __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDomImplementation
{
    _q_CWindows_CData_CXml_CDom_CIXmlDomImplementationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlElement* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TagName)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetAttribute)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, HSTRING attributeName, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAttribute)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, HSTRING attributeName, HSTRING attributeValue);
    HRESULT (STDMETHODCALLTYPE* RemoveAttribute)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, HSTRING attributeName);
    HRESULT (STDMETHODCALLTYPE* GetAttributeNode)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, HSTRING attributeName, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* SetAttributeNode)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, _q_CWindows_CData_CXml_CDom_CIXmlAttribute* newAttribute, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveAttributeNode)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, _q_CWindows_CData_CXml_CDom_CIXmlAttribute* attributeNode, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* GetElementsByTagName)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, HSTRING tagName, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* SetAttributeNS)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, IInspectable* namespaceUri, HSTRING qualifiedName, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* GetAttributeNS)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, IInspectable* namespaceUri, HSTRING localName, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveAttributeNS)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, IInspectable* namespaceUri, HSTRING localName);
    HRESULT (STDMETHODCALLTYPE* SetAttributeNodeNS)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, _q_CWindows_CData_CXml_CDom_CIXmlAttribute* newAttribute, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* GetAttributeNodeNS)(_q_CWindows_CData_CXml_CDom_CIXmlElement* pThis, IInspectable* namespaceUri, HSTRING localName, _q_CWindows_CData_CXml_CDom_CIXmlAttribute** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlElementVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlElement
{
    _q_CWindows_CData_CXml_CDom_CIXmlElementVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlEntityReference* This, TrustLevel* trustLevel);
} _q_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlEntityReference
{
    _q_CWindows_CData_CXml_CDom_CIXmlEntityReferenceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxElementDepth)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxElementDepth)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ProhibitDtd)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProhibitDtd)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ResolveExternals)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ResolveExternals)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ValidateOnParse)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ValidateOnParse)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ElementContentWhiteSpace)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ElementContentWhiteSpace)(_q_CWindows_CData_CXml_CDom_CIXmlLoadSettings* pThis, boolean value);
} _q_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlLoadSettings
{
    _q_CWindows_CData_CXml_CDom_CIXmlLoadSettingsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Length)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* Item)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, UINT32 index, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedItem)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* SetNamedItem)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* node, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveNamedItem)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* GetNamedItemNS)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, IInspectable* namespaceUri, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveNamedItemNS)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, IInspectable* namespaceUri, HSTRING name, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* SetNamedItemNS)(_q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* node, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap
{
    _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMapVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNode* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NodeValue)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* put_NodeValue)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_NodeType)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CNodeType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NodeName)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ParentNode)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChildNodes)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FirstChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LastChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PreviousSibling)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NextSibling)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNamedNodeMap** __pret);
    HRESULT (STDMETHODCALLTYPE* HasChildNodes)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OwnerDocument)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* InsertBefore)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* newChild, _q_CWindows_CData_CXml_CDom_CIXmlNode* referenceChild, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* newChild, _q_CWindows_CData_CXml_CDom_CIXmlNode* referenceChild, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* childNode, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendChild)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* newChild, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* CloneNode)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, boolean deep, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NamespaceUri)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalName)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Prefix)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* Normalize)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis);
    HRESULT (STDMETHODCALLTYPE* put_Prefix)(_q_CWindows_CData_CXml_CDom_CIXmlNode* pThis, IInspectable* value);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNode
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Length)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* Item)(_q_CWindows_CData_CXml_CDom_CIXmlNodeList* pThis, UINT32 index, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNodeList
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeListVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SelectSingleNode)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* SelectNodes)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
    HRESULT (STDMETHODCALLTYPE* SelectSingleNodeNS)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, IInspectable* namespaces, _q_CWindows_CData_CXml_CDom_CIXmlNode** __pret);
    HRESULT (STDMETHODCALLTYPE* SelectNodesNS)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSelector* pThis, HSTRING xpath, IInspectable* namespaces, _q_CWindows_CData_CXml_CDom_CIXmlNodeList** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSelector
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeSelectorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetXml)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InnerText)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_InnerText)(_q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer* pThis, HSTRING value);
} _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializer
{
    _q_CWindows_CData_CXml_CDom_CIXmlNodeSerializerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Target)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Data)(_q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction* pThis, HSTRING value);
} _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstruction
{
    _q_CWindows_CData_CXml_CDom_CIXmlProcessingInstructionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlTextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlText* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlText* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlText* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SplitText)(_q_CWindows_CData_CXml_CDom_CIXmlText* pThis, UINT32 offset, _q_CWindows_CData_CXml_CDom_CIXmlText** __pret);
} _q_CWindows_CData_CXml_CDom_CIXmlTextVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlText
{
    _q_CWindows_CData_CXml_CDom_CIXmlTextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TransformToString)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* inputNode, HSTRING* __pret);
} _q_CWindows_CData_CXml_CXsl_CIXsltProcessorVtbl;
struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessor
{
    _q_CWindows_CData_CXml_CXsl_CIXsltProcessorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessor2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TransformToDocument)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessor2* pThis, _q_CWindows_CData_CXml_CDom_CIXmlNode* inputNode, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _q_CWindows_CData_CXml_CXsl_CIXsltProcessor2Vtbl;
struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessor2
{
    _q_CWindows_CData_CXml_CXsl_CIXsltProcessor2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* document, _q_CWindows_CData_CXml_CXsl_CIXsltProcessor** __pret);
} _q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactoryVtbl;
struct _q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactory
{
    _q_CWindows_CData_CXml_CXsl_CIXsltProcessorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CDevices_CGeolocation_CIGeolocatorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CDevices_CGeolocation_CIGeolocator* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CDevices_CGeolocation_CIGeolocator* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CDevices_CGeolocation_CIGeolocator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CDevices_CGeolocation_CIGeolocator* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CDevices_CGeolocation_CIGeolocator* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CDevices_CGeolocation_CIGeolocator* This, TrustLevel* trustLevel);
    void* unneeded_get_DesiredAccuracy;
    void* unneeded_put_DesiredAccuracy;
    void* unneeded_get_MovementThreshold;
    void* unneeded_put_MovementThreshold;
    void* unneeded_get_ReportInterval;
    void* unneeded_put_ReportInterval;
    void* unneeded_get_LocationStatus;
    void* unneeded_GetGeopositionAsync;
    void* unneeded_GetGeopositionAsyncWithAgeAndTimeout;
    void* unneeded_add_PositionChanged;
    void* unneeded_remove_PositionChanged;
    void* unneeded_add_StatusChanged;
    void* unneeded_remove_StatusChanged;
} _q_CWindows_CDevices_CGeolocation_CIGeolocatorVtbl;
struct _q_CWindows_CDevices_CGeolocation_CIGeolocator
{
    _q_CWindows_CDevices_CGeolocation_CIGeolocatorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CDevices_CGeolocation_CIGeopointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CDevices_CGeolocation_CIGeopoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CDevices_CGeolocation_CIGeopoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CDevices_CGeolocation_CIGeopoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CDevices_CGeolocation_CIGeopoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CDevices_CGeolocation_CIGeopoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CDevices_CGeolocation_CIGeopoint* This, TrustLevel* trustLevel);
    void* unneeded_get_Position;
} _q_CWindows_CDevices_CGeolocation_CIGeopointVtbl;
struct _q_CWindows_CDevices_CGeolocation_CIGeopoint
{
    _q_CWindows_CDevices_CGeolocation_CIGeopointVtbl* lpVtbl;
};
typedef struct _q_CWindows_CDevices_CGeolocation_CIGeopointFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* pThis, _q_CWindows_CDevices_CGeolocation_CBasicGeoposition position, _q_CWindows_CDevices_CGeolocation_CIGeopoint** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithAltitudeReferenceSystem)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* pThis, _q_CWindows_CDevices_CGeolocation_CBasicGeoposition position, _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem altitudeReferenceSystem, _q_CWindows_CDevices_CGeolocation_CIGeopoint** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithAltitudeReferenceSystemAndSpatialReferenceId)(_q_CWindows_CDevices_CGeolocation_CIGeopointFactory* pThis, _q_CWindows_CDevices_CGeolocation_CBasicGeoposition position, _q_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem altitudeReferenceSystem, UINT32 spatialReferenceId, _q_CWindows_CDevices_CGeolocation_CIGeopoint** __pret);
} _q_CWindows_CDevices_CGeolocation_CIGeopointFactoryVtbl;
struct _q_CWindows_CDevices_CGeolocation_CIGeopointFactory
{
    _q_CWindows_CDevices_CGeolocation_CIGeopointFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CDevices_CSms_CISmsMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CDevices_CSms_CISmsMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CDevices_CSms_CISmsMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CDevices_CSms_CISmsMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CDevices_CSms_CISmsMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CDevices_CSms_CISmsMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CDevices_CSms_CISmsMessage* This, TrustLevel* trustLevel);
    void* unneeded_get_Id;
    void* unneeded_get_MessageClass;
} _q_CWindows_CDevices_CSms_CISmsMessageVtbl;
struct _q_CWindows_CDevices_CSms_CISmsMessage
{
    _q_CWindows_CDevices_CSms_CISmsMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CCollections_CIPropertySetVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CCollections_CIPropertySet* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CCollections_CIPropertySet* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CCollections_CIPropertySet* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CCollections_CIPropertySet* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CCollections_CIPropertySet* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CCollections_CIPropertySet* This, TrustLevel* trustLevel);
} _q_CWindows_CFoundation_CCollections_CIPropertySetVtbl;
struct _q_CWindows_CFoundation_CCollections_CIPropertySet
{
    _q_CWindows_CFoundation_CCollections_CIPropertySetVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_CollectionChange;
    void* unneeded_get_Index;
} _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgsVtbl;
struct _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs
{
    _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncActionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncAction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncAction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncAction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncAction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_q_CWindows_CFoundation_CIAsyncAction* pThis);
} _q_CWindows_CFoundation_CIAsyncActionVtbl;
struct _q_CWindows_CFoundation_CIAsyncAction
{
    _q_CWindows_CFoundation_CIAsyncActionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CAsyncStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* Cancel)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
} _q_CWindows_CFoundation_CIAsyncInfoVtbl;
struct _q_CWindows_CFoundation_CIAsyncInfo
{
    _q_CWindows_CFoundation_CIAsyncInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIClosableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIClosable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIClosable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIClosable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIClosable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIClosable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIClosable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CFoundation_CIClosable* pThis);
} _q_CWindows_CFoundation_CIClosableVtbl;
struct _q_CWindows_CFoundation_CIClosable
{
    _q_CWindows_CFoundation_CIClosableVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIDeferralVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIDeferral* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIDeferral* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIDeferral* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIDeferral* This, TrustLevel* trustLevel);
    void* unneeded_Complete;
} _q_CWindows_CFoundation_CIDeferralVtbl;
struct _q_CWindows_CFoundation_CIDeferral
{
    _q_CWindows_CFoundation_CIDeferralVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIDeferralFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIDeferralFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIDeferralFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIDeferralFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIDeferralFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIDeferralFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIDeferralFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CFoundation_CIDeferralFactory* pThis, _q_CWindows_CFoundation_CIDeferralCompletedHandler* handler, _q_CWindows_CFoundation_CIDeferral** __pret);
} _q_CWindows_CFoundation_CIDeferralFactoryVtbl;
struct _q_CWindows_CFoundation_CIDeferralFactory
{
    _q_CWindows_CFoundation_CIDeferralFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIMemoryBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIMemoryBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIMemoryBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIMemoryBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIMemoryBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIMemoryBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIMemoryBuffer* This, TrustLevel* trustLevel);
    void* unneeded_CreateReference;
} _q_CWindows_CFoundation_CIMemoryBufferVtbl;
struct _q_CWindows_CFoundation_CIMemoryBuffer
{
    _q_CWindows_CFoundation_CIMemoryBufferVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIMemoryBufferFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIMemoryBufferFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIMemoryBufferFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIMemoryBufferFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIMemoryBufferFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIMemoryBufferFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIMemoryBufferFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CFoundation_CIMemoryBufferFactory* pThis, UINT32 capacity, _q_CWindows_CFoundation_CIMemoryBuffer** __pret);
} _q_CWindows_CFoundation_CIMemoryBufferFactoryVtbl;
struct _q_CWindows_CFoundation_CIMemoryBufferFactory
{
    _q_CWindows_CFoundation_CIMemoryBufferFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIStringableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIStringable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIStringable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIStringable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIStringable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIStringable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIStringable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ToString)(_q_CWindows_CFoundation_CIStringable* pThis, HSTRING* __pret);
} _q_CWindows_CFoundation_CIStringableVtbl;
struct _q_CWindows_CFoundation_CIStringable
{
    _q_CWindows_CFoundation_CIStringableVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriEscapeStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriEscapeStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriEscapeStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriEscapeStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* UnescapeComponent)(_q_CWindows_CFoundation_CIUriEscapeStatics* pThis, HSTRING toUnescape, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* EscapeComponent)(_q_CWindows_CFoundation_CIUriEscapeStatics* pThis, HSTRING toEscape, HSTRING* __pret);
} _q_CWindows_CFoundation_CIUriEscapeStaticsVtbl;
struct _q_CWindows_CFoundation_CIUriEscapeStatics
{
    _q_CWindows_CFoundation_CIUriEscapeStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Domain)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Extension)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Fragment)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Host)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Password)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Query)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_QueryParsed)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RawUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SchemeName)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Port)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Suspicious)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* Equals)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* pUri, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* CombineUri)(_q_CWindows_CFoundation_CIUriRuntimeClass* pThis, HSTRING relativeUri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClass
{
    _q_CWindows_CFoundation_CIUriRuntimeClassVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING uri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithRelativeUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING baseUri, HSTRING relativeUri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory
{
    _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AbsoluteCanonicalUri)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayIri)(_q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri* pThis, HSTRING* __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUri
{
    _q_CWindows_CFoundation_CIUriRuntimeClassWithAbsoluteCanonicalUriVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass* This, TrustLevel* trustLevel);
    void* unneeded_GetFirstValueByName;
} _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl;
struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass
{
    _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWwwFormUrlDecoder)(_q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory* pThis, HSTRING query, _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl;
struct _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactory
{
    _q_CWindows_CFoundation_CIWwwFormUrlDecoderRuntimeClassFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGlobalization_CILanguageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGlobalization_CILanguage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGlobalization_CILanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGlobalization_CILanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGlobalization_CILanguage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGlobalization_CILanguage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGlobalization_CILanguage* This, TrustLevel* trustLevel);
    void* unneeded_get_LanguageTag;
    void* unneeded_get_DisplayName;
    void* unneeded_get_NativeName;
    void* unneeded_get_Script;
} _q_CWindows_CGlobalization_CILanguageVtbl;
struct _q_CWindows_CGlobalization_CILanguage
{
    _q_CWindows_CGlobalization_CILanguageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGlobalization_CILanguageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGlobalization_CILanguageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGlobalization_CILanguageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGlobalization_CILanguageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGlobalization_CILanguageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGlobalization_CILanguageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGlobalization_CILanguageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateLanguage)(_q_CWindows_CGlobalization_CILanguageFactory* pThis, HSTRING languageTag, _q_CWindows_CGlobalization_CILanguage** __pret);
} _q_CWindows_CGlobalization_CILanguageFactoryVtbl;
struct _q_CWindows_CGlobalization_CILanguageFactory
{
    _q_CWindows_CGlobalization_CILanguageFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Description)(_q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface* pThis, _q_CWindows_CGraphics_CDirectX_CDirect3D11_CDirect3DSurfaceDescription* __pret);
} _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl;
struct _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurface
{
    _q_CWindows_CGraphics_CDirectX_CDirect3D11_CIDirect3DSurfaceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmap* This, TrustLevel* trustLevel);
    void* unneeded_get_BitmapPixelFormat;
    void* unneeded_get_BitmapAlphaMode;
    void* unneeded_get_PixelWidth;
    void* unneeded_get_PixelHeight;
    void* unneeded_get_IsReadOnly;
    void* unneeded_put_DpiX;
    void* unneeded_get_DpiX;
    void* unneeded_put_DpiY;
    void* unneeded_get_DpiY;
    void* unneeded_LockBuffer;
    void* unneeded_CopyTo;
    void* unneeded_CopyFromBuffer;
    void* unneeded_CopyToBuffer;
    void* unneeded_GetReadOnlyView;
} _q_CWindows_CGraphics_CImaging_CISoftwareBitmapVtbl;
struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmap
{
    _q_CWindows_CGraphics_CImaging_CISoftwareBitmapVtbl* lpVtbl;
};
typedef struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* pThis, _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat format, INT32 width, INT32 height, _q_CWindows_CGraphics_CImaging_CISoftwareBitmap** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithAlpha)(_q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory* pThis, _q_CWindows_CGraphics_CImaging_CBitmapPixelFormat format, INT32 width, INT32 height, _q_CWindows_CGraphics_CImaging_CBitmapAlphaMode alpha, _q_CWindows_CGraphics_CImaging_CISoftwareBitmap** __pret);
} _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactoryVtbl;
struct _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactory
{
    _q_CWindows_CGraphics_CImaging_CISoftwareBitmapFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateDownload)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CIStorageFile* resultFile, _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateDownloadFromFile)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CIStorageFile* resultFile, _q_CWindows_CStorage_CIStorageFile* requestBodyFile, _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateDownloadAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CIStorageFile* resultFile, _q_CWindows_CStorage_CStreams_CIInputStream* requestBodyStream, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** __pret);
    HRESULT (STDMETHODCALLTYPE* put_TransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuccessToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_FailureToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuccessTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_FailureTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification* value);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CompletionGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithCompletionGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* completionGroup, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloader** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactoryVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactory
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethodsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDownloadsAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDownloadsForGroupAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods* pThis, HSTRING group, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethodsVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethodsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDownloadsForTransferGroupAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* group, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderStaticMethods2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RequestUnconstrainedDownloadsAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* operations, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsentVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsent
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundDownloaderUserConsentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBaseVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, HSTRING headerName, HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* get_ServerCredential)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ServerCredential)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* credential);
    HRESULT (STDMETHODCALLTYPE* get_ProxyCredential)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyCredential)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* credential);
    HRESULT (STDMETHODCALLTYPE* get_Method)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Method)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Group)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CostPolicy)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CostPolicy)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy value);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBaseVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBase
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferBaseVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Trigger)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* pThis, _q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsEnabled)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* Enable)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* pThis);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Downloads)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Uploads)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetails
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroupTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetHeader)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* pThis, HSTRING headerName, HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* SetText)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* SetFile)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart* pThis, _q_CWindows_CStorage_CIStorageFile* value);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* pThis, HSTRING name, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithNameAndFileName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory* pThis, HSTRING name, HSTRING fileName, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPart** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactoryVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactory
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferContentPartFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethodsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetStatus)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods* pThis, INT32 hresult, _q_CWindows_CWeb_CWebErrorStatus* __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethodsVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethods
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferErrorStaticMethodsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TransferBehavior)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TransferBehavior)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferBehavior value);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics* pThis, HSTRING name, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStaticsVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStatics
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroupStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Guid)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestedUri)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Method)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Group)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CostPolicy)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CostPolicy)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferCostPolicy value);
    HRESULT (STDMETHODCALLTYPE* GetResultStreamAt)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, UINT64 position, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResponseInformation)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriorityVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferPriority value);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriorityVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriorityVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_WasDownloadRestarted)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AddedRanges)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* pThis, _q_CWindows_CFoundation_CIDeferral** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgsVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateUpload)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CIStorageFile* sourceFile, _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateUploadFromStreamAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CStreams_CIInputStream* sourceStream, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateUploadWithFormDataAndAutoBoundaryAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* parts, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateUploadWithSubTypeAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* parts, HSTRING subType, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateUploadWithSubTypeAndBoundaryAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* parts, HSTRING subType, HSTRING boundary, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** __pret);
    HRESULT (STDMETHODCALLTYPE* put_TransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuccessToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_FailureToastNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_SuccessTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuccessTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification* value);
    HRESULT (STDMETHODCALLTYPE* get_FailureTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* put_FailureTileNotification)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2* pThis, _q_CWindows_CUI_CNotifications_CITileNotification* value);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CompletionGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithCompletionGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferCompletionGroup* completionGroup, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploader** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactoryVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactory
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethodsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCurrentUploadsAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentUploadsForGroupAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods* pThis, HSTRING group, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethodsVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethodsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCurrentUploadsForTransferGroupAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup* group, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderStaticMethods2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RequestUnconstrainedUploadsAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* operations, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsentVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsent
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundUploaderUserConsentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentUris)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri** __pret);
    HRESULT (STDMETHODCALLTYPE* put_IndirectContentUri)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_IndirectContentUri)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcher
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTimeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulPrefetchTime)(_q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTimeVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTime
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIContentPrefetcherTimeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResultFile)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* pThis, _q_CWindows_CStorage_CIStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundDownloadProgress* __pret);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* AttachAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* Pause)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* pThis);
    HRESULT (STDMETHODCALLTYPE* Resume)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* pThis);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperationVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsRandomAccessRequired)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsRandomAccessRequired)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* GetResultRandomAccessStreamReference)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDownloadedRanges)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange** __pret);
    HRESULT (STDMETHODCALLTYPE* add_RangesDownloaded)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RangesDownloaded)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* put_RequestedUri)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_RecoverableWebErrorStatuses)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentWebErrorStatus)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* MakeCurrentInTransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4* pThis);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* pThis, HSTRING headerName, HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* RemoveRequestHeader)(_q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5* pThis, HSTRING headerName);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation5Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsResumable)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ActualUri)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_StatusCode)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(_q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation* pThis, _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformationVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformation
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIResponseInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsUnconstrained)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResultVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceFile)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* pThis, _q_CWindows_CStorage_CIStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundUploadProgress* __pret);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* AttachAsync)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperationVtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferGroup** __pret);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* MakeCurrentInTransferGroup)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3* pThis);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* pThis, HSTRING headerName, HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* RemoveRequestHeader)(_q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4* pThis, HSTRING headerName);
} _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4Vtbl;
struct _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4
{
    _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BytesSent)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BytesReceived)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AttributionId)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AttributionName)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AttributionThumbnail)(_q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsageVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsage
{
    _q_CWindows_CNetworking_CConnectivity_CIAttributedNetworkUsageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CICellularApnContextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProviderId)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AccessPointName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AccessPointName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UserName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UserName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Password)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Password)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IsCompressionEnabled)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsCompressionEnabled)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationType)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AuthenticationType)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext* pThis, _q_CWindows_CNetworking_CConnectivity_CCellularApnAuthenticationType value);
} _q_CWindows_CNetworking_CConnectivity_CICellularApnContextVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CICellularApnContext
{
    _q_CWindows_CNetworking_CConnectivity_CICellularApnContextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CICellularApnContext2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProfileName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProfileName)(_q_CWindows_CNetworking_CConnectivity_CICellularApnContext2* pThis, HSTRING value);
} _q_CWindows_CNetworking_CConnectivity_CICellularApnContext2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CICellularApnContext2
{
    _q_CWindows_CNetworking_CConnectivity_CICellularApnContext2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionCostVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkCostType)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkCostType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Roaming)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OverDataLimit)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ApproachingDataLimit)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionCostVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionCost
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionCostVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionCost2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundDataUsageRestricted)(_q_CWindows_CNetworking_CConnectivity_CIConnectionCost2* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionCost2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionCost2
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionCost2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProfileName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNetworkConnectivityLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkConnectivityLevel* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNetworkNames)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetConnectionCost)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionCost** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDataPlanStatus)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAdapter)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter** __pret);
    HRESULT (STDMETHODCALLTYPE* GetLocalUsage)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CFoundation_CDateTime StartTime, _q_CWindows_CFoundation_CDateTime EndTime, _q_CWindows_CNetworking_CConnectivity_CIDataUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* GetLocalUsagePerRoamingStates)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CFoundation_CDateTime StartTime, _q_CWindows_CFoundation_CDateTime EndTime, _q_CWindows_CNetworking_CConnectivity_CRoamingStates States, _q_CWindows_CNetworking_CConnectivity_CIDataUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkSecuritySettings)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsWwanConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsWlanConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_WwanConnectionProfileDetails)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails** __pret);
    HRESULT (STDMETHODCALLTYPE* get_WlanConnectionProfileDetails)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServiceProviderGuid)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _cg_CWindows_CFoundation_IReference_1_GUID** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSignalBars)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _cg_CWindows_CFoundation_IReference_1_UINT8** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDomainConnectivityLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _q_CWindows_CNetworking_CConnectivity_CDomainConnectivityLevel* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNetworkUsageAsync)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _q_CWindows_CFoundation_CDateTime startTime, _q_CWindows_CFoundation_CDateTime endTime, _q_CWindows_CNetworking_CConnectivity_CDataUsageGranularity granularity, _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates states, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* GetConnectivityIntervalsAsync)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2* pThis, _q_CWindows_CFoundation_CDateTime startTime, _q_CWindows_CFoundation_CDateTime endTime, _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates states, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAttributedNetworkUsageAsync)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3* pThis, _q_CWindows_CFoundation_CDateTime startTime, _q_CWindows_CFoundation_CDateTime endTime, _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates states, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetProviderNetworkUsageAsync)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4* pThis, _q_CWindows_CFoundation_CDateTime startTime, _q_CWindows_CFoundation_CDateTime endTime, _q_CWindows_CNetworking_CConnectivity_CNetworkUsageStates states, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CanDelete)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* TryDeleteAsync)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile5Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_IsConnected)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsConnected)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsWwanConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsWwanConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsWlanConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsWlanConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NetworkCostType)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkCostType value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkCostType)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkCostType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ServiceProviderGuid)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, _cg_CWindows_CFoundation_IReference_1_GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_ServiceProviderGuid)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pThis, _cg_CWindows_CFoundation_IReference_1_GUID** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilterVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_IsRoaming)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _cg_CWindows_CFoundation_IReference_1_boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsRoaming)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _cg_CWindows_CFoundation_IReference_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsOverDataLimit)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _cg_CWindows_CFoundation_IReference_1_boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOverDataLimit)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _cg_CWindows_CFoundation_IReference_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsBackgroundDataUsageRestricted)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _cg_CWindows_CFoundation_IReference_1_boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBackgroundDataUsageRestricted)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _cg_CWindows_CFoundation_IReference_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RawData)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_PurposeGuid)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* pThis, _cg_CWindows_CFoundation_IReference_1_GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_PurposeGuid)(_q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3* pThis, _cg_CWindows_CFoundation_IReference_1_GUID** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectionSessionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIConnectionSession* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectionSessionVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectionSession
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectionSessionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectivityIntervalVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionDuration)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIConnectivityIntervalVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectivityInterval
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectivityIntervalVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AcquireConnectionAsync)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* pThis, _q_CWindows_CNetworking_CConnectivity_CICellularApnContext* cellularApnContext, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession** __pret);
    HRESULT (STDMETHODCALLTYPE* AddHttpRoutePolicy)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* pThis, _q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* routePolicy);
    HRESULT (STDMETHODCALLTYPE* RemoveHttpRoutePolicy)(_q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics* pThis, _q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* routePolicy);
} _q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStaticsVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStatics
{
    _q_CWindows_CNetworking_CConnectivity_CIConnectivityManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DataPlanUsage)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* pThis, _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DataLimitInMegabytes)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* pThis, _cg_CWindows_CFoundation_IReference_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_InboundBitsPerSecond)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OutboundBitsPerSecond)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NextBillingCycle)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxTransferSizeInMegabytes)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus* pThis, _cg_CWindows_CFoundation_IReference_1_UINT32** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatusVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatus
{
    _q_CWindows_CNetworking_CConnectivity_CIDataPlanStatusVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MegabytesUsed)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LastSyncTime)(_q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsageVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsage
{
    _q_CWindows_CNetworking_CConnectivity_CIDataPlanUsageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIDataUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BytesSent)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BytesReceived)(_q_CWindows_CNetworking_CConnectivity_CIDataUsage* pThis, UINT64* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIDataUsageVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIDataUsage
{
    _q_CWindows_CNetworking_CConnectivity_CIDataUsageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIIPInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAdapter)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PrefixLength)(_q_CWindows_CNetworking_CConnectivity_CIIPInformation* pThis, _cg_CWindows_CFoundation_IReference_1_UINT8** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIIPInformationVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIIPInformation
{
    _q_CWindows_CNetworking_CConnectivity_CIIPInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CILanIdentifierVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InfrastructureId)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* pThis, _q_CWindows_CNetworking_CConnectivity_CILanIdentifierData** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PortId)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* pThis, _q_CWindows_CNetworking_CConnectivity_CILanIdentifierData** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAdapterId)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifier* pThis, GUID* __pret);
} _q_CWindows_CNetworking_CConnectivity_CILanIdentifierVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CILanIdentifier
{
    _q_CWindows_CNetworking_CConnectivity_CILanIdentifierVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CILanIdentifierDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CNetworking_CConnectivity_CILanIdentifierData* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8** __pret);
} _q_CWindows_CNetworking_CConnectivity_CILanIdentifierDataVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CILanIdentifierData
{
    _q_CWindows_CNetworking_CConnectivity_CILanIdentifierDataVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkAdapterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OutboundMaxBitsPerSecond)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InboundMaxBitsPerSecond)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IanaInterfaceType)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkItem)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkItem** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAdapterId)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* GetConnectedProfileAsync)(_q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkAdapterVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkAdapterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetConnectionProfiles)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetInternetConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetLanIdentifiers)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier** __pret);
    HRESULT (STDMETHODCALLTYPE* GetHostNames)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* GetProxyConfigurationAsync)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSortedEndpointPairs)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* destinationList, _q_CWindows_CNetworking_CHostNameSortOptions sortOptions, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
    HRESULT (STDMETHODCALLTYPE* add_NetworkStatusChanged)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkStatusChangedEventHandler* networkStatusHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_NetworkStatusChanged)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStaticsVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FindConnectionProfilesAsync)(_q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfileFilter* pProfileFilter, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkInformationStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkId)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNetworkTypes)(_q_CWindows_CNetworking_CConnectivity_CINetworkItem* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkTypes* __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkItemVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkItem
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkItemVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettingsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAuthenticationType)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkAuthenticationType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkEncryptionType)(_q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkEncryptionType* __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettingsVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettingsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HasNewInternetConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNewConnectionCost)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNewNetworkConnectivityLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNewDomainConnectivityLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNewHostNameList)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNewWwanRegistrationState)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetailsVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HasNewTetheringOperationalState)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNewTetheringClientCount)(_q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkStateChangeEventDetails2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CINetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BytesSent)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BytesReceived)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionDuration)(_q_CWindows_CNetworking_CConnectivity_CINetworkUsage* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
} _q_CWindows_CNetworking_CConnectivity_CINetworkUsageVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CINetworkUsage
{
    _q_CWindows_CNetworking_CConnectivity_CINetworkUsageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BytesSent)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BytesReceived)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsageVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsage
{
    _q_CWindows_CNetworking_CConnectivity_CIProviderNetworkUsageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIProxyConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProxyUris)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanConnectDirectly)(_q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIProxyConfigurationVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration
{
    _q_CWindows_CNetworking_CConnectivity_CIProxyConfigurationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionProfile)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HostName)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HostNameType)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicy* pThis, _q_CWindows_CNetworking_CDomainNameType* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIRoutePolicy
{
    _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateRoutePolicy)(_q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* connectionProfile, _q_CWindows_CNetworking_CIHostName* hostName, _q_CWindows_CNetworking_CDomainNameType type, _q_CWindows_CNetworking_CConnectivity_CIRoutePolicy** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactoryVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactory
{
    _q_CWindows_CNetworking_CConnectivity_CIRoutePolicyFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetConnectedSsid)(_q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetailsVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetails
{
    _q_CWindows_CNetworking_CConnectivity_CIWlanConnectionProfileDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HomeProviderId)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AccessPointName)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetNetworkRegistrationState)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* pThis, _q_CWindows_CNetworking_CConnectivity_CWwanNetworkRegistrationState* __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDataClass)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails* pThis, _q_CWindows_CNetworking_CConnectivity_CWwanDataClass* __pret);
} _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetailsVtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails
{
    _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IPKind)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* pThis, _q_CWindows_CNetworking_CConnectivity_CWwanNetworkIPKind* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PurposeGuids)(_q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID** __pret);
} _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2Vtbl;
struct _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2
{
    _q_CWindows_CNetworking_CConnectivity_CIWwanConnectionProfileDetails2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CIEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CIEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CIEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CIEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CIEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CIEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CIEndpointPair* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalHostName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_LocalHostName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalServiceName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_LocalServiceName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteHostName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_RemoteHostName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteServiceName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RemoteServiceName)(_q_CWindows_CNetworking_CIEndpointPair* pThis, HSTRING value);
} _q_CWindows_CNetworking_CIEndpointPairVtbl;
struct _q_CWindows_CNetworking_CIEndpointPair
{
    _q_CWindows_CNetworking_CIEndpointPairVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CIEndpointPairFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CIEndpointPairFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CIEndpointPairFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CIEndpointPairFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CIEndpointPairFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CIEndpointPairFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CIEndpointPairFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateEndpointPair)(_q_CWindows_CNetworking_CIEndpointPairFactory* pThis, _q_CWindows_CNetworking_CIHostName* localHostName, HSTRING localServiceName, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CNetworking_CIEndpointPair** __pret);
} _q_CWindows_CNetworking_CIEndpointPairFactoryVtbl;
struct _q_CWindows_CNetworking_CIEndpointPairFactory
{
    _q_CWindows_CNetworking_CIEndpointPairFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CIHostNameVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CIHostName* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CIHostName* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CIHostName* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CIHostName* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CIHostName* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CIHostName* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IPInformation)(_q_CWindows_CNetworking_CIHostName* pThis, _q_CWindows_CNetworking_CConnectivity_CIIPInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RawName)(_q_CWindows_CNetworking_CIHostName* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(_q_CWindows_CNetworking_CIHostName* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanonicalName)(_q_CWindows_CNetworking_CIHostName* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CNetworking_CIHostName* pThis, _q_CWindows_CNetworking_CHostNameType* __pret);
    HRESULT (STDMETHODCALLTYPE* IsEqual)(_q_CWindows_CNetworking_CIHostName* pThis, _q_CWindows_CNetworking_CIHostName* hostName, boolean* __pret);
} _q_CWindows_CNetworking_CIHostNameVtbl;
struct _q_CWindows_CNetworking_CIHostName
{
    _q_CWindows_CNetworking_CIHostNameVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CIHostNameFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CIHostNameFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CIHostNameFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CIHostNameFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CIHostNameFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CIHostNameFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CIHostNameFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateHostName)(_q_CWindows_CNetworking_CIHostNameFactory* pThis, HSTRING hostName, _q_CWindows_CNetworking_CIHostName** __pret);
} _q_CWindows_CNetworking_CIHostNameFactoryVtbl;
struct _q_CWindows_CNetworking_CIHostNameFactory
{
    _q_CWindows_CNetworking_CIHostNameFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CIHostNameStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CIHostNameStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CIHostNameStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CIHostNameStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CIHostNameStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CIHostNameStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CIHostNameStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Compare)(_q_CWindows_CNetworking_CIHostNameStatics* pThis, HSTRING value1, HSTRING value2, INT32* __pret);
} _q_CWindows_CNetworking_CIHostNameStaticsVtbl;
struct _q_CWindows_CNetworking_CIHostNameStatics
{
    _q_CWindows_CNetworking_CIHostNameStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AvailableMemoryInBytes)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Eid)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FirmwareVersion)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MobileBroadbandModemDeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Policy)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy** __pret);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimState* __pret);
    HRESULT (STDMETHODCALLTYPE* GetProfiles)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteProfileAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, HSTRING profileId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* DownloadProfileMetadataAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, HSTRING activationCode, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult** __pret);
    HRESULT (STDMETHODCALLTYPE* ResetAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* add_ProfileChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ProfileChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIESim* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESim
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESim2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Discover)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult** __pret);
    HRESULT (STDMETHODCALLTYPE* DiscoverWithServerAddressAndMatchingId)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* pThis, HSTRING serverAddress, HSTRING matchingId, _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult** __pret);
    HRESULT (STDMETHODCALLTYPE* DiscoverAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult** __pret);
    HRESULT (STDMETHODCALLTYPE* DiscoverWithServerAddressAndMatchingIdAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESim2* pThis, HSTRING serverAddress, HSTRING matchingId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESim2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESim2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESim2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ESim)(_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESim** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEventVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MatchingId)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RspServerAddress)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEventVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEvent
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverEventVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Events)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultKind* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProfileMetadata)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Result)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Result)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProfileMetadata)(_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServiceInfo)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* TryCreateESimWatcher)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher** __pret);
    HRESULT (STDMETHODCALLTYPE* add_ServiceInfoChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ServiceInfoChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimOperationStatus* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ShouldEnableManagingUi)(_q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicyVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicy
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimPolicyVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Class)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimProfileClass* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Nickname)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Policy)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderIcon)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimProfileState* __pret);
    HRESULT (STDMETHODCALLTYPE* DisableAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* SetNicknameAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfile* pThis, HSTRING newNickname, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfile
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsConfirmationCodeRequired)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Policy)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderIcon)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadataState* __pret);
    HRESULT (STDMETHODCALLTYPE* DenyInstallAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* ConfirmInstallAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* ConfirmInstallWithConfirmationCodeAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, HSTRING confirmationCode, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* PostponeInstallAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadataVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadataVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CanDelete)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanDisable)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsManagedByEnterprise)(_q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicyVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicy
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimProfilePolicyVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ESim)(_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESim** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationPreference)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimAuthenticationPreference* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsESimUiEnabled)(_q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfoVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfo
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimServiceInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ESim)(_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESim** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _q_CWindows_CNetworking_CNetworkOperators_CESimWatcherStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis);
    HRESULT (STDMETHODCALLTYPE* add_Added)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Updated)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Updated)(_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcherVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher
{
    _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_WirelessNetworkId)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, UINT32* __pretLength, UINT8** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAdapter)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RedirectMessageUrl)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RedirectMessageXml)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationUrl)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* IssueCredentials)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, HSTRING userName, HSTRING password, HSTRING extraParameters, boolean markAsManualConnectOnFailure);
    HRESULT (STDMETHODCALLTYPE* AbortAuthentication)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, boolean markAsManual);
    HRESULT (STDMETHODCALLTYPE* SkipAuthentication)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis);
    HRESULT (STDMETHODCALLTYPE* TriggerAttentionRequired)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext* pThis, HSTRING packageRelativeApplicationId, HSTRING applicationParameters);
} _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext
{
    _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IssueCredentialsAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2* pThis, HSTRING userName, HSTRING password, HSTRING extraParameters, boolean markAsManualConnectOnFailure, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TryGetAuthenticationContext)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics* pThis, HSTRING evenToken, _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContext** context, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationContextStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EventToken)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CIHotspotAuthenticationEventDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HasNetworkErrorOccurred)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseCode)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CHotspotAuthenticationResponseCode* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LogoffUrl)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AuthenticationReplyXml)(_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EFSpn)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid1)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid2)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIKnownCSimFilePathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EFSpn)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid1)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid2)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIKnownRuimFilePathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EFOns)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_EFSpn)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid1)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid2)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIKnownSimFilePathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EFSpn)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_EFOpl)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_EFPnn)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid1)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gid2)(_q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIKnownUSimFilePathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServiceProviderGuid)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServiceProviderName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentNetwork)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentDeviceInformation)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetConnectionProfiles)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AccountExperienceUrl)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AvailableNetworkAccountIds)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics* pThis, HSTRING networkAccountId, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasDeviceInformationChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasNetworkChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_AccountAdded)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_AccountAdded)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_AccountUpdated)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_AccountUpdated)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_AccountRemoved)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_AccountRemoved)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcherStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* pThis);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcherVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AntennaIndex)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SarBackoffIndex)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar* pThis, INT32* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithIndex)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory* pThis, INT32 antennaIndex, INT32 sarBackoffIndex, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSar** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactoryVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactory
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAntennaSarFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdmaVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BaseStationId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BaseStationPNCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BaseStationLatitude)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BaseStationLongitude)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BaseStationLastBroadcastGpsTime)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PilotSignalStrengthInDB)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdmaVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdma
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellCdmaVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsmVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BaseStationId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChannelNumber)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocationAreaCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReceivedSignalStrengthInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TimingAdvanceInBitPeriods)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsmVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsm
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellGsmVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLteVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChannelNumber)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalCellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReferenceSignalReceivedPowerInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReferenceSignalReceivedQualityInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TimingAdvanceInBitPeriods)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TrackingAreaCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLteVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLte
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellLteVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNRVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_INT64** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChannelNumber)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PhysicalCellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReferenceSignalReceivedPowerInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReferenceSignalReceivedQualityInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TimingAdvanceInNanoseconds)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TrackingAreaCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SignalToNoiseRatioInDB)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNRVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNR
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellNRVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringCellsCdma)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringCellsGsm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringCellsLte)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringCellsTdscdma)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringCellsUmts)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServingCellsCdma)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServingCellsGsm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServingCellsLte)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServingCellsTdscdma)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServingCellsUmts)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfoVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NeighboringCellsNR)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServingCellsNR)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdmaVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CellParameterId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChannelNumber)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocationAreaCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PathLossInDB)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReceivedSignalCodePowerInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TimingAdvanceInBitPeriods)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdmaVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdma
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellTdscdmaVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmtsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CellId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChannelNumber)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocationAreaCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PathLossInDB)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryScramblingCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_INT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReceivedSignalCodePowerInDBm)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SignalToNoiseRatioInDB)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmtsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmts
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellUmtsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CurrentSlotIndex)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* pThis, INT32* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkDeviceStatus)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, _q_CWindows_CNetworking_CNetworkOperators_CNetworkDeviceStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Manufacturer)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Model)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FirmwareInformation)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CellularClass)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, _q_CWindows_CDevices_CSms_CCellularClass* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DataClasses)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, _q_CWindows_CNetworking_CNetworkOperators_CDataClasses* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CustomDataClass)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MobileEquipmentId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TelephoneNumbers)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SubscriberId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SimIccId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceType)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentRadioState)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioState* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformationVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PinManager)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Revision)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SerialNumber)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SimSpn)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SimPnn)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SimGid1)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SlotManager)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceServiceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SupportedCommands)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenDataSession)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenCommandSession)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StatusCode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseData)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSessionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SendQueryCommandAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* pThis, UINT32 commandId, _q_CWindows_CStorage_CStreams_CIBuffer* data, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult** __pret);
    HRESULT (STDMETHODCALLTYPE* SendSetCommandAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* pThis, UINT32 commandId, _q_CWindows_CStorage_CStreams_CIBuffer* data, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CloseSession)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession* pThis);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSessionVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSession
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandSessionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ReceivedData)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSessionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* WriteDataAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* value, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* CloseSession)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* pThis);
    HRESULT (STDMETHODCALLTYPE* add_DataReceived)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DataReceived)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSessionVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSessionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceServiceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsDataReadSupported)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsDataWriteSupported)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformationVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformation
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceServiceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReceivedData)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CurrentAccount)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccount** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceInformation)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxDeviceServiceCommandSizeInBytes)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxDeviceServiceDataSizeInBytes)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceServices)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDeviceService)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, GUID deviceServiceId, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceService** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsResetSupported)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* ResetAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentConfigurationAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentNetwork)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetIsPassthroughEnabledAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* SetIsPassthroughEnabledAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2* pThis, boolean value, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TryGetPcoAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsInEmergencyCallMode)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* add_IsInEmergencyCallModeChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_IsInEmergencyCallModeChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uicc)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HomeProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HomeProviderName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfigurationVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfigurationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SarManager)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddAllowedHost)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* pThis, _q_CWindows_CNetworking_CIHostName* host);
    HRESULT (STDMETHODCALLTYPE* AddAllowedHostRange)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* pThis, _q_CWindows_CNetworking_CIHostName* first, _q_CWindows_CNetworking_CIHostName* last);
    HRESULT (STDMETHODCALLTYPE* ApplyConfigurationAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ClearConfigurationAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory* pThis, HSTRING modemDeviceId, HSTRING ruleGroupId, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolation** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactoryVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactory
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemIsolationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* FromId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* pThis, HSTRING deviceId, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAdapter)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkRegistrationState)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, _q_CWindows_CNetworking_CNetworkOperators_CNetworkRegistrationState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RegistrationNetworkError)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PacketAttachNetworkError)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ActivationNetworkError)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AccessPointName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RegisteredDataClass)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, _q_CWindows_CNetworking_CNetworkOperators_CDataClasses* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RegisteredProviderId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RegisteredProviderName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* ShowConnectionUI)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork* pThis);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetVoiceCallSupportAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RegistrationUiccApps)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCellsInfoAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Network)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetwork** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChange
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkRegistrationStateChanges)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandNetworkRegistrationStateChangeTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsComplete)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UpdatedData)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPcoDataChangeTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LockState)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Format)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinFormat* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Enabled)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxLength)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MinLength)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AttemptsRemaining)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* EnableAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, HSTRING currentPin, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* DisableAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, HSTRING currentPin, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* EnterAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, HSTRING currentPin, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* ChangeAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, HSTRING currentPin, HSTRING newPin, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* UnblockAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin* pThis, HSTRING pinUnblockKey, HSTRING newPin, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PinType)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PinLockState)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockState* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChange
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PinLockStateChanges)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinLockStateChangeTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManagerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SupportedPins)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType** __pret);
    HRESULT (STDMETHODCALLTYPE* GetPin)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType pinType, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPin** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManagerVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManager
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinManagerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsSuccessful)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AttemptsRemaining)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RadioState)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioState* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChange
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RadioStateChanges)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandRadioStateChangeTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManagerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsBackoffEnabled)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsWiFiHardwareIntegrated)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsSarControlledByHardware)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Antennas)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HysteresisTimerPeriod)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* add_TransmissionStateChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_TransmissionStateChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* EnableBackoffAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DisableBackoffAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* SetConfigurationAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* antennas, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* RevertSarToHardwareControlAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* SetTransmissionStateChangedHysteresisAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _q_CWindows_CFoundation_CTimeSpan timerPeriod, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* GetIsTransmittingAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* StartTransmissionStateMonitoring)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis);
    HRESULT (STDMETHODCALLTYPE* StopTransmissionStateMonitoring)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* pThis);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManagerVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManagerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Index)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotState* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SlotInfo)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfo** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManagerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SlotInfos)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentSlotIndex)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* SetCurrentSlot)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, INT32 slotIndex, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* SetCurrentSlotAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, INT32 slotIndex, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* add_SlotInfoChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_SlotInfoChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CurrentSlotIndexChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_CurrentSlotIndexChanged)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManagerVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManagerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsTransmitting)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SimIccId)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetUiccAppsAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUicc
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* pThis, _q_CWindows_CNetworking_CNetworkOperators_CUiccAppKind* __pret);
    HRESULT (STDMETHODCALLTYPE* GetRecordDetailsAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* uiccFilePath, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadRecordAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* uiccFilePath, INT32 recordIndex, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccApp
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CUiccAppRecordKind* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RecordCount)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RecordSize)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReadAccessCondition)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition* __pret);
    HRESULT (STDMETHODCALLTYPE* get_WriteAccessCondition)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CUiccAccessCondition* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppOperationStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_UiccApps)(_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NotificationKind)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails* pThis, _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorDataUsageNotificationKind* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorDataUsageTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NotificationType)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* pThis, _q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorEventMessageType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_EncodingType)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* pThis, UINT8* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Message)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RuleId)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SmsMessage)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails* pThis, _q_CWindows_CDevices_CSms_CISmsMessage** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorNotificationEventDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Ssid)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Ssid)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Passphrase)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Passphrase)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* pThis, HSTRING value);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfigurationVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfigurationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsBandSupported)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand band, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsBandSupportedAsync)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand band, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Band)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Band)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2* pThis, _q_CWindows_CNetworking_CNetworkOperators_CTetheringWiFiBand value);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MacAddress)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HostNames)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClient
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManagerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetTetheringClients)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManagerVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManager
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringClientManagerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheckVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AuthorizeTethering)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck* pThis, boolean allow, HSTRING entitlementFailureReason);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheckVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheck
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringEntitlementCheckVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxClientCount)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ClientCount)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TetheringOperationalState)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationalState* __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentAccessPointConfiguration)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration** __pret);
    HRESULT (STDMETHODCALLTYPE* ConfigureAccessPointAsync)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringAccessPointConfiguration* configuration, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* StartTetheringAsync)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* StopTetheringAsync)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetTetheringCapability)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* pThis, HSTRING networkAccountId, _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics* pThis, HSTRING networkAccountId, _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetTetheringCapabilityFromConnectionProfile)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* profile, _q_CWindows_CNetworking_CNetworkOperators_CTetheringCapability* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromConnectionProfile)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* profile, _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromConnectionProfileWithTargetAdapter)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile* profile, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter, _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManager** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsNoConnectionsTimeoutEnabled)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* EnableNoConnectionsTimeout)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* pThis);
    HRESULT (STDMETHODCALLTYPE* EnableNoConnectionsTimeoutAsync)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DisableNoConnectionsTimeout)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* pThis);
    HRESULT (STDMETHODCALLTYPE* DisableNoConnectionsTimeoutAsync)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4Vtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringManagerStatics4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CTetheringOperationStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AdditionalErrorMessage)(_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResultVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult
{
    _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* UpdateCost)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CNetworkCostType value);
    HRESULT (STDMETHODCALLTYPE* UpdateUsage)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile* pThis, _q_CWindows_CNetworking_CNetworkOperators_CProfileUsage value);
} _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfileVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile
{
    _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResultsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllElementsProvisioned)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProvisionResultsXml)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResultsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults
{
    _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResultsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ProvisionFromXmlDocumentAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* pThis, HSTRING provisioningXmlDocument, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults** __pret);
    HRESULT (STDMETHODCALLTYPE* GetProvisionedProfile)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent* pThis, _q_CWindows_CNetworking_CNetworkOperators_CProfileMediaType mediaType, HSTRING profileName, _q_CWindows_CNetworking_CNetworkOperators_CIProvisionedProfile** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent
{
    _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethodsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromNetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods* pThis, HSTRING networkAccountId, _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgent** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethodsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethods
{
    _q_CWindows_CNetworking_CNetworkOperators_CIProvisioningAgentStaticMethodsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* AllowTethering)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* pThis);
    HRESULT (STDMETHODCALLTYPE* DenyTethering)(_q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails* pThis, HSTRING entitlementFailureReason);
} _q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetails
{
    _q_CWindows_CNetworking_CNetworkOperators_CITetheringEntitlementCheckTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DataCodingScheme)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* pThis, UINT8* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DataCodingScheme)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* pThis, UINT8 value);
    HRESULT (STDMETHODCALLTYPE* GetPayload)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* pThis, UINT32* __pretLength, UINT8** __pret);
    HRESULT (STDMETHODCALLTYPE* SetPayload)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* pThis, UINT32 valueLength, UINT8* value);
    HRESULT (STDMETHODCALLTYPE* get_PayloadAsText)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_PayloadAsText)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* pThis, HSTRING value);
} _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage
{
    _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateMessage)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory* pThis, HSTRING messageText, _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactoryVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactory
{
    _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessageFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdReplyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ResultCode)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* pThis, _q_CWindows_CNetworking_CNetworkOperators_CUssdResultCode* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Message)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIUssdReplyVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdReply
{
    _q_CWindows_CNetworking_CNetworkOperators_CIUssdReplyVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SendMessageAndGetReplyAsync)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIUssdMessage* message, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply** __pret);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSession* pThis);
} _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdSession
{
    _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromNetworkAccountId)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* pThis, HSTRING networkAccountId, _q_CWindows_CNetworking_CNetworkOperators_CIUssdSession** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNetworkInterfaceId)(_q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics* pThis, HSTRING networkInterfaceId, _q_CWindows_CNetworking_CNetworkOperators_CIUssdSession** __pret);
} _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStaticsVtbl;
struct _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStatics
{
    _q_CWindows_CNetworking_CNetworkOperators_CIUssdSessionStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PeerInformation)(_q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* pThis, _q_CWindows_CNetworking_CProximity_CIPeerInformation** __pret);
} _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgsVtbl;
struct _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs
{
    _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerFinderStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowBluetooth)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowBluetooth)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AllowInfrastructure)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowInfrastructure)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AllowWiFiDirect)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowWiFiDirect)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedDiscoveryTypes)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _q_CWindows_CNetworking_CProximity_CPeerDiscoveryTypes* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AlternateIdentities)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis);
    HRESULT (STDMETHODCALLTYPE* StartWithMessage)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, HSTRING peerMessage);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis);
    HRESULT (STDMETHODCALLTYPE* add_TriggeredConnectionStateChanged)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_TriggeredConnectionStateChanged)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_ConnectionRequested)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ConnectionRequested)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* FindAllPeersAsync)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectAsync)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics* pThis, _q_CWindows_CNetworking_CProximity_CIPeerInformation* peerInformation, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket** __pret);
} _q_CWindows_CNetworking_CProximity_CIPeerFinderStaticsVtbl;
struct _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics
{
    _q_CWindows_CNetworking_CProximity_CIPeerFinderStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Role)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* pThis, _q_CWindows_CNetworking_CProximity_CPeerRole* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Role)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* pThis, _q_CWindows_CNetworking_CProximity_CPeerRole value);
    HRESULT (STDMETHODCALLTYPE* get_DiscoveryData)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* put_DiscoveryData)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* CreateWatcher)(_q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2* pThis, _q_CWindows_CNetworking_CProximity_CIPeerWatcher** __pret);
} _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2Vtbl;
struct _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2
{
    _q_CWindows_CNetworking_CProximity_CIPeerFinderStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(_q_CWindows_CNetworking_CProximity_CIPeerInformation* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CProximity_CIPeerInformationVtbl;
struct _q_CWindows_CNetworking_CProximity_CIPeerInformation
{
    _q_CWindows_CNetworking_CProximity_CIPeerInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerInformation3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DiscoveryData)(_q_CWindows_CNetworking_CProximity_CIPeerInformation3* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CProximity_CIPeerInformation3Vtbl;
struct _q_CWindows_CNetworking_CProximity_CIPeerInformation3
{
    _q_CWindows_CNetworking_CProximity_CIPeerInformation3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndServiceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HostName)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServiceName)(_q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndServiceVtbl;
struct _q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndService
{
    _q_CWindows_CNetworking_CProximity_CIPeerInformationWithHostAndServiceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIPeerWatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_Added)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Updated)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Updated)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis, _q_CWindows_CNetworking_CProximity_CPeerWatcherStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CNetworking_CProximity_CIPeerWatcher* pThis);
} _q_CWindows_CNetworking_CProximity_CIPeerWatcherVtbl;
struct _q_CWindows_CNetworking_CProximity_CIPeerWatcher
{
    _q_CWindows_CNetworking_CProximity_CIPeerWatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIProximityDeviceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SubscribeForMessage)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, HSTRING messageType, _q_CWindows_CNetworking_CProximity_CIMessageReceivedHandler* messageReceivedHandler, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* PublishMessage)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, HSTRING messageType, HSTRING message, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* PublishMessageWithCallback)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, HSTRING messageType, HSTRING message, _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* messageTransmittedHandler, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* PublishBinaryMessage)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, HSTRING messageType, _q_CWindows_CStorage_CStreams_CIBuffer* message, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* PublishBinaryMessageWithCallback)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, HSTRING messageType, _q_CWindows_CStorage_CStreams_CIBuffer* message, _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* messageTransmittedHandler, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* PublishUriMessage)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* message, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* PublishUriMessageWithCallback)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* message, _q_CWindows_CNetworking_CProximity_CIMessageTransmittedHandler* messageTransmittedHandler, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* StopSubscribingForMessage)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, INT64 subscriptionId);
    HRESULT (STDMETHODCALLTYPE* StopPublishingMessage)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, INT64 messageId);
    HRESULT (STDMETHODCALLTYPE* add_DeviceArrived)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, _q_CWindows_CNetworking_CProximity_CIDeviceArrivedEventHandler* arrivedHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DeviceArrived)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_DeviceDeparted)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, _q_CWindows_CNetworking_CProximity_CIDeviceDepartedEventHandler* departedHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DeviceDeparted)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, _q_CWindows_CFoundation_CEventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* get_MaxMessageBytes)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BitsPerSecond)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceId)(_q_CWindows_CNetworking_CProximity_CIProximityDevice* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CProximity_CIProximityDeviceVtbl;
struct _q_CWindows_CNetworking_CProximity_CIProximityDevice
{
    _q_CWindows_CNetworking_CProximity_CIProximityDeviceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIProximityDeviceStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* pThis, _q_CWindows_CNetworking_CProximity_CIProximityDevice** __pret);
    HRESULT (STDMETHODCALLTYPE* FromId)(_q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics* pThis, HSTRING deviceId, _q_CWindows_CNetworking_CProximity_CIProximityDevice** __pret);
} _q_CWindows_CNetworking_CProximity_CIProximityDeviceStaticsVtbl;
struct _q_CWindows_CNetworking_CProximity_CIProximityDeviceStatics
{
    _q_CWindows_CNetworking_CProximity_CIProximityDeviceStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CIProximityMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MessageType)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SubscriptionId)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* pThis, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DataAsString)(_q_CWindows_CNetworking_CProximity_CIProximityMessage* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CProximity_CIProximityMessageVtbl;
struct _q_CWindows_CNetworking_CProximity_CIProximityMessage
{
    _q_CWindows_CNetworking_CProximity_CIProximityMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* pThis, _q_CWindows_CNetworking_CProximity_CTriggeredConnectState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Socket)(_q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocket** __pret);
} _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgsVtbl;
struct _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs
{
    _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* pThis);
    HRESULT (STDMETHODCALLTYPE* add_PushNotificationReceived)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_PushNotificationReceived)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelVtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreatePushNotificationChannelForApplicationAsync)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* CreatePushNotificationChannelForApplicationAsyncWithId)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* pThis, HSTRING applicationId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* CreatePushNotificationChannelForSecondaryTileAsync)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* pThis, HSTRING tileId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* get_User)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser* pThis, _q_CWindows_CSystem_CIUser** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUserVtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateRawPushNotificationChannelWithAlternateKeyForApplicationAsync)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* appServerKey, HSTRING channelId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateRawPushNotificationChannelWithAlternateKeyForApplicationAsyncWithId)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* appServerKey, HSTRING channelId, HSTRING appId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2Vtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreatePushNotificationChannelForApplicationAsync)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* CreatePushNotificationChannelForApplicationAsyncWithId)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* pThis, HSTRING applicationId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* CreatePushNotificationChannelForSecondaryTileAsync)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics* pThis, HSTRING tileId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStaticsVtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2Vtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3* pThis, _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerForUser** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3Vtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ChannelsRevoked)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* pThis, _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ChannelsRevoked)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4Vtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelManagerStatics4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* This, TrustLevel* trustLevel);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgsVtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NotificationType)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, _q_CWindows_CNetworking_CPushNotifications_CPushNotificationType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ToastNotification)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TileNotification)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CITileNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BadgeNotification)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIBadgeNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RawNotification)(_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* pThis, _q_CWindows_CNetworking_CPushNotifications_CIRawNotification** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgsVtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs
{
    _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIRawNotificationVtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification
{
    _q_CWindows_CNetworking_CPushNotifications_CIRawNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* pThis, _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChannelId)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification2* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIRawNotification2Vtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification2
{
    _q_CWindows_CNetworking_CPushNotifications_CIRawNotification2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentBytes)(_q_CWindows_CNetworking_CPushNotifications_CIRawNotification3* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CPushNotifications_CIRawNotification3Vtbl;
struct _q_CWindows_CNetworking_CPushNotifications_CIRawNotification3
{
    _q_CWindows_CNetworking_CPushNotifications_CIRawNotification3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* pThis, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IPAddress)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HasInstanceNameChanged)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResultVtbl;
struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult
{
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DnssdServiceInstanceName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DnssdServiceInstanceName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HostName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_HostName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_Port)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Port)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, UINT16 value);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, UINT16 value);
    HRESULT (STDMETHODCALLTYPE* get_Weight)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Weight)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, UINT16 value);
    HRESULT (STDMETHODCALLTYPE* get_TextAttributes)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* RegisterStreamSocketListenerAsync1)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketListener* socket, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* RegisterStreamSocketListenerAsync2)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketListener* socket, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* RegisterDatagramSocketAsync1)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CSockets_CIDatagramSocket* socket, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* RegisterDatagramSocketAsync2)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CSockets_CIDatagramSocket* socket, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult** __pret);
} _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceVtbl;
struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance
{
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory* pThis, HSTRING dnssdServiceInstanceName, _q_CWindows_CNetworking_CIHostName* hostName, UINT16 port, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance** __pret);
} _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactoryVtbl;
struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactory
{
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstanceFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_Added)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Stopped)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Stopped)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcherStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* pThis);
} _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcherVtbl;
struct _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher
{
    _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ControlChannelTriggerId)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerKeepAliveIntervalInMinutes)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ServerKeepAliveIntervalInMinutes)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_CurrentKeepAliveIntervalInMinutes)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TransportObject)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_KeepAliveTrigger)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, _q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PushNotificationTrigger)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, _q_CWindows_CApplicationModel_CBackground_CIBackgroundTrigger** __pret);
    HRESULT (STDMETHODCALLTYPE* UsingTransport)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, IInspectable* transport);
    HRESULT (STDMETHODCALLTYPE* WaitForPushEnabled)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis, _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* DecreaseNetworkKeepAliveInterval)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis);
    HRESULT (STDMETHODCALLTYPE* FlushTransport)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger* pThis);
} _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerVtbl;
struct _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger
{
    _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsWakeFromLowPowerSupported)(_q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2
{
    _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateControlChannelTrigger)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* pThis, HSTRING channelId, UINT32 serverKeepAliveIntervalInMinutes, _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateControlChannelTriggerEx)(_q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory* pThis, HSTRING channelId, UINT32 serverKeepAliveIntervalInMinutes, _q_CWindows_CNetworking_CSockets_CControlChannelTriggerResourceType resourceRequestType, _q_CWindows_CNetworking_CSockets_CIControlChannelTrigger** __pret);
} _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactoryVtbl;
struct _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactory
{
    _q_CWindows_CNetworking_CSockets_CIControlChannelTriggerFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Control)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OutputStream)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectWithEndpointPairAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CIEndpointPair* endpointPair, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* BindServiceNameAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, HSTRING localServiceName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* BindEndpointAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CIHostName* localHostName, HSTRING localServiceName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* JoinMulticastGroup)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CIHostName* host);
    HRESULT (STDMETHODCALLTYPE* GetOutputStreamAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* GetOutputStreamWithEndpointPairAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CNetworking_CIEndpointPair* endpointPair, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* add_MessageReceived)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_MessageReceived)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* BindServiceNameAndAdapterAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket2* pThis, HSTRING localServiceName, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocket2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket2
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocket2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CancelIOAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* EnableTransferOwnership)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* pThis, GUID taskId);
    HRESULT (STDMETHODCALLTYPE* EnableTransferOwnershipWithConnectedStandbyAction)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* pThis, GUID taskId, _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction connectedStandbyAction);
    HRESULT (STDMETHODCALLTYPE* TransferOwnership)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* pThis, HSTRING socketId);
    HRESULT (STDMETHODCALLTYPE* TransferOwnershipWithContext)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* pThis, HSTRING socketId, _q_CWindows_CNetworking_CSockets_CISocketActivityContext* data);
    HRESULT (STDMETHODCALLTYPE* TransferOwnershipWithContextAndKeepAliveTime)(_q_CWindows_CNetworking_CSockets_CIDatagramSocket3* pThis, HSTRING socketId, _q_CWindows_CNetworking_CSockets_CISocketActivityContext* data, _q_CWindows_CFoundation_CTimeSpan keepAliveTime);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocket3Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocket3
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocket3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_QualityOfService)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketQualityOfService* __pret);
    HRESULT (STDMETHODCALLTYPE* put_QualityOfService)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketQualityOfService value);
    HRESULT (STDMETHODCALLTYPE* get_OutboundUnicastHopLimit)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* pThis, UINT8* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OutboundUnicastHopLimit)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl* pThis, UINT8 value);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_InboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_InboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DontFragment)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DontFragment)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2* pThis, boolean value);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MulticastOnly)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MulticastOnly)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3* pThis, boolean value);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketControl3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddress)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalPort)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteAddress)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemotePort)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformation
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RemoteAddress)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemotePort)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddress)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDataReader)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* pThis, _q_CWindows_CStorage_CStreams_CIDataReader** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDataStream)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetEndpointPairsAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
    HRESULT (STDMETHODCALLTYPE* GetEndpointPairsWithSortOptionsAsync)(_q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CNetworking_CHostNameSortOptions sortOptions, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
} _q_CWindows_CNetworking_CSockets_CIDatagramSocketStaticsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIDatagramSocketStatics
{
    _q_CWindows_CNetworking_CSockets_CIDatagramSocketStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Control)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIWebSocketInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* add_MessageReceived)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_MessageReceived)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ServerCustomValidationRequested)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ServerCustomValidationRequested)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocket2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket2
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocket2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SendNonfinalFrameAsync)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* data, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* SendFinalFrameAsync)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocket3* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* data, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32** __pret);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocket3Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocket3
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocket3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxMessageSize)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxMessageSize)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MessageType)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketMessageType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MessageType)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketMessageType value);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DesiredUnsolicitedPongInterval)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DesiredUnsolicitedPongInterval)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_ActualUnsolicitedPongInterval)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReceiveMode)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ReceiveMode)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CNetworking_CSockets_CMessageWebSocketReceiveMode value);
    HRESULT (STDMETHODCALLTYPE* get_ClientCertificate)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ClientCertificate)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* value);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocketControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MessageType)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CSocketMessageType* __pret);
    HRESULT (STDMETHODCALLTYPE* GetDataReader)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* pThis, _q_CWindows_CStorage_CStreams_CIDataReader** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDataStream)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsMessageComplete)(_q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2
{
    _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_MessageReceived)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* value, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_MessageReceived)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_Control)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OutputStream)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* value, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CloseWithStatus)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* pThis, UINT16 code, HSTRING reason);
} _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket
{
    _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MessageType)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketMessageType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MessageType)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketMessageType value);
} _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControl
{
    _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BandwidthStatistics)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* pThis, _q_CWindows_CNetworking_CSockets_CBandwidthStatistics* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Protocol)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddress)(_q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
} _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformation
{
    _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocketInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_InputStream)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OutputStream)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* value, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CloseWithStatus)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* pThis, UINT16 code, HSTRING reason);
} _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket
{
    _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BandwidthStatistics)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* pThis, _q_CWindows_CNetworking_CSockets_CBandwidthStatistics* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Protocol)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddress)(_q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
} _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformation
{
    _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocketInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityContextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CNetworking_CSockets_CISocketActivityContext* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CSockets_CISocketActivityContextVtbl;
struct _q_CWindows_CNetworking_CSockets_CISocketActivityContext
{
    _q_CWindows_CNetworking_CSockets_CISocketActivityContextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityContextFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* data, _q_CWindows_CNetworking_CSockets_CISocketActivityContext** __pret);
} _q_CWindows_CNetworking_CSockets_CISocketActivityContextFactoryVtbl;
struct _q_CWindows_CNetworking_CSockets_CISocketActivityContextFactory
{
    _q_CWindows_CNetworking_CSockets_CISocketActivityContextFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TaskId)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SocketKind)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, _q_CWindows_CNetworking_CSockets_CSocketActivityKind* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Context)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, _q_CWindows_CNetworking_CSockets_CISocketActivityContext** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DatagramSocket)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, _q_CWindows_CNetworking_CSockets_CIDatagramSocket** __pret);
    HRESULT (STDMETHODCALLTYPE* get_StreamSocket)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocket** __pret);
    HRESULT (STDMETHODCALLTYPE* get_StreamSocketListener)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformation* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketListener** __pret);
} _q_CWindows_CNetworking_CSockets_CISocketActivityInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CISocketActivityInformation
{
    _q_CWindows_CNetworking_CSockets_CISocketActivityInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityInformationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllSockets)(_q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics* pThis, _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation** __pret);
} _q_CWindows_CNetworking_CSockets_CISocketActivityInformationStaticsVtbl;
struct _q_CWindows_CNetworking_CSockets_CISocketActivityInformationStatics
{
    _q_CWindows_CNetworking_CSockets_CISocketActivityInformationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Reason)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* pThis, _q_CWindows_CNetworking_CSockets_CSocketActivityTriggerReason* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SocketInformation)(_q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails* pThis, _q_CWindows_CNetworking_CSockets_CISocketActivityInformation** __pret);
} _q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetailsVtbl;
struct _q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetails
{
    _q_CWindows_CNetworking_CSockets_CISocketActivityTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CISocketErrorStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetStatus)(_q_CWindows_CNetworking_CSockets_CISocketErrorStatics* pThis, INT32 hresult, _q_CWindows_CNetworking_CSockets_CSocketErrorStatus* __pret);
} _q_CWindows_CNetworking_CSockets_CISocketErrorStaticsVtbl;
struct _q_CWindows_CNetworking_CSockets_CISocketErrorStatics
{
    _q_CWindows_CNetworking_CSockets_CISocketErrorStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Control)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_InputStream)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OutputStream)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectWithEndpointPairAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CIEndpointPair* endpointPair, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectWithEndpointPairAndProtectionLevelAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CIEndpointPair* endpointPair, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel protectionLevel, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectWithProtectionLevelAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel protectionLevel, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* UpgradeToSslAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket* pThis, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel protectionLevel, _q_CWindows_CNetworking_CIHostName* validationHostName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocket
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocket2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ConnectWithProtectionLevelAndAdapterAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket2* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel protectionLevel, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocket2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocket2
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocket2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocket3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CancelIOAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* EnableTransferOwnership)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* pThis, GUID taskId);
    HRESULT (STDMETHODCALLTYPE* EnableTransferOwnershipWithConnectedStandbyAction)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* pThis, GUID taskId, _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction connectedStandbyAction);
    HRESULT (STDMETHODCALLTYPE* TransferOwnership)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* pThis, HSTRING socketId);
    HRESULT (STDMETHODCALLTYPE* TransferOwnershipWithContext)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* pThis, HSTRING socketId, _q_CWindows_CNetworking_CSockets_CISocketActivityContext* data);
    HRESULT (STDMETHODCALLTYPE* TransferOwnershipWithContextAndKeepAliveTime)(_q_CWindows_CNetworking_CSockets_CIStreamSocket3* pThis, HSTRING socketId, _q_CWindows_CNetworking_CSockets_CISocketActivityContext* data, _q_CWindows_CFoundation_CTimeSpan keepAliveTime);
} _q_CWindows_CNetworking_CSockets_CIStreamSocket3Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocket3
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocket3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NoDelay)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NoDelay)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_KeepAlive)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_KeepAlive)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_OutboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OutboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_QualityOfService)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketQualityOfService* __pret);
    HRESULT (STDMETHODCALLTYPE* put_QualityOfService)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketQualityOfService value);
    HRESULT (STDMETHODCALLTYPE* get_OutboundUnicastHopLimit)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, UINT8* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OutboundUnicastHopLimit)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl* pThis, UINT8 value);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IgnorableServerCertificateErrors)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl2* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketControl2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl2
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SerializeConnectionAttempts)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SerializeConnectionAttempts)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClientCertificate)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ClientCertificate)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl3* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* value);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketControl3Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl3
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketControl3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MinProtectionLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* pThis, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MinProtectionLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketControl4* pThis, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel value);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketControl4Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketControl4
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketControl4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddress)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalPort)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteHostName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteAddress)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteServiceName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemotePort)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoundTripTimeStatistics)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CNetworking_CSockets_CRoundTripTimeStatistics* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BandwidthStatistics)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CNetworking_CSockets_CBandwidthStatistics* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SessionKey)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrorSeverity)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* pThis, _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrors)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificate)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerIntermediateCertificates)(_q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketInformation2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Control)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* BindServiceNameAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* pThis, HSTRING localServiceName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* BindEndpointAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* pThis, _q_CWindows_CNetworking_CIHostName* localHostName, HSTRING localServiceName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* add_ConnectionReceived)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ConnectionReceived)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* BindServiceNameWithProtectionLevelAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* pThis, HSTRING localServiceName, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel protectionLevel, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* BindServiceNameWithProtectionLevelAndAdapterAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener2* pThis, HSTRING localServiceName, _q_CWindows_CNetworking_CSockets_CSocketProtectionLevel protectionLevel, _q_CWindows_CNetworking_CConnectivity_CINetworkAdapter* adapter, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListener2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener2
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListener2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CancelIOAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* EnableTransferOwnership)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* pThis, GUID taskId);
    HRESULT (STDMETHODCALLTYPE* EnableTransferOwnershipWithConnectedStandbyAction)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* pThis, GUID taskId, _q_CWindows_CNetworking_CSockets_CSocketActivityConnectedStandbyAction connectedStandbyAction);
    HRESULT (STDMETHODCALLTYPE* TransferOwnership)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* pThis, HSTRING socketId);
    HRESULT (STDMETHODCALLTYPE* TransferOwnershipWithContext)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListener3* pThis, HSTRING socketId, _q_CWindows_CNetworking_CSockets_CISocketActivityContext* data);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListener3Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListener3
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListener3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Socket)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocket** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_QualityOfService)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketQualityOfService* __pret);
    HRESULT (STDMETHODCALLTYPE* put_QualityOfService)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl* pThis, _q_CWindows_CNetworking_CSockets_CSocketQualityOfService value);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NoDelay)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NoDelay)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_KeepAlive)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_KeepAlive)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_OutboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OutboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_OutboundUnicastHopLimit)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, UINT8* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OutboundUnicastHopLimit)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2* pThis, UINT8 value);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalPort)(_q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformation
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamSocketStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetEndpointPairsAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
    HRESULT (STDMETHODCALLTYPE* GetEndpointPairsWithSortOptionsAsync)(_q_CWindows_CNetworking_CSockets_CIStreamSocketStatics* pThis, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remoteServiceName, _q_CWindows_CNetworking_CHostNameSortOptions sortOptions, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamSocketStaticsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamSocketStatics
{
    _q_CWindows_CNetworking_CSockets_CIStreamSocketStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Control)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Information)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* pThis, _q_CWindows_CNetworking_CSockets_CIWebSocketInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_InputStream)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CNetworking_CSockets_CIStreamWebSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocket
{
    _q_CWindows_CNetworking_CSockets_CIStreamWebSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocket2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ServerCustomValidationRequested)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ServerCustomValidationRequested)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocket2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CNetworking_CSockets_CIStreamWebSocket2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocket2
{
    _q_CWindows_CNetworking_CSockets_CIStreamWebSocket2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NoDelay)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NoDelay)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl* pThis, boolean value);
} _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl
{
    _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DesiredUnsolicitedPongInterval)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DesiredUnsolicitedPongInterval)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* pThis, _q_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* get_ActualUnsolicitedPongInterval)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ClientCertificate)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ClientCertificate)(_q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* value);
} _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2
{
    _q_CWindows_CNetworking_CSockets_CIStreamWebSocketControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OutputStream)(_q_CWindows_CNetworking_CSockets_CIWebSocket* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectAsync)(_q_CWindows_CNetworking_CSockets_CIWebSocket* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(_q_CWindows_CNetworking_CSockets_CIWebSocket* pThis, HSTRING headerName, HSTRING headerValue);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(_q_CWindows_CNetworking_CSockets_CIWebSocket* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* eventHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(_q_CWindows_CNetworking_CSockets_CIWebSocket* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* CloseWithStatus)(_q_CWindows_CNetworking_CSockets_CIWebSocket* pThis, UINT16 code, HSTRING reason);
} _q_CWindows_CNetworking_CSockets_CIWebSocketVtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocket
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Code)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Reason)(_q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OutboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OutboundBufferSizeInBytes)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ServerCredential)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ServerCredential)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyCredential)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyCredential)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedProtocols)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketControlVtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketControl
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IgnorableServerCertificateErrors)(_q_CWindows_CNetworking_CSockets_CIWebSocketControl2* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketControl2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketControl2
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketErrorStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetStatus)(_q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics* pThis, INT32 hresult, _q_CWindows_CWeb_CWebErrorStatus* __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketErrorStaticsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketErrorStatics
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketErrorStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddress)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BandwidthStatistics)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* pThis, _q_CWindows_CNetworking_CSockets_CBandwidthStatistics* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Protocol)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketInformationVtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketInformation
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketInformation2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificate)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrorSeverity)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* pThis, _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrors)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerIntermediateCertificates)(_q_CWindows_CNetworking_CSockets_CIWebSocketInformation2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate** __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketInformation2Vtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketInformation2
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketInformation2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificate)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrorSeverity)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrors)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerIntermediateCertificates)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* Reject)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* pThis);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CFoundation_CIDeferral** __pret);
} _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgsVtbl;
struct _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs
{
    _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnAppIdVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* pThis, _q_CWindows_CNetworking_CVpn_CVpnAppIdType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Type)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* pThis, _q_CWindows_CNetworking_CVpn_CVpnAppIdType value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CNetworking_CVpn_CIVpnAppId* pThis, HSTRING value);
} _q_CWindows_CNetworking_CVpn_CIVpnAppIdVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnAppId
{
    _q_CWindows_CNetworking_CVpn_CIVpnAppIdVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnAppIdFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory* pThis, _q_CWindows_CNetworking_CVpn_CVpnAppIdType type, HSTRING value, _q_CWindows_CNetworking_CVpn_CIVpnAppId** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnAppIdFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnAppIdFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnAppIdFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AssociateTransport)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, IInspectable* mainOuterTunnelTransport, IInspectable* optionalOuterTunnelTransport);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIPv4list, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIPv6list, _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* vpnInterfaceId, _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* routeScope, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* namespaceScope, UINT32 mtuSize, UINT32 maxFrameSize, boolean optimizeForLowCostNetwork, IInspectable* mainOuterTunnelTransport, IInspectable* optionalOuterTunnelTransport);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis);
    HRESULT (STDMETHODCALLTYPE* RequestCredentials)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _q_CWindows_CNetworking_CVpn_CVpnCredentialType credType, boolean isRetry, boolean isSingleSignOnCredential, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* certificate, _q_CWindows_CNetworking_CVpn_CIVpnPickedCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestVpnPacketBuffer)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _q_CWindows_CNetworking_CVpn_CVpnDataPathType type, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer** vpnPacketBuffer);
    HRESULT (STDMETHODCALLTYPE* LogDiagnosticMessage)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, HSTRING message);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Configuration)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration** __pret);
    HRESULT (STDMETHODCALLTYPE* add_ActivityChange)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ActivityChange)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* put_PlugInContext)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_PlugInContext)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemHealth)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _q_CWindows_CNetworking_CVpn_CIVpnSystemHealth** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestCustomPrompt)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* customPrompt);
    HRESULT (STDMETHODCALLTYPE* SetErrorMessage)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, HSTRING message);
    HRESULT (STDMETHODCALLTYPE* SetAllowedSslTlsVersions)(_q_CWindows_CNetworking_CVpn_CIVpnChannel* pThis, IInspectable* tunnelTransport, boolean useTls12);
} _q_CWindows_CNetworking_CVpn_CIVpnChannelVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannel
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannelVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* StartWithMainTransport)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIPv4list, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIPv6list, _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* vpnInterfaceId, _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* assignedRoutes, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* assignedDomainName, UINT32 mtuSize, UINT32 maxFrameSize, boolean Reserved, IInspectable* mainOuterTunnelTransport);
    HRESULT (STDMETHODCALLTYPE* StartExistingTransports)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIPv4list, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIPv6list, _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* vpnInterfaceId, _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* assignedRoutes, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* assignedDomainName, UINT32 mtuSize, UINT32 maxFrameSize, boolean Reserved);
    HRESULT (STDMETHODCALLTYPE* add_ActivityStateChange)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ActivityStateChange)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetVpnSendPacketBuffer)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* GetVpnReceivePacketBuffer)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestCustomPromptAsync)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* customPromptElement, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestCredentialsWithCertificateAsync)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _q_CWindows_CNetworking_CVpn_CVpnCredentialType credType, UINT32 credOptions, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* certificate, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestCredentialsWithOptionsAsync)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _q_CWindows_CNetworking_CVpn_CVpnCredentialType credType, UINT32 credOptions, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestCredentialsSimpleAsync)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _q_CWindows_CNetworking_CVpn_CVpnCredentialType credType, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* TerminateConnection)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, HSTRING message);
    HRESULT (STDMETHODCALLTYPE* StartWithTrafficFilter)(_q_CWindows_CNetworking_CVpn_CIVpnChannel2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIpv4List, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* assignedClientIpv6List, _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* vpnInterfaceId, _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* assignedRoutes, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* assignedNamespace, UINT32 mtuSize, UINT32 maxFrameSize, boolean reserved, IInspectable* mainOuterTunnelTransport, IInspectable* optionalOuterTunnelTransport, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* assignedTrafficFilters);
} _q_CWindows_CNetworking_CVpn_CIVpnChannel2Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannel2
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannel2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddAndAssociateTransport)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* pThis, IInspectable* transport, IInspectable* context);
    HRESULT (STDMETHODCALLTYPE* StartWithMultipleTransports)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* assignedClientIpv4Addresses, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* assignedClientIpv6Addresses, _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* vpninterfaceId, _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* assignedRoutes, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* assignedNamespace, UINT32 mtuSize, UINT32 maxFrameSize, boolean reserved, _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* transports, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* assignedTrafficFilters);
    HRESULT (STDMETHODCALLTYPE* ReplaceAndAssociateTransport)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* pThis, IInspectable* transport, IInspectable* context);
    HRESULT (STDMETHODCALLTYPE* StartReconnectingTransport)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* pThis, IInspectable* transport, IInspectable* context);
    HRESULT (STDMETHODCALLTYPE* GetSlotTypeForTransportContext)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* pThis, IInspectable* context, _q_CWindows_CNetworking_CSockets_CControlChannelTriggerStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CurrentRequestTransportContext)(_q_CWindows_CNetworking_CVpn_CIVpnChannel4* pThis, IInspectable** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnChannel4Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannel4
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannel4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel5Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AppendVpnReceivePacketBuffer)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* decapsulatedPacketBuffer);
    HRESULT (STDMETHODCALLTYPE* AppendVpnSendPacketBuffer)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* encapsulatedPacketBuffer);
    HRESULT (STDMETHODCALLTYPE* FlushVpnReceivePacketBuffers)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* pThis);
    HRESULT (STDMETHODCALLTYPE* FlushVpnSendPacketBuffers)(_q_CWindows_CNetworking_CVpn_CIVpnChannel5* pThis);
} _q_CWindows_CNetworking_CVpn_CIVpnChannel5Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannel5
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannel5Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannel6Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ActivateForeground)(_q_CWindows_CNetworking_CVpn_CIVpnChannel6* pThis, HSTRING packageRelativeAppId, _q_CWindows_CFoundation_CCollections_CIPropertySet* sharedContext, _q_CWindows_CFoundation_CCollections_CIPropertySet** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnChannel6Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannel6
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannel6Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* pThis, _q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventType* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgsVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ActivityState)(_q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* pThis, _q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventType* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgsVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerServiceName)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerHostNameList)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CustomField)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnChannelConfigurationVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannelConfigurationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerUris)(_q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannelConfiguration2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnChannelStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ProcessEventAsync)(_q_CWindows_CNetworking_CVpn_CIVpnChannelStatics* pThis, IInspectable* thirdPartyPlugIn, IInspectable* event);
} _q_CWindows_CNetworking_CVpn_CIVpnChannelStaticsVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnChannelStatics
{
    _q_CWindows_CNetworking_CVpn_CIVpnChannelStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCredentialVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PasskeyCredential)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CertificateCredential)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AdditionalPin)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OldPasswordCredential)(_q_CWindows_CNetworking_CVpn_CIVpnCredential* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCredentialVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCredential
{
    _q_CWindows_CNetworking_CVpn_CIVpnCredentialVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBoxVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_InitialCheckState)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InitialCheckState)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Checked)(_q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBoxVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBox
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomCheckBoxVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomComboBoxVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_OptionsText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_OptionsText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Selected)(_q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomComboBoxVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomComboBox
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomComboBoxVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomEditBoxVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_DefaultText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NoEcho)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_NoEcho)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomEditBoxVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomEditBox
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomEditBoxVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBoxVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox* This, TrustLevel* trustLevel);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBoxVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBox
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomErrorBoxVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Label)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Label)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Compulsory)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Compulsory)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Bordered)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Bordered)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInputVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_InitialValue)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InitialValue)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInputVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInput
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptBooleanInputVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Compulsory)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Compulsory)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Emphasized)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Emphasized)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElementVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElementVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelectorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Options)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectedIndex)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelectorVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelector
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptOptionSelectorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Text)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptText
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInputVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_PlaceholderText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PlaceholderText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsTextHidden)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextHidden)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInputVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInput
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomPromptTextInputVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnCustomTextBoxVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_DisplayText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayText)(_q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnCustomTextBoxVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnCustomTextBox
{
    _q_CWindows_CNetworking_CVpn_CIVpnCustomTextBoxVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DomainNameList)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyAutoConfigurationUri)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyAutoConfigurationUri)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignmentVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignment
{
    _q_CWindows_CNetworking_CVpn_CIVpnDomainNameAssignmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_DomainName)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_DomainName)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_DomainNameType)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* pThis, _q_CWindows_CNetworking_CVpn_CVpnDomainNameType value);
    HRESULT (STDMETHODCALLTYPE* get_DomainNameType)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* pThis, _q_CWindows_CNetworking_CVpn_CVpnDomainNameType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DnsServers)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_WebProxyServers)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo
{
    _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_WebProxyUris)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2
{
    _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateVpnDomainNameInfo)(_q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory* pThis, HSTRING name, _q_CWindows_CNetworking_CVpn_CVpnDomainNameType nameType, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* dnsServerList, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* proxyServerList, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfoFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProfileName)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SharedContext)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* pThis, _q_CWindows_CFoundation_CCollections_CIPropertySet** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ActivationOperation)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs* pThis, _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgsVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgs
{
    _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(_q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation* pThis, _q_CWindows_CFoundation_CCollections_CIPropertySet* result);
} _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperationVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperation
{
    _q_CWindows_CNetworking_CVpn_CIVpnForegroundActivationOperationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAddressInfo)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceId* pThis, UINT32* idLength, UINT8** id);
} _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId
{
    _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateVpnInterfaceId)(_q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory* pThis, UINT32 addressLength, UINT8* address, _q_CWindows_CNetworking_CVpn_CIVpnInterfaceId** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnInterfaceIdFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnManagementAgentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddProfileFromXmlAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, HSTRING xml, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* AddProfileFromObjectAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _q_CWindows_CNetworking_CVpn_CIVpnProfile* profile, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateProfileFromXmlAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, HSTRING xml, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateProfileFromObjectAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _q_CWindows_CNetworking_CVpn_CIVpnProfile* profile, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetProfilesAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteProfileAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _q_CWindows_CNetworking_CVpn_CIVpnProfile* profile, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectProfileAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _q_CWindows_CNetworking_CVpn_CIVpnProfile* profile, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* ConnectProfileWithPasswordCredentialAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _q_CWindows_CNetworking_CVpn_CIVpnProfile* profile, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* passwordCredential, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* DisconnectProfileAsync)(_q_CWindows_CNetworking_CVpn_CIVpnManagementAgent* pThis, _q_CWindows_CNetworking_CVpn_CIVpnProfile* profile, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnManagementAgentVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnManagementAgent
{
    _q_CWindows_CNetworking_CVpn_CIVpnManagementAgentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_NamespaceList)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* value);
    HRESULT (STDMETHODCALLTYPE* get_NamespaceList)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyAutoConfigUri)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyAutoConfigUri)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignmentVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignment
{
    _q_CWindows_CNetworking_CVpn_CIVpnNamespaceAssignmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Namespace)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Namespace)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DnsServers)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_DnsServers)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_WebProxyServers)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_WebProxyServers)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo
{
    _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateVpnNamespaceInfo)(_q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory* pThis, HSTRING name, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* dnsServerList, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* proxyServerList, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfoFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNativeProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Servers)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoutingPolicyType)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RoutingPolicyType)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType value);
    HRESULT (STDMETHODCALLTYPE* get_NativeProtocolType)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NativeProtocolType)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnNativeProtocolType value);
    HRESULT (STDMETHODCALLTYPE* get_UserAuthenticationMethod)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UserAuthenticationMethod)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod value);
    HRESULT (STDMETHODCALLTYPE* get_TunnelAuthenticationMethod)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TunnelAuthenticationMethod)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, _q_CWindows_CNetworking_CVpn_CVpnAuthenticationMethod value);
    HRESULT (STDMETHODCALLTYPE* get_EapConfiguration)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_EapConfiguration)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile* pThis, HSTRING value);
} _q_CWindows_CNetworking_CVpn_CIVpnNativeProfileVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile
{
    _q_CWindows_CNetworking_CVpn_CIVpnNativeProfileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RequireVpnClientAppUI)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequireVpnClientAppUI)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionStatus)(_q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2* pThis, _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2
{
    _q_CWindows_CNetworking_CVpn_CIVpnNativeProfile2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Buffer)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Status)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* pThis, _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* pThis, _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TransportAffinity)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TransportAffinity)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer
{
    _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2* pThis, _q_CWindows_CNetworking_CVpn_CIVpnAppId** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2
{
    _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_TransportContext)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportContext)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3* pThis, IInspectable** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3
{
    _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateVpnPacketBuffer)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* parentBuffer, UINT32 offset, UINT32 length, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferListVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Append)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* nextVpnPacketBuffer);
    HRESULT (STDMETHODCALLTYPE* AddAtBegin)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer* nextVpnPacketBuffer);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveAtBegin)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, _q_CWindows_CNetworking_CVpn_CIVpnPacketBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* Clear)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis);
    HRESULT (STDMETHODCALLTYPE* put_Status)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, _q_CWindows_CNetworking_CVpn_CVpnPacketBufferStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferListVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferList
{
    _q_CWindows_CNetworking_CVpn_CIVpnPacketBufferListVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPickedCredentialVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PasskeyCredential)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AdditionalPin)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OldPasswordCredential)(_q_CWindows_CNetworking_CVpn_CIVpnPickedCredential* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPickedCredentialVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPickedCredential
{
    _q_CWindows_CNetworking_CVpn_CIVpnPickedCredentialVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerUris)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CustomConfiguration)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CustomConfiguration)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_VpnPluginPackageFamilyName)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_VpnPluginPackageFamilyName)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile* pThis, HSTRING value);
} _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfileVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile
{
    _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RequireVpnClientAppUI)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequireVpnClientAppUI)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionStatus)(_q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2* pThis, _q_CWindows_CNetworking_CVpn_CVpnManagementConnectionStatus* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2Vtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2
{
    _q_CWindows_CNetworking_CVpn_CIVpnPlugInProfile2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProfileName)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProfileName)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AppTriggers)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Routes)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DomainNameInfoList)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TrafficFilters)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RememberCredentials)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RememberCredentials)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlwaysOn)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AlwaysOn)(_q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, boolean value);
} _q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnProfile
{
    _q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnRouteVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Address)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_Address)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_PrefixSize)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* pThis, UINT8 value);
    HRESULT (STDMETHODCALLTYPE* get_PrefixSize)(_q_CWindows_CNetworking_CVpn_CIVpnRoute* pThis, UINT8* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnRouteVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnRoute
{
    _q_CWindows_CNetworking_CVpn_CIVpnRouteVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Ipv4InclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* put_Ipv6InclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* get_Ipv4InclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Ipv6InclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Ipv4ExclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* put_Ipv6ExclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* get_Ipv4ExclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Ipv6ExclusionRoutes)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ExcludeLocalSubnets)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ExcludeLocalSubnets)(_q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment* pThis, boolean* __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignmentVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignment
{
    _q_CWindows_CNetworking_CVpn_CIVpnRouteAssignmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnRouteFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateVpnRoute)(_q_CWindows_CNetworking_CVpn_CIVpnRouteFactory* pThis, _q_CWindows_CNetworking_CIHostName* address, UINT8 prefixSize, _q_CWindows_CNetworking_CVpn_CIVpnRoute** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnRouteFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnRouteFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnRouteFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnSystemHealthVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StatementOfHealth)(_q_CWindows_CNetworking_CVpn_CIVpnSystemHealth* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnSystemHealthVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnSystemHealth
{
    _q_CWindows_CNetworking_CVpn_CIVpnSystemHealthVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AppId)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CIVpnAppId** __pret);
    HRESULT (STDMETHODCALLTYPE* put_AppId)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CIVpnAppId* value);
    HRESULT (STDMETHODCALLTYPE* get_AppClaims)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Protocol)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CVpnIPProtocol* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Protocol)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CVpnIPProtocol value);
    HRESULT (STDMETHODCALLTYPE* get_LocalPortRanges)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemotePortRanges)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAddressRanges)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteAddressRanges)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoutingPolicyType)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RoutingPolicyType)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CVpnRoutingPolicyType value);
} _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter
{
    _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TrafficFilterList)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AllowOutbound)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowOutbound)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AllowInbound)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowInbound)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment* pThis, boolean value);
} _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignmentVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignment
{
    _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterAssignmentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory* pThis, _q_CWindows_CNetworking_CVpn_CIVpnAppId* appId, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter** __pret);
} _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactoryVtbl;
struct _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactory
{
    _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilterFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_SnapshotChanged)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_SnapshotChanged)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetSnapshotAsBase64)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* GetSnapshotAsBuffer)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSnapshotAsBytes)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, UINT32 bufferLength, UINT8* buffer, UINT32* bytesWritten);
    HRESULT (STDMETHODCALLTYPE* Compare)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* otherDeviceAddress, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsValid)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsLocal)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NetworkAccessKind)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveNetworkAccessKind* __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromSnapshotBase64)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* pThis, HSTRING base64, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromSnapshotBuffer)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromSnapshotBytes)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* pThis, UINT32 bufferLength, UINT8* buffer, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetLocal)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxSnapshotBytesSize)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStaticsVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStatics
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddressStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_StateChanged)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_StateChanged)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* GetRemoteSocketAddressBytes)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, UINT32 socketAddressLength, UINT8* socketAddress);
    HRESULT (STDMETHODCALLTYPE* GetLocalSocketAddressBytes)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, UINT32 socketAddressLength, UINT8* socketAddress);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Template)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteDeviceAddress)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemoteHostName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemotePort)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalHostName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalPort)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* pThis, HSTRING* __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DeviceAddress)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsExistingPathEvaluation)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_EndpointPair)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResultVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OldState)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NewState)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairState* __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgsVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FindEndpointPairBySocketAddressBytes)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* pThis, UINT32 localSocketAddressLength, UINT8* localSocketAddress, UINT32 remoteSocketAddressLength, UINT8* remoteSocketAddress, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair** __pret);
    HRESULT (STDMETHODCALLTYPE* FindEndpointPairByHostNamesAndPorts)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics* pThis, _q_CWindows_CNetworking_CIHostName* localHostName, HSTRING localPort, _q_CWindows_CNetworking_CIHostName* remoteHostName, HSTRING remotePort, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStaticsVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStatics
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_InboundEndpointPairCreated)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_InboundEndpointPairCreated)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateEndpointPairDefaultAsync)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateEndpointPairWithBehaviorsAsync)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationBehaviors behaviors, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateEndpointPairForPortsDefaultAsync)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, HSTRING initiatorPort, HSTRING acceptorPort, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateEndpointPairForPortsWithBehaviorsAsync)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, HSTRING initiatorPort, HSTRING acceptorPort, _q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationBehaviors behaviors, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SocketKind)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveSocketKind* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InitiatorBoundPortRangeLower)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InitiatorBoundPortRangeUpper)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AcceptorBoundPortRangeLower)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AcceptorBoundPortRangeUpper)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* get_EndpointPairs)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetTemplateByName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* pThis, HSTRING name, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Templates)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStaticsVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStatics
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplateStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EndpointPair)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgsVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* MeasureAsync)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* GetMetricResultsForDevice)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetMetricResultsForMetric)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric metric, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetMetricResult)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric metric, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetPrivatePayloadResult)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* deviceAddress, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Metrics)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceAddresses)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ShouldRequestPrivatePayloads)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ShouldRequestPrivatePayloads)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TimeoutInMilliseconds)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TimeoutInMilliseconds)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_NumberOfProbesToAttempt)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NumberOfProbesToAttempt)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_NumberOfResultsPending)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MetricResults)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PrivatePayloadResults)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurement
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PublishPrivatePayloadBytes)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, UINT32 payloadLength, UINT8* payload);
    HRESULT (STDMETHODCALLTYPE* ClearPrivatePayload)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis);
    HRESULT (STDMETHODCALLTYPE* get_MaxSimultaneousProbeConnections)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxSimultaneousProbeConnections)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_IsSystemOutboundBandwidthConstrained)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsSystemOutboundBandwidthConstrained)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsSystemInboundBandwidthConstrained)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsSystemInboundBandwidthConstrained)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_PublishedPrivatePayload)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* put_PublishedPrivatePayload)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxPrivatePayloadSize)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics* pThis, UINT32* __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStaticsVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStatics
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMeasurementStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceAddress)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Metric)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult* pThis, UINT64* __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResultVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResult
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServiceMetricResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMeasurementStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeviceAddress)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResultVtbl;
struct _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResult
{
    _q_CWindows_CNetworking_CXboxLive_CIXboxLiveQualityOfServicePrivatePayloadResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCredentials_CICredentialFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreatePasswordCredential)(_q_CWindows_CSecurity_CCredentials_CICredentialFactory* pThis, HSTRING resource, HSTRING userName, HSTRING password, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
} _q_CWindows_CSecurity_CCredentials_CICredentialFactoryVtbl;
struct _q_CWindows_CSecurity_CCredentials_CICredentialFactory
{
    _q_CWindows_CSecurity_CCredentials_CICredentialFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCredentials_CIPasswordCredentialVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCredentials_CIPasswordCredential* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCredentials_CIPasswordCredential* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCredentials_CIPasswordCredential* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCredentials_CIPasswordCredential* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCredentials_CIPasswordCredential* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCredentials_CIPasswordCredential* This, TrustLevel* trustLevel);
    void* unneeded_get_Resource;
    void* unneeded_put_Resource;
    void* unneeded_get_UserName;
    void* unneeded_put_UserName;
    void* unneeded_get_Password;
    void* unneeded_put_Password;
    void* unneeded_RetrievePassword;
    void* unneeded_get_Properties;
} _q_CWindows_CSecurity_CCredentials_CIPasswordCredentialVtbl;
struct _q_CWindows_CSecurity_CCredentials_CIPasswordCredential
{
    _q_CWindows_CSecurity_CCredentials_CIPasswordCredentialVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* This, TrustLevel* trustLevel);
    void* unneeded_BuildChainAsync;
    void* unneeded_BuildChainWithParametersAsync;
    void* unneeded_get_SerialNumber;
    void* unneeded_GetHashValue;
    void* unneeded_GetHashValueWithAlgorithm;
    void* unneeded_GetCertificateBlob;
    void* unneeded_get_Subject;
    void* unneeded_get_Issuer;
    void* unneeded_get_HasPrivateKey;
    void* unneeded_get_IsStronglyProtected;
    void* unneeded_get_ValidFrom;
    void* unneeded_get_ValidTo;
    void* unneeded_get_EnhancedKeyUsages;
    void* unneeded_put_FriendlyName;
    void* unneeded_get_FriendlyName;
} _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateVtbl;
struct _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate
{
    _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateCertificate)(_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* certBlob, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
} _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactoryVtbl;
struct _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactory
{
    _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificateFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Compare)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* object1, _q_CWindows_CStorage_CStreams_CIBuffer* object2, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GenerateRandom)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, UINT32 length, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* GenerateRandomNumber)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromByteArray)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, UINT32 valueLength, UINT8* value, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyToByteArray)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, UINT32* valueLength, UINT8** value);
    HRESULT (STDMETHODCALLTYPE* DecodeFromHexString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, HSTRING value, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* EncodeToHexString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* DecodeFromBase64String)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, HSTRING value, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* EncodeToBase64String)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* ConvertStringToBinary)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, HSTRING value, _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding encoding, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* ConvertBinaryToString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CSecurity_CCryptography_CBinaryStringEncoding encoding, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
} _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl;
struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics
{
    _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RemovedEntry)(_q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* pThis, _q_CWindows_CStorage_CAccessCache_CAccessListEntry* __pret);
} _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgsVtbl;
struct _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs
{
    _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FutureAccessList)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* pThis, _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MostRecentlyUsedList)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics* pThis, _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList** __pret);
} _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl;
struct _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics
{
    _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFutureAccessListForUser)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList** __pret);
    HRESULT (STDMETHODCALLTYPE* GetMostRecentlyUsedListForUser)(_q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList** __pret);
} _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2Vtbl;
struct _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2
{
    _q_CWindows_CStorage_CAccessCache_CIStorageApplicationPermissionsStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddOverloadDefaultMetadata)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, _q_CWindows_CStorage_CIStorageItem* file, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* Add)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, _q_CWindows_CStorage_CIStorageItem* file, HSTRING metadata, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* AddOrReplaceOverloadDefaultMetadata)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _q_CWindows_CStorage_CIStorageItem* file);
    HRESULT (STDMETHODCALLTYPE* AddOrReplace)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _q_CWindows_CStorage_CIStorageItem* file, HSTRING metadata);
    HRESULT (STDMETHODCALLTYPE* GetItemAsync)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFileAsync)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetItemWithOptionsAsync)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFileWithOptionsAsync)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFolderWithOptionsAsync)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, _q_CWindows_CStorage_CAccessCache_CAccessCacheOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* Remove)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token);
    HRESULT (STDMETHODCALLTYPE* ContainsItem)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, HSTRING token, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* Clear)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis);
    HRESULT (STDMETHODCALLTYPE* CheckAccess)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, _q_CWindows_CStorage_CIStorageItem* file, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Entries)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaximumItemsAllowed)(_q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList* pThis, UINT32* __pret);
} _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl;
struct _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessList
{
    _q_CWindows_CStorage_CAccessCache_CIStorageItemAccessListVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedListVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ItemRemoved)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ItemRemoved)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedListVtbl;
struct _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList
{
    _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedListVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddWithMetadataAndVisibility)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* pThis, _q_CWindows_CStorage_CIStorageItem* file, HSTRING metadata, _q_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility visibility, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* AddOrReplaceWithMetadataAndVisibility)(_q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2* pThis, HSTRING token, _q_CWindows_CStorage_CIStorageItem* file, HSTRING metadata, _q_CWindows_CStorage_CAccessCache_CRecentStorageItemVisibility visibility);
} _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2Vtbl;
struct _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2
{
    _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsync)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, UINT32 startIndex, UINT32 maxItemsToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsyncDefaultStartAndCount)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsync)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, UINT32 startIndex, UINT32 maxItemsToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsyncDefaultStartAndCount)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsync)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, UINT32 startIndex, UINT32 maxItemsToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsyncDefaultStartAndCount)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetVirtualizedItemsVector)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetVirtualizedFilesVector)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetVirtualizedFoldersVector)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory* pThis, IInspectable** __pret);
} _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryVtbl;
struct _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory
{
    _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithMode)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* pThis, _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* queryResult, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithModeAndSize)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* pThis, _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* queryResult, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedThumbnailSize, _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithModeAndSizeAndOptions)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* pThis, _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* queryResult, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedThumbnailSize, _q_CWindows_CStorage_CFileProperties_CThumbnailOptions thumbnailOptions, _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithModeAndSizeAndOptionsAndFlags)(_q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory* pThis, _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* queryResult, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedThumbnailSize, _q_CWindows_CStorage_CFileProperties_CThumbnailOptions thumbnailOptions, boolean delayLoad, _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactory** __pret);
} _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactoryVtbl;
struct _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactory
{
    _q_CWindows_CStorage_CBulkAccess_CIFileInformationFactoryFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MusicProperties)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CStorage_CFileProperties_CIMusicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_VideoProperties)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CStorage_CFileProperties_CIVideoProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ImageProperties)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CStorage_CFileProperties_CIImageProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DocumentProperties)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CStorage_CFileProperties_CIDocumentProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BasicProperties)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CStorage_CFileProperties_CIBasicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Thumbnail)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** __pret);
    HRESULT (STDMETHODCALLTYPE* add_ThumbnailUpdated)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable* changedHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ThumbnailUpdated)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_PropertiesUpdated)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable* changedHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_PropertiesUpdated)(_q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl;
struct _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation
{
    _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CCompression_CICompressorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CCompression_CICompressor* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CCompression_CICompressor* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CCompression_CICompressor* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CCompression_CICompressor* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CCompression_CICompressor* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CCompression_CICompressor* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FinishAsync)(_q_CWindows_CStorage_CCompression_CICompressor* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* DetachStream)(_q_CWindows_CStorage_CCompression_CICompressor* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
} _q_CWindows_CStorage_CCompression_CICompressorVtbl;
struct _q_CWindows_CStorage_CCompression_CICompressor
{
    _q_CWindows_CStorage_CCompression_CICompressorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CCompression_CICompressorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CCompression_CICompressorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CCompression_CICompressorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CCompression_CICompressorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CCompression_CICompressorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CCompression_CICompressorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CCompression_CICompressorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateCompressor)(_q_CWindows_CStorage_CCompression_CICompressorFactory* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream* underlyingStream, _q_CWindows_CStorage_CCompression_CICompressor** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateCompressorEx)(_q_CWindows_CStorage_CCompression_CICompressorFactory* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream* underlyingStream, _q_CWindows_CStorage_CCompression_CCompressAlgorithm algorithm, UINT32 blockSize, _q_CWindows_CStorage_CCompression_CICompressor** __pret);
} _q_CWindows_CStorage_CCompression_CICompressorFactoryVtbl;
struct _q_CWindows_CStorage_CCompression_CICompressorFactory
{
    _q_CWindows_CStorage_CCompression_CICompressorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CCompression_CIDecompressorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CCompression_CIDecompressor* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CCompression_CIDecompressor* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CCompression_CIDecompressor* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CCompression_CIDecompressor* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CCompression_CIDecompressor* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CCompression_CIDecompressor* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* DetachStream)(_q_CWindows_CStorage_CCompression_CIDecompressor* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CStorage_CCompression_CIDecompressorVtbl;
struct _q_CWindows_CStorage_CCompression_CIDecompressor
{
    _q_CWindows_CStorage_CCompression_CIDecompressorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CCompression_CIDecompressorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateDecompressor)(_q_CWindows_CStorage_CCompression_CIDecompressorFactory* pThis, _q_CWindows_CStorage_CStreams_CIInputStream* underlyingStream, _q_CWindows_CStorage_CCompression_CIDecompressor** __pret);
} _q_CWindows_CStorage_CCompression_CIDecompressorFactoryVtbl;
struct _q_CWindows_CStorage_CCompression_CIDecompressorFactory
{
    _q_CWindows_CStorage_CCompression_CIDecompressorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIBasicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DateModified)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ItemDate)(_q_CWindows_CStorage_CFileProperties_CIBasicProperties* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
} _q_CWindows_CStorage_CFileProperties_CIBasicPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIBasicProperties
{
    _q_CWindows_CStorage_CFileProperties_CIBasicPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIDocumentPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Author)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Keywords)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Comment)(_q_CWindows_CStorage_CFileProperties_CIDocumentProperties* pThis, HSTRING value);
} _q_CWindows_CStorage_CFileProperties_CIDocumentPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIDocumentProperties
{
    _q_CWindows_CStorage_CFileProperties_CIDocumentPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIGeotagHelperStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetGeotagAsync)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint** __pret);
    HRESULT (STDMETHODCALLTYPE* SetGeotagFromGeolocatorAsync)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CDevices_CGeolocation_CIGeolocator* geolocator, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* SetGeotagAsync)(_q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CDevices_CGeolocation_CIGeopoint* geopoint, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CFileProperties_CIGeotagHelperStaticsVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIGeotagHelperStatics
{
    _q_CWindows_CStorage_CFileProperties_CIGeotagHelperStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIImagePropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Rating)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Rating)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Keywords)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DateTaken)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DateTaken)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _q_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Height)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Latitude)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Longitude)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CameraManufacturer)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CameraManufacturer)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CameraModel)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CameraModel)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _q_CWindows_CStorage_CFileProperties_CPhotoOrientation* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PeopleNames)(_q_CWindows_CStorage_CFileProperties_CIImageProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
} _q_CWindows_CStorage_CFileProperties_CIImagePropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIImageProperties
{
    _q_CWindows_CStorage_CFileProperties_CIImagePropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIMusicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Album)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Album)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Artist)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Artist)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Genre)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TrackNumber)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TrackNumber)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Rating)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Rating)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Bitrate)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AlbumArtist)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AlbumArtist)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Composers)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Conductors)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Subtitle)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Producers)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Publisher)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Publisher)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Writers)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Year)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Year)(_q_CWindows_CStorage_CFileProperties_CIMusicProperties* pThis, UINT32 value);
} _q_CWindows_CStorage_CFileProperties_CIMusicPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIMusicProperties
{
    _q_CWindows_CStorage_CFileProperties_CIMusicPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIStorageItemContentPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetMusicPropertiesAsync)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetVideoPropertiesAsync)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetImagePropertiesAsync)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDocumentPropertiesAsync)(_q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties** __pret);
} _q_CWindows_CStorage_CFileProperties_CIStorageItemContentPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties
{
    _q_CWindows_CStorage_CFileProperties_CIStorageItemContentPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RetrievePropertiesAsync)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* propertiesToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* SavePropertiesAsync)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* propertiesToSave, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* SavePropertiesAsyncOverloadDefault)(_q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties
{
    _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIThumbnailPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_OriginalWidth)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OriginalHeight)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReturnedSmallerCachedSize)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CStorage_CFileProperties_CIThumbnailProperties* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailType* __pret);
} _q_CWindows_CStorage_CFileProperties_CIThumbnailPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties
{
    _q_CWindows_CStorage_CFileProperties_CIThumbnailPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CFileProperties_CIVideoPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Rating)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Rating)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Keywords)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Width)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Height)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Latitude)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Longitude)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Subtitle)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Producers)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Publisher)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Publisher)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Writers)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Year)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Year)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Bitrate)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Directors)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(_q_CWindows_CStorage_CFileProperties_CIVideoProperties* pThis, _q_CWindows_CStorage_CFileProperties_CVideoOrientation* __pret);
} _q_CWindows_CStorage_CFileProperties_CIVideoPropertiesVtbl;
struct _q_CWindows_CStorage_CFileProperties_CIVideoProperties
{
    _q_CWindows_CStorage_CFileProperties_CIVideoPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIAppDataPathsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIAppDataPaths* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIAppDataPaths* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIAppDataPaths* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIAppDataPaths* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIAppDataPaths* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIAppDataPaths* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Cookies)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Desktop)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Documents)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Favorites)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_History)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InternetCache)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAppData)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProgramData)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoamingAppData)(_q_CWindows_CStorage_CIAppDataPaths* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CIAppDataPathsVtbl;
struct _q_CWindows_CStorage_CIAppDataPaths
{
    _q_CWindows_CStorage_CIAppDataPathsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIAppDataPathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIAppDataPathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIAppDataPathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIAppDataPathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIAppDataPathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIAppDataPathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIAppDataPathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(_q_CWindows_CStorage_CIAppDataPathsStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CIAppDataPaths** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CStorage_CIAppDataPathsStatics* pThis, _q_CWindows_CStorage_CIAppDataPaths** __pret);
} _q_CWindows_CStorage_CIAppDataPathsStaticsVtbl;
struct _q_CWindows_CStorage_CIAppDataPathsStatics
{
    _q_CWindows_CStorage_CIAppDataPathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationData* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIApplicationData* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIApplicationData* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIApplicationData* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Version)(_q_CWindows_CStorage_CIApplicationData* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* SetVersionAsync)(_q_CWindows_CStorage_CIApplicationData* pThis, UINT32 desiredVersion, _q_CWindows_CStorage_CIApplicationDataSetVersionHandler* handler, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ClearAllAsync)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ClearAsync)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CStorage_CApplicationDataLocality locality, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalSettings)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CStorage_CIApplicationDataContainer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoamingSettings)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CStorage_CIApplicationDataContainer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalFolder)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoamingFolder)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TemporaryFolder)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* add_DataChanged)(_q_CWindows_CStorage_CIApplicationData* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DataChanged)(_q_CWindows_CStorage_CIApplicationData* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SignalDataChanged)(_q_CWindows_CStorage_CIApplicationData* pThis);
    HRESULT (STDMETHODCALLTYPE* get_RoamingStorageQuota)(_q_CWindows_CStorage_CIApplicationData* pThis, UINT64* __pret);
} _q_CWindows_CStorage_CIApplicationDataVtbl;
struct _q_CWindows_CStorage_CIApplicationData
{
    _q_CWindows_CStorage_CIApplicationDataVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationData2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationData2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationData2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationData2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIApplicationData2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIApplicationData2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIApplicationData2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LocalCacheFolder)(_q_CWindows_CStorage_CIApplicationData2* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIApplicationData2Vtbl;
struct _q_CWindows_CStorage_CIApplicationData2
{
    _q_CWindows_CStorage_CIApplicationData2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationData3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationData3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationData3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationData3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIApplicationData3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIApplicationData3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIApplicationData3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetPublisherCacheFolder)(_q_CWindows_CStorage_CIApplicationData3* pThis, HSTRING folderName, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* ClearPublisherCacheFolderAsync)(_q_CWindows_CStorage_CIApplicationData3* pThis, HSTRING folderName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SharedLocalFolder)(_q_CWindows_CStorage_CIApplicationData3* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIApplicationData3Vtbl;
struct _q_CWindows_CStorage_CIApplicationData3
{
    _q_CWindows_CStorage_CIApplicationData3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationDataContainerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationDataContainer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationDataContainer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationDataContainer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIApplicationDataContainer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIApplicationDataContainer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIApplicationDataContainer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CStorage_CIApplicationDataContainer* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Locality)(_q_CWindows_CStorage_CIApplicationDataContainer* pThis, _q_CWindows_CStorage_CApplicationDataLocality* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Values)(_q_CWindows_CStorage_CIApplicationDataContainer* pThis, _q_CWindows_CFoundation_CCollections_CIPropertySet** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Containers)(_q_CWindows_CStorage_CIApplicationDataContainer* pThis, _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateContainer)(_q_CWindows_CStorage_CIApplicationDataContainer* pThis, HSTRING name, _q_CWindows_CStorage_CApplicationDataCreateDisposition disposition, _q_CWindows_CStorage_CIApplicationDataContainer** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteContainer)(_q_CWindows_CStorage_CIApplicationDataContainer* pThis, HSTRING name);
} _q_CWindows_CStorage_CIApplicationDataContainerVtbl;
struct _q_CWindows_CStorage_CIApplicationDataContainer
{
    _q_CWindows_CStorage_CIApplicationDataContainerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationDataStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationDataStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationDataStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationDataStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIApplicationDataStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIApplicationDataStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIApplicationDataStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(_q_CWindows_CStorage_CIApplicationDataStatics* pThis, _q_CWindows_CStorage_CIApplicationData** __pret);
} _q_CWindows_CStorage_CIApplicationDataStaticsVtbl;
struct _q_CWindows_CStorage_CIApplicationDataStatics
{
    _q_CWindows_CStorage_CIApplicationDataStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIApplicationDataStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIApplicationDataStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIApplicationDataStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIApplicationDataStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIApplicationDataStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIApplicationDataStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIApplicationDataStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForUserAsync)(_q_CWindows_CStorage_CIApplicationDataStatics2* pThis, _q_CWindows_CSystem_CIUser* user, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData** __pret);
} _q_CWindows_CStorage_CIApplicationDataStatics2Vtbl;
struct _q_CWindows_CStorage_CIApplicationDataStatics2
{
    _q_CWindows_CStorage_CIApplicationDataStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CICachedFileManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CICachedFileManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CICachedFileManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CICachedFileManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CICachedFileManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CICachedFileManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CICachedFileManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* DeferUpdates)(_q_CWindows_CStorage_CICachedFileManagerStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file);
    HRESULT (STDMETHODCALLTYPE* CompleteUpdatesAsync)(_q_CWindows_CStorage_CICachedFileManagerStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus** __pret);
} _q_CWindows_CStorage_CICachedFileManagerStaticsVtbl;
struct _q_CWindows_CStorage_CICachedFileManagerStatics
{
    _q_CWindows_CStorage_CICachedFileManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIDownloadsFolderStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIDownloadsFolderStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIDownloadsFolderStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIDownloadsFolderStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIDownloadsFolderStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIDownloadsFolderStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIDownloadsFolderStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFileAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics* pThis, HSTRING desiredName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics* pThis, HSTRING desiredName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFileWithCollisionOptionAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics* pThis, HSTRING desiredName, _q_CWindows_CStorage_CCreationCollisionOption option, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderWithCollisionOptionAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics* pThis, HSTRING desiredName, _q_CWindows_CStorage_CCreationCollisionOption option, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CIDownloadsFolderStaticsVtbl;
struct _q_CWindows_CStorage_CIDownloadsFolderStatics
{
    _q_CWindows_CStorage_CIDownloadsFolderStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIDownloadsFolderStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFileForUserAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING desiredName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderForUserAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING desiredName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFileForUserWithCollisionOptionAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING desiredName, _q_CWindows_CStorage_CCreationCollisionOption option, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderForUserWithCollisionOptionAsync)(_q_CWindows_CStorage_CIDownloadsFolderStatics2* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING desiredName, _q_CWindows_CStorage_CCreationCollisionOption option, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CIDownloadsFolderStatics2Vtbl;
struct _q_CWindows_CStorage_CIDownloadsFolderStatics2
{
    _q_CWindows_CStorage_CIDownloadsFolderStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIFileIOStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIFileIOStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIFileIOStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIFileIOStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIFileIOStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIFileIOStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIFileIOStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ReadTextAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadTextWithEncodingAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteTextAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, HSTRING contents, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteTextWithEncodingAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, HSTRING contents, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendTextAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, HSTRING contents, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendTextWithEncodingAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, HSTRING contents, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadLinesAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadLinesWithEncodingAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteLinesAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteLinesWithEncodingAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendLinesAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendLinesWithEncodingAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadBufferAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteBufferAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteBytesAsync)(_q_CWindows_CStorage_CIFileIOStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, UINT32 bufferLength, UINT8* buffer, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CIFileIOStaticsVtbl;
struct _q_CWindows_CStorage_CIFileIOStatics
{
    _q_CWindows_CStorage_CIFileIOStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersCameraRollStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CameraRoll)(_q_CWindows_CStorage_CIKnownFoldersCameraRollStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersCameraRollStaticsVtbl;
struct _q_CWindows_CStorage_CIKnownFoldersCameraRollStatics
{
    _q_CWindows_CStorage_CIKnownFoldersCameraRollStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersPlaylistsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Playlists)(_q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersPlaylistsStaticsVtbl;
struct _q_CWindows_CStorage_CIKnownFoldersPlaylistsStatics
{
    _q_CWindows_CStorage_CIKnownFoldersPlaylistsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersSavedPicturesStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SavedPictures)(_q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersSavedPicturesStaticsVtbl;
struct _q_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics
{
    _q_CWindows_CStorage_CIKnownFoldersSavedPicturesStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MusicLibrary)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PicturesLibrary)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_VideosLibrary)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DocumentsLibrary)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HomeGroup)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RemovableDevices)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediaServerDevices)(_q_CWindows_CStorage_CIKnownFoldersStatics* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersStaticsVtbl;
struct _q_CWindows_CStorage_CIKnownFoldersStatics
{
    _q_CWindows_CStorage_CIKnownFoldersStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Objects3D)(_q_CWindows_CStorage_CIKnownFoldersStatics2* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AppCaptures)(_q_CWindows_CStorage_CIKnownFoldersStatics2* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RecordedCalls)(_q_CWindows_CStorage_CIKnownFoldersStatics2* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersStatics2Vtbl;
struct _q_CWindows_CStorage_CIKnownFoldersStatics2
{
    _q_CWindows_CStorage_CIKnownFoldersStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersStatics3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersStatics3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersStatics3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersStatics3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersStatics3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersStatics3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFolderForUserAsync)(_q_CWindows_CStorage_CIKnownFoldersStatics3* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CKnownFolderId folderId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersStatics3Vtbl;
struct _q_CWindows_CStorage_CIKnownFoldersStatics3
{
    _q_CWindows_CStorage_CIKnownFoldersStatics3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIKnownFoldersStatics4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIKnownFoldersStatics4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIKnownFoldersStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIKnownFoldersStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIKnownFoldersStatics4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIKnownFoldersStatics4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIKnownFoldersStatics4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(_q_CWindows_CStorage_CIKnownFoldersStatics4* pThis, _q_CWindows_CStorage_CKnownFolderId folderId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestAccessForUserAsync)(_q_CWindows_CStorage_CIKnownFoldersStatics4* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CKnownFolderId folderId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(_q_CWindows_CStorage_CIKnownFoldersStatics4* pThis, _q_CWindows_CStorage_CKnownFolderId folderId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CIKnownFoldersStatics4Vtbl;
struct _q_CWindows_CStorage_CIKnownFoldersStatics4
{
    _q_CWindows_CStorage_CIKnownFoldersStatics4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIPathIOStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIPathIOStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIPathIOStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIPathIOStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIPathIOStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIPathIOStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIPathIOStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ReadTextAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadTextWithEncodingAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteTextAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, HSTRING contents, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteTextWithEncodingAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, HSTRING contents, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendTextAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, HSTRING contents, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendTextWithEncodingAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, HSTRING contents, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadLinesAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadLinesWithEncodingAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteLinesAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteLinesWithEncodingAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendLinesAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* AppendLinesWithEncodingAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* lines, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadBufferAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteBufferAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* WriteBytesAsync)(_q_CWindows_CStorage_CIPathIOStatics* pThis, HSTRING absolutePath, UINT32 bufferLength, UINT8* buffer, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CIPathIOStaticsVtbl;
struct _q_CWindows_CStorage_CIPathIOStatics
{
    _q_CWindows_CStorage_CIPathIOStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISetVersionDeferralVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISetVersionDeferral* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISetVersionDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISetVersionDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISetVersionDeferral* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISetVersionDeferral* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISetVersionDeferral* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(_q_CWindows_CStorage_CISetVersionDeferral* pThis);
} _q_CWindows_CStorage_CISetVersionDeferralVtbl;
struct _q_CWindows_CStorage_CISetVersionDeferral
{
    _q_CWindows_CStorage_CISetVersionDeferralVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISetVersionRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISetVersionRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISetVersionRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISetVersionRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISetVersionRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISetVersionRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISetVersionRequest* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CurrentVersion)(_q_CWindows_CStorage_CISetVersionRequest* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DesiredVersion)(_q_CWindows_CStorage_CISetVersionRequest* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CStorage_CISetVersionRequest* pThis, _q_CWindows_CStorage_CISetVersionDeferral** __pret);
} _q_CWindows_CStorage_CISetVersionRequestVtbl;
struct _q_CWindows_CStorage_CISetVersionRequest
{
    _q_CWindows_CStorage_CISetVersionRequestVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FileType)(_q_CWindows_CStorage_CIStorageFile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentType)(_q_CWindows_CStorage_CIStorageFile* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* OpenAsync)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CFileAccessMode accessMode, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteAsync)(_q_CWindows_CStorage_CIStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyOverloadDefaultNameAndOptions)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFolder* destinationFolder, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFolder* destinationFolder, HSTRING desiredNewName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyOverload)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFolder* destinationFolder, HSTRING desiredNewName, _q_CWindows_CStorage_CNameCollisionOption option, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyAndReplaceAsync)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFile* fileToReplace, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* MoveOverloadDefaultNameAndOptions)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFolder* destinationFolder, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* MoveOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFolder* destinationFolder, HSTRING desiredNewName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* MoveOverload)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFolder* destinationFolder, HSTRING desiredNewName, _q_CWindows_CStorage_CNameCollisionOption option, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* MoveAndReplaceAsync)(_q_CWindows_CStorage_CIStorageFile* pThis, _q_CWindows_CStorage_CIStorageFile* fileToReplace, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CIStorageFileVtbl;
struct _q_CWindows_CStorage_CIStorageFile
{
    _q_CWindows_CStorage_CIStorageFileVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFile2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFile2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFile2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFile2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFile2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFile2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFile2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OpenWithOptionsAsync)(_q_CWindows_CStorage_CIStorageFile2* pThis, _q_CWindows_CStorage_CFileAccessMode accessMode, _q_CWindows_CStorage_CStorageOpenOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteWithOptionsAsync)(_q_CWindows_CStorage_CIStorageFile2* pThis, _q_CWindows_CStorage_CStorageOpenOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
} _q_CWindows_CStorage_CIStorageFile2Vtbl;
struct _q_CWindows_CStorage_CIStorageFile2
{
    _q_CWindows_CStorage_CIStorageFile2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFilePropertiesWithAvailabilityVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IsAvailable)(_q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* pThis, boolean* __pret);
} _q_CWindows_CStorage_CIStorageFilePropertiesWithAvailabilityVtbl;
struct _q_CWindows_CStorage_CIStorageFilePropertiesWithAvailability
{
    _q_CWindows_CStorage_CIStorageFilePropertiesWithAvailabilityVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFileStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFileStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFileStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFileStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFileStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFileStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFileStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFileFromPathAsync)(_q_CWindows_CStorage_CIStorageFileStatics* pThis, HSTRING path, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFileFromApplicationUriAsync)(_q_CWindows_CStorage_CIStorageFileStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateStreamedFileAsync)(_q_CWindows_CStorage_CIStorageFileStatics* pThis, HSTRING displayNameWithExtension, _q_CWindows_CStorage_CIStreamedFileDataRequestedHandler* dataRequested, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceWithStreamedFileAsync)(_q_CWindows_CStorage_CIStorageFileStatics* pThis, _q_CWindows_CStorage_CIStorageFile* fileToReplace, _q_CWindows_CStorage_CIStreamedFileDataRequestedHandler* dataRequested, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateStreamedFileFromUriAsync)(_q_CWindows_CStorage_CIStorageFileStatics* pThis, HSTRING displayNameWithExtension, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceWithStreamedFileFromUriAsync)(_q_CWindows_CStorage_CIStorageFileStatics* pThis, _q_CWindows_CStorage_CIStorageFile* fileToReplace, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CIStorageFileStaticsVtbl;
struct _q_CWindows_CStorage_CIStorageFileStatics
{
    _q_CWindows_CStorage_CIStorageFileStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFileStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFileStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFileStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFileStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFileStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFileStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFileStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFileFromPathForUserAsync)(_q_CWindows_CStorage_CIStorageFileStatics2* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING path, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CIStorageFileStatics2Vtbl;
struct _q_CWindows_CStorage_CIStorageFileStatics2
{
    _q_CWindows_CStorage_CIStorageFileStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFolder* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFolder* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFolder* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFileAsyncOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING desiredName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFileAsync)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING desiredName, _q_CWindows_CStorage_CCreationCollisionOption options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsyncOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING desiredName, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsync)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING desiredName, _q_CWindows_CStorage_CCreationCollisionOption options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFileAsync)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING name, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING name, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetItemAsync)(_q_CWindows_CStorage_CIStorageFolder* pThis, HSTRING name, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsyncOverloadDefaultOptionsStartAndCount)(_q_CWindows_CStorage_CIStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsyncOverloadDefaultOptionsStartAndCount)(_q_CWindows_CStorage_CIStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsyncOverloadDefaultStartAndCount)(_q_CWindows_CStorage_CIStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem** __pret);
} _q_CWindows_CStorage_CIStorageFolderVtbl;
struct _q_CWindows_CStorage_CIStorageFolder
{
    _q_CWindows_CStorage_CIStorageFolderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFolder2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFolder2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFolder2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFolder2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFolder2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFolder2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFolder2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TryGetItemAsync)(_q_CWindows_CStorage_CIStorageFolder2* pThis, HSTRING name, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem** __pret);
} _q_CWindows_CStorage_CIStorageFolder2Vtbl;
struct _q_CWindows_CStorage_CIStorageFolder2
{
    _q_CWindows_CStorage_CIStorageFolder2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFolder3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFolder3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFolder3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFolder3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFolder3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFolder3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFolder3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TryGetChangeTracker)(_q_CWindows_CStorage_CIStorageFolder3* pThis, _q_CWindows_CStorage_CIStorageLibraryChangeTracker** __pret);
} _q_CWindows_CStorage_CIStorageFolder3Vtbl;
struct _q_CWindows_CStorage_CIStorageFolder3
{
    _q_CWindows_CStorage_CIStorageFolder3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFolderStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFolderStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFolderStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFolderStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFolderStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFolderStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFolderStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFolderFromPathAsync)(_q_CWindows_CStorage_CIStorageFolderStatics* pThis, HSTRING path, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CIStorageFolderStaticsVtbl;
struct _q_CWindows_CStorage_CIStorageFolderStatics
{
    _q_CWindows_CStorage_CIStorageFolderStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageFolderStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageFolderStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageFolderStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageFolderStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageFolderStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageFolderStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageFolderStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFolderFromPathForUserAsync)(_q_CWindows_CStorage_CIStorageFolderStatics2* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING path, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CIStorageFolderStatics2Vtbl;
struct _q_CWindows_CStorage_CIStorageFolderStatics2
{
    _q_CWindows_CStorage_CIStorageFolderStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageItem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RenameAsyncOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageItem* pThis, HSTRING desiredName, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* RenameAsync)(_q_CWindows_CStorage_CIStorageItem* pThis, HSTRING desiredName, _q_CWindows_CStorage_CNameCollisionOption option, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteAsyncOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageItem* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(_q_CWindows_CStorage_CIStorageItem* pThis, _q_CWindows_CStorage_CStorageDeleteOption option, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* GetBasicPropertiesAsync)(_q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CStorage_CIStorageItem* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CStorage_CIStorageItem* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(_q_CWindows_CStorage_CIStorageItem* pThis, _q_CWindows_CStorage_CFileAttributes* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DateCreated)(_q_CWindows_CStorage_CIStorageItem* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* IsOfType)(_q_CWindows_CStorage_CIStorageItem* pThis, _q_CWindows_CStorage_CStorageItemTypes type, boolean* __pret);
} _q_CWindows_CStorage_CIStorageItemVtbl;
struct _q_CWindows_CStorage_CIStorageItem
{
    _q_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageItem2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageItem2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageItem2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageItem2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageItem2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageItem2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageItem2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetParentAsync)(_q_CWindows_CStorage_CIStorageItem2* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* IsEqual)(_q_CWindows_CStorage_CIStorageItem2* pThis, _q_CWindows_CStorage_CIStorageItem* item, boolean* __pret);
} _q_CWindows_CStorage_CIStorageItem2Vtbl;
struct _q_CWindows_CStorage_CIStorageItem2
{
    _q_CWindows_CStorage_CIStorageItem2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageItemPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageItemProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageItemProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageItemProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageItemProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageItemProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageItemProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailAsyncOverloadDefaultSizeDefaultOptions)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailAsyncOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedSize, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailAsync)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedSize, _q_CWindows_CStorage_CFileProperties_CThumbnailOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayType)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FolderRelativeId)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(_q_CWindows_CStorage_CIStorageItemProperties* pThis, _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties** __pret);
} _q_CWindows_CStorage_CIStorageItemPropertiesVtbl;
struct _q_CWindows_CStorage_CIStorageItemProperties
{
    _q_CWindows_CStorage_CIStorageItemPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageItemProperties2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageItemProperties2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageItemProperties2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageItemProperties2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageItemProperties2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageItemProperties2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageItemProperties2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions)(_q_CWindows_CStorage_CIStorageItemProperties2* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
    HRESULT (STDMETHODCALLTYPE* GetScaledImageAsThumbnailAsyncOverloadDefaultOptions)(_q_CWindows_CStorage_CIStorageItemProperties2* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedSize, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
    HRESULT (STDMETHODCALLTYPE* GetScaledImageAsThumbnailAsync)(_q_CWindows_CStorage_CIStorageItemProperties2* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedSize, _q_CWindows_CStorage_CFileProperties_CThumbnailOptions options, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
} _q_CWindows_CStorage_CIStorageItemProperties2Vtbl;
struct _q_CWindows_CStorage_CIStorageItemProperties2
{
    _q_CWindows_CStorage_CIStorageItemProperties2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageItemPropertiesWithProviderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Provider)(_q_CWindows_CStorage_CIStorageItemPropertiesWithProvider* pThis, _q_CWindows_CStorage_CIStorageProvider** __pret);
} _q_CWindows_CStorage_CIStorageItemPropertiesWithProviderVtbl;
struct _q_CWindows_CStorage_CIStorageItemPropertiesWithProvider
{
    _q_CWindows_CStorage_CIStorageItemPropertiesWithProviderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibrary* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibrary* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibrary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibrary* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibrary* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibrary* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RequestAddFolderAsync)(_q_CWindows_CStorage_CIStorageLibrary* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* RequestRemoveFolderAsync)(_q_CWindows_CStorage_CIStorageLibrary* pThis, _q_CWindows_CStorage_CIStorageFolder* folder, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Folders)(_q_CWindows_CStorage_CIStorageLibrary* pThis, _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SaveFolder)(_q_CWindows_CStorage_CIStorageLibrary* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* add_DefinitionChanged)(_q_CWindows_CStorage_CIStorageLibrary* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DefinitionChanged)(_q_CWindows_CStorage_CIStorageLibrary* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
} _q_CWindows_CStorage_CIStorageLibraryVtbl;
struct _q_CWindows_CStorage_CIStorageLibrary
{
    _q_CWindows_CStorage_CIStorageLibraryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibrary2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibrary2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibrary2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibrary2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibrary2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibrary2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibrary2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(_q_CWindows_CStorage_CIStorageLibrary2* pThis, _q_CWindows_CStorage_CIStorageLibraryChangeTracker** __pret);
} _q_CWindows_CStorage_CIStorageLibrary2Vtbl;
struct _q_CWindows_CStorage_CIStorageLibrary2
{
    _q_CWindows_CStorage_CIStorageLibrary2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibrary3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibrary3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibrary3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibrary3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibrary3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibrary3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibrary3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AreFolderSuggestionsAvailableAsync)(_q_CWindows_CStorage_CIStorageLibrary3* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
} _q_CWindows_CStorage_CIStorageLibrary3Vtbl;
struct _q_CWindows_CStorage_CIStorageLibrary3
{
    _q_CWindows_CStorage_CIStorageLibrary3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryChange* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ChangeType)(_q_CWindows_CStorage_CIStorageLibraryChange* pThis, _q_CWindows_CStorage_CStorageLibraryChangeType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CStorage_CIStorageLibraryChange* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PreviousPath)(_q_CWindows_CStorage_CIStorageLibraryChange* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* IsOfType)(_q_CWindows_CStorage_CIStorageLibraryChange* pThis, _q_CWindows_CStorage_CStorageItemTypes type, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* GetStorageItemAsync)(_q_CWindows_CStorage_CIStorageLibraryChange* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem** __pret);
} _q_CWindows_CStorage_CIStorageLibraryChangeVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryChange
{
    _q_CWindows_CStorage_CIStorageLibraryChangeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeReaderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange** __pret);
    HRESULT (STDMETHODCALLTYPE* AcceptChangesAsync)(_q_CWindows_CStorage_CIStorageLibraryChangeReader* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CIStorageLibraryChangeReaderVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryChangeReader
{
    _q_CWindows_CStorage_CIStorageLibraryChangeReaderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeReader2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetLastChangeId)(_q_CWindows_CStorage_CIStorageLibraryChangeReader2* pThis, UINT64* __pret);
} _q_CWindows_CStorage_CIStorageLibraryChangeReader2Vtbl;
struct _q_CWindows_CStorage_CIStorageLibraryChangeReader2
{
    _q_CWindows_CStorage_CIStorageLibraryChangeReader2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeTrackerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetChangeReader)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* pThis, _q_CWindows_CStorage_CIStorageLibraryChangeReader** __pret);
    HRESULT (STDMETHODCALLTYPE* Enable)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* pThis);
    HRESULT (STDMETHODCALLTYPE* Reset)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker* pThis);
} _q_CWindows_CStorage_CIStorageLibraryChangeTrackerVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryChangeTracker
{
    _q_CWindows_CStorage_CIStorageLibraryChangeTrackerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeTracker2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* EnableWithOptions)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* pThis, _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* options);
    HRESULT (STDMETHODCALLTYPE* Disable)(_q_CWindows_CStorage_CIStorageLibraryChangeTracker2* pThis);
} _q_CWindows_CStorage_CIStorageLibraryChangeTracker2Vtbl;
struct _q_CWindows_CStorage_CIStorageLibraryChangeTracker2
{
    _q_CWindows_CStorage_CIStorageLibraryChangeTracker2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptionsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TrackChangeDetails)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TrackChangeDetails)(_q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions* pThis, boolean value);
} _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptionsVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptions
{
    _q_CWindows_CStorage_CIStorageLibraryChangeTrackerOptionsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryLastChangeIdVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryLastChangeId* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryLastChangeId* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryLastChangeId* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryLastChangeId* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryLastChangeId* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryLastChangeId* This, TrustLevel* trustLevel);
} _q_CWindows_CStorage_CIStorageLibraryLastChangeIdVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryLastChangeId
{
    _q_CWindows_CStorage_CIStorageLibraryLastChangeIdVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryLastChangeIdStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Unknown)(_q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics* pThis, UINT64* __pret);
} _q_CWindows_CStorage_CIStorageLibraryLastChangeIdStaticsVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryLastChangeIdStatics
{
    _q_CWindows_CStorage_CIStorageLibraryLastChangeIdStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetLibraryAsync)(_q_CWindows_CStorage_CIStorageLibraryStatics* pThis, _q_CWindows_CStorage_CKnownLibraryId libraryId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary** __pret);
} _q_CWindows_CStorage_CIStorageLibraryStaticsVtbl;
struct _q_CWindows_CStorage_CIStorageLibraryStatics
{
    _q_CWindows_CStorage_CIStorageLibraryStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageLibraryStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageLibraryStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageLibraryStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageLibraryStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageLibraryStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageLibraryStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageLibraryStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetLibraryForUserAsync)(_q_CWindows_CStorage_CIStorageLibraryStatics2* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CKnownLibraryId libraryId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary** __pret);
} _q_CWindows_CStorage_CIStorageLibraryStatics2Vtbl;
struct _q_CWindows_CStorage_CIStorageLibraryStatics2
{
    _q_CWindows_CStorage_CIStorageLibraryStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageProviderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageProvider* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageProvider* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageProvider* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageProvider* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageProvider* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageProvider* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CIStorageProvider* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(_q_CWindows_CStorage_CIStorageProvider* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CIStorageProviderVtbl;
struct _q_CWindows_CStorage_CIStorageProvider
{
    _q_CWindows_CStorage_CIStorageProviderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageProvider2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageProvider2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageProvider2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageProvider2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageProvider2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageProvider2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageProvider2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsPropertySupportedForPartialFileAsync)(_q_CWindows_CStorage_CIStorageProvider2* pThis, HSTRING propertyCanonicalName, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
} _q_CWindows_CStorage_CIStorageProvider2Vtbl;
struct _q_CWindows_CStorage_CIStorageProvider2
{
    _q_CWindows_CStorage_CIStorageProvider2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStorageStreamTransactionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStorageStreamTransaction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStorageStreamTransaction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStorageStreamTransaction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStorageStreamTransaction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStorageStreamTransaction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStorageStreamTransaction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Stream)(_q_CWindows_CStorage_CIStorageStreamTransaction* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* CommitAsync)(_q_CWindows_CStorage_CIStorageStreamTransaction* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CIStorageStreamTransactionVtbl;
struct _q_CWindows_CStorage_CIStorageStreamTransaction
{
    _q_CWindows_CStorage_CIStorageStreamTransactionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIStreamedFileDataRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIStreamedFileDataRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIStreamedFileDataRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIStreamedFileDataRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIStreamedFileDataRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIStreamedFileDataRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIStreamedFileDataRequest* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FailAndClose)(_q_CWindows_CStorage_CIStreamedFileDataRequest* pThis, _q_CWindows_CStorage_CStreamedFileFailureMode failureMode);
} _q_CWindows_CStorage_CIStreamedFileDataRequestVtbl;
struct _q_CWindows_CStorage_CIStreamedFileDataRequest
{
    _q_CWindows_CStorage_CIStreamedFileDataRequestVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemAudioPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemAudioProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemAudioProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemAudioProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemAudioProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemAudioProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemAudioProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EncodingBitrate)(_q_CWindows_CStorage_CISystemAudioProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemAudioPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemAudioProperties
{
    _q_CWindows_CStorage_CISystemAudioPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemDataPathsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemDataPaths* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemDataPaths* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemDataPaths* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemDataPaths* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemDataPaths* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemDataPaths* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Fonts)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProgramData)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Public)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublicDesktop)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublicDocuments)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublicDownloads)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublicMusic)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublicPictures)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublicVideos)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_System)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemHost)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemX86)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemX64)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SystemArm)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_UserProfiles)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Windows)(_q_CWindows_CStorage_CISystemDataPaths* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemDataPathsVtbl;
struct _q_CWindows_CStorage_CISystemDataPaths
{
    _q_CWindows_CStorage_CISystemDataPathsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemDataPathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemDataPathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemDataPathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemDataPathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemDataPathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemDataPathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemDataPathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CStorage_CISystemDataPathsStatics* pThis, _q_CWindows_CStorage_CISystemDataPaths** __pret);
} _q_CWindows_CStorage_CISystemDataPathsStaticsVtbl;
struct _q_CWindows_CStorage_CISystemDataPathsStatics
{
    _q_CWindows_CStorage_CISystemDataPathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemGPSPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemGPSProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemGPSProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemGPSProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemGPSProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemGPSProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemGPSProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LatitudeDecimal)(_q_CWindows_CStorage_CISystemGPSProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LongitudeDecimal)(_q_CWindows_CStorage_CISystemGPSProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemGPSPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemGPSProperties
{
    _q_CWindows_CStorage_CISystemGPSPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemImagePropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemImageProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemImageProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemImageProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemImageProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemImageProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemImageProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalSize)(_q_CWindows_CStorage_CISystemImageProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSize)(_q_CWindows_CStorage_CISystemImageProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemImagePropertiesVtbl;
struct _q_CWindows_CStorage_CISystemImageProperties
{
    _q_CWindows_CStorage_CISystemImagePropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemMediaPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemMediaProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemMediaProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemMediaProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemMediaProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemMediaProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemMediaProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Duration)(_q_CWindows_CStorage_CISystemMediaProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Producer)(_q_CWindows_CStorage_CISystemMediaProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Publisher)(_q_CWindows_CStorage_CISystemMediaProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SubTitle)(_q_CWindows_CStorage_CISystemMediaProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Writer)(_q_CWindows_CStorage_CISystemMediaProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Year)(_q_CWindows_CStorage_CISystemMediaProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemMediaPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemMediaProperties
{
    _q_CWindows_CStorage_CISystemMediaPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemMusicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemMusicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemMusicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemMusicProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemMusicProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemMusicProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemMusicProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AlbumArtist)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AlbumTitle)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Artist)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Composer)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Conductor)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DisplayArtist)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Genre)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TrackNumber)(_q_CWindows_CStorage_CISystemMusicProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemMusicPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemMusicProperties
{
    _q_CWindows_CStorage_CISystemMusicPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemPhotoPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemPhotoProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemPhotoProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemPhotoProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemPhotoProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemPhotoProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemPhotoProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CameraManufacturer)(_q_CWindows_CStorage_CISystemPhotoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CameraModel)(_q_CWindows_CStorage_CISystemPhotoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DateTaken)(_q_CWindows_CStorage_CISystemPhotoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(_q_CWindows_CStorage_CISystemPhotoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PeopleNames)(_q_CWindows_CStorage_CISystemPhotoProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemPhotoPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemPhotoProperties
{
    _q_CWindows_CStorage_CISystemPhotoPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Author)(_q_CWindows_CStorage_CISystemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(_q_CWindows_CStorage_CISystemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ItemNameDisplay)(_q_CWindows_CStorage_CISystemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Keywords)(_q_CWindows_CStorage_CISystemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Rating)(_q_CWindows_CStorage_CISystemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CISystemProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Audio)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemAudioProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_GPS)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemGPSProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Media)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemMediaProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Music)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemMusicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Photo)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemPhotoProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Video)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemVideoProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Image)(_q_CWindows_CStorage_CISystemProperties* pThis, _q_CWindows_CStorage_CISystemImageProperties** __pret);
} _q_CWindows_CStorage_CISystemPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemProperties
{
    _q_CWindows_CStorage_CISystemPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CISystemVideoPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CISystemVideoProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CISystemVideoProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CISystemVideoProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CISystemVideoProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CISystemVideoProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CISystemVideoProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Director)(_q_CWindows_CStorage_CISystemVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FrameHeight)(_q_CWindows_CStorage_CISystemVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FrameWidth)(_q_CWindows_CStorage_CISystemVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(_q_CWindows_CStorage_CISystemVideoProperties* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_TotalBitrate)(_q_CWindows_CStorage_CISystemVideoProperties* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CISystemVideoPropertiesVtbl;
struct _q_CWindows_CStorage_CISystemVideoProperties
{
    _q_CWindows_CStorage_CISystemVideoPropertiesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIUserDataPathsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIUserDataPaths* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIUserDataPaths* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIUserDataPaths* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIUserDataPaths* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIUserDataPaths* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIUserDataPaths* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CameraRoll)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Cookies)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Desktop)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Documents)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Downloads)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Favorites)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_History)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_InternetCache)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAppData)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LocalAppDataLow)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Music)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Pictures)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Profile)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Recent)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoamingAppData)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SavedPictures)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Screenshots)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Templates)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Videos)(_q_CWindows_CStorage_CIUserDataPaths* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CIUserDataPathsVtbl;
struct _q_CWindows_CStorage_CIUserDataPaths
{
    _q_CWindows_CStorage_CIUserDataPathsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CIUserDataPathsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CIUserDataPathsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CIUserDataPathsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CIUserDataPathsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CIUserDataPathsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CIUserDataPathsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CIUserDataPathsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(_q_CWindows_CStorage_CIUserDataPathsStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CIUserDataPaths** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CStorage_CIUserDataPathsStatics* pThis, _q_CWindows_CStorage_CIUserDataPaths** __pret);
} _q_CWindows_CStorage_CIUserDataPathsStaticsVtbl;
struct _q_CWindows_CStorage_CIUserDataPathsStatics
{
    _q_CWindows_CStorage_CIUserDataPathsStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ViewMode)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerViewMode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ViewMode)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerViewMode value);
    HRESULT (STDMETHODCALLTYPE* get_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SuggestedStartLocation)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerLocationId* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuggestedStartLocation)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerLocationId value);
    HRESULT (STDMETHODCALLTYPE* get_CommitButtonText)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CommitButtonText)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileTypeFilter)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* PickSingleFileAsync)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* PickMultipleFilesAsync)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CPickers_CIFileOpenPickerVtbl;
struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker
{
    _q_CWindows_CStorage_CPickers_CIFileOpenPickerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContinuationData)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* pThis, _q_CWindows_CFoundation_CCollections_CIPropertySet** __pret);
    HRESULT (STDMETHODCALLTYPE* PickSingleFileAndContinue)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* pThis);
    HRESULT (STDMETHODCALLTYPE* PickMultipleFilesAndContinue)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker2* pThis);
} _q_CWindows_CStorage_CPickers_CIFileOpenPicker2Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker2
{
    _q_CWindows_CStorage_CPickers_CIFileOpenPicker2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(_q_CWindows_CStorage_CPickers_CIFileOpenPicker3* pThis, _q_CWindows_CSystem_CIUser** __pret);
} _q_CWindows_CStorage_CPickers_CIFileOpenPicker3Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFileOpenPicker3
{
    _q_CWindows_CStorage_CPickers_CIFileOpenPicker3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ResumePickSingleFileAsync)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CPickers_CIFileOpenPickerStaticsVtbl;
struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics
{
    _q_CWindows_CStorage_CPickers_CIFileOpenPickerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateForUser)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CPickers_CIFileOpenPicker** __pret);
} _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2
{
    _q_CWindows_CStorage_CPickers_CIFileOpenPickerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationIdVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* PickSingleFileAsync)(_q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId* pThis, HSTRING pickerOperationId, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationIdVtbl;
struct _q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationId
{
    _q_CWindows_CStorage_CPickers_CIFileOpenPickerWithOperationIdVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePickerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SuggestedStartLocation)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, _q_CWindows_CStorage_CPickers_CPickerLocationId* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuggestedStartLocation)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, _q_CWindows_CStorage_CPickers_CPickerLocationId value);
    HRESULT (STDMETHODCALLTYPE* get_CommitButtonText)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CommitButtonText)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileTypeChoices)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DefaultFileExtension)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DefaultFileExtension)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SuggestedSaveFile)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, _q_CWindows_CStorage_CIStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuggestedSaveFile)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, _q_CWindows_CStorage_CIStorageFile* value);
    HRESULT (STDMETHODCALLTYPE* get_SuggestedFileName)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuggestedFileName)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* PickSaveFileAsync)(_q_CWindows_CStorage_CPickers_CIFileSavePicker* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CPickers_CIFileSavePickerVtbl;
struct _q_CWindows_CStorage_CPickers_CIFileSavePicker
{
    _q_CWindows_CStorage_CPickers_CIFileSavePickerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContinuationData)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* pThis, _q_CWindows_CFoundation_CCollections_CIPropertySet** __pret);
    HRESULT (STDMETHODCALLTYPE* PickSaveFileAndContinue)(_q_CWindows_CStorage_CPickers_CIFileSavePicker2* pThis);
} _q_CWindows_CStorage_CPickers_CIFileSavePicker2Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFileSavePicker2
{
    _q_CWindows_CStorage_CPickers_CIFileSavePicker2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EnterpriseId)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_EnterpriseId)(_q_CWindows_CStorage_CPickers_CIFileSavePicker3* pThis, HSTRING value);
} _q_CWindows_CStorage_CPickers_CIFileSavePicker3Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFileSavePicker3
{
    _q_CWindows_CStorage_CPickers_CIFileSavePicker3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePicker4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(_q_CWindows_CStorage_CPickers_CIFileSavePicker4* pThis, _q_CWindows_CSystem_CIUser** __pret);
} _q_CWindows_CStorage_CPickers_CIFileSavePicker4Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFileSavePicker4
{
    _q_CWindows_CStorage_CPickers_CIFileSavePicker4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFileSavePickerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateForUser)(_q_CWindows_CStorage_CPickers_CIFileSavePickerStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CPickers_CIFileSavePicker** __pret);
} _q_CWindows_CStorage_CPickers_CIFileSavePickerStaticsVtbl;
struct _q_CWindows_CStorage_CPickers_CIFileSavePickerStatics
{
    _q_CWindows_CStorage_CPickers_CIFileSavePickerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPickerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFolderPicker* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFolderPicker* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFolderPicker* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFolderPicker* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFolderPicker* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFolderPicker* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ViewMode)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerViewMode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ViewMode)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerViewMode value);
    HRESULT (STDMETHODCALLTYPE* get_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SuggestedStartLocation)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerLocationId* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuggestedStartLocation)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, _q_CWindows_CStorage_CPickers_CPickerLocationId value);
    HRESULT (STDMETHODCALLTYPE* get_CommitButtonText)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CommitButtonText)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileTypeFilter)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* PickSingleFolderAsync)(_q_CWindows_CStorage_CPickers_CIFolderPicker* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CPickers_CIFolderPickerVtbl;
struct _q_CWindows_CStorage_CPickers_CIFolderPicker
{
    _q_CWindows_CStorage_CPickers_CIFolderPickerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPicker2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContinuationData)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* pThis, _q_CWindows_CFoundation_CCollections_CIPropertySet** __pret);
    HRESULT (STDMETHODCALLTYPE* PickFolderAndContinue)(_q_CWindows_CStorage_CPickers_CIFolderPicker2* pThis);
} _q_CWindows_CStorage_CPickers_CIFolderPicker2Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFolderPicker2
{
    _q_CWindows_CStorage_CPickers_CIFolderPicker2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPicker3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(_q_CWindows_CStorage_CPickers_CIFolderPicker3* pThis, _q_CWindows_CSystem_CIUser** __pret);
} _q_CWindows_CStorage_CPickers_CIFolderPicker3Vtbl;
struct _q_CWindows_CStorage_CPickers_CIFolderPicker3
{
    _q_CWindows_CStorage_CPickers_CIFolderPicker3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CIFolderPickerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateForUser)(_q_CWindows_CStorage_CPickers_CIFolderPickerStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CStorage_CPickers_CIFolderPicker** __pret);
} _q_CWindows_CStorage_CPickers_CIFolderPickerStaticsVtbl;
struct _q_CWindows_CStorage_CPickers_CIFolderPickerStatics
{
    _q_CWindows_CStorage_CPickers_CIFolderPickerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUIVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddFile)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, HSTRING id, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CStorage_CPickers_CProvider_CAddFileResult* __pret);
    HRESULT (STDMETHODCALLTYPE* RemoveFile)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, HSTRING id);
    HRESULT (STDMETHODCALLTYPE* ContainsFile)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, HSTRING id, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* CanAddFile)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _q_CWindows_CStorage_CIStorageFile* file, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AllowedFileTypes)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionMode)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _q_CWindows_CStorage_CPickers_CProvider_CFileSelectionMode* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* add_FileRemoved)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FileRemoved)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closing)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Closing)(_q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUIVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI
{
    _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUIVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgsVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs
{
    _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUIVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_AllowedFileTypes)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SettingsIdentifier)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FileName)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* TrySetFileName)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, HSTRING value, _q_CWindows_CStorage_CPickers_CProvider_CSetFileNameResult* __pret);
    HRESULT (STDMETHODCALLTYPE* add_FileNameChanged)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FileNameChanged)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_TargetFileRequested)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_TargetFileRequested)(_q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUIVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI
{
    _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUIVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferralVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral* pThis);
} _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferralVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral
{
    _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferralVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ClosingOperation)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* pThis, _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsCanceled)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* pThis, boolean* __pret);
} _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgsVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs
{
    _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* pThis, _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingDeferral** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Deadline)(_q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
} _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperationVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperation
{
    _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingOperationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_TargetFile)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* pThis, _q_CWindows_CStorage_CIStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* put_TargetFile)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* pThis, _q_CWindows_CStorage_CIStorageFile* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest* pThis, _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral** __pret);
} _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest
{
    _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferralVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral* pThis);
} _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferralVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferral
{
    _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestDeferralVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Request)(_q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* pThis, _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequest** __pret);
} _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgsVtbl;
struct _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs
{
    _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetUpdateInformation)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, HSTRING contentId, _q_CWindows_CStorage_CProvider_CReadActivationMode readMode, _q_CWindows_CStorage_CProvider_CWriteActivationMode writeMode, _q_CWindows_CStorage_CProvider_CCachedFileOptions options);
} _q_CWindows_CStorage_CProvider_CICachedFileUpdaterStaticsVtbl;
struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterStatics
{
    _q_CWindows_CStorage_CProvider_CICachedFileUpdaterStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUIVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateTarget)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, _q_CWindows_CStorage_CProvider_CCachedFileTarget* __pret);
    HRESULT (STDMETHODCALLTYPE* add_FileUpdateRequested)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FileUpdateRequested)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UIRequested)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UIRequested)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_UIStatus)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* pThis, _q_CWindows_CStorage_CProvider_CUIStatus* __pret);
} _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUIVtbl;
struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI
{
    _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUIVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UpdateRequest)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* pThis, _q_CWindows_CStorage_CProvider_CIFileUpdateRequest** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2* pThis, _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral** __pret);
} _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2Vtbl;
struct _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2
{
    _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentId)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_File)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* pThis, _q_CWindows_CStorage_CIStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* pThis, _q_CWindows_CStorage_CProvider_CFileUpdateStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Status)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* pThis, _q_CWindows_CStorage_CProvider_CFileUpdateStatus value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* pThis, _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateLocalFile)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest* pThis, _q_CWindows_CStorage_CIStorageFile* value);
} _q_CWindows_CStorage_CProvider_CIFileUpdateRequestVtbl;
struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequest
{
    _q_CWindows_CStorage_CProvider_CIFileUpdateRequestVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequest2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UserInputNeededMessage)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UserInputNeededMessage)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequest2* pThis, HSTRING value);
} _q_CWindows_CStorage_CProvider_CIFileUpdateRequest2Vtbl;
struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequest2
{
    _q_CWindows_CStorage_CProvider_CIFileUpdateRequest2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferralVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Complete)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral* pThis);
} _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferralVtbl;
struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferral
{
    _q_CWindows_CStorage_CProvider_CIFileUpdateRequestDeferralVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Request)(_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* pThis, _q_CWindows_CStorage_CProvider_CIFileUpdateRequest** __pret);
} _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgsVtbl;
struct _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs
{
    _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Message)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FilePath)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FilePath)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_PrimaryAction)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand** __pret);
    HRESULT (STDMETHODCALLTYPE* put_PrimaryAction)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* value);
    HRESULT (STDMETHODCALLTYPE* get_SecondaryAction)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SecondaryAction)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* value);
    HRESULT (STDMETHODCALLTYPE* get_InformationalLink)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand** __pret);
    HRESULT (STDMETHODCALLTYPE* put_InformationalLink)(_q_CWindows_CStorage_CProvider_CIStorageProviderError* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* value);
} _q_CWindows_CStorage_CProvider_CIStorageProviderErrorVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderError
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderErrorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Label)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ActionUri)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory* pThis, HSTRING label, _q_CWindows_CFoundation_CIUriRuntimeClass* actionUri, _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommand** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactoryVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactory
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderErrorCommandFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory* pThis, HSTRING id, HSTRING title, HSTRING message, _q_CWindows_CStorage_CProvider_CIStorageProviderError** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactoryVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactory
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderErrorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FileExtension)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IconResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory* pThis, HSTRING fileExtension, HSTRING iconResource, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactoryVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactory
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfoFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Status)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus value);
    HRESULT (STDMETHODCALLTYPE* get_ContentUri)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentUri)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ContentId)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentId)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult* pThis, HSTRING value);
} _q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResultVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResult
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderGetContentInfoForPathResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Status)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderUriSourceStatus value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Path)(_q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult* pThis, HSTRING value);
} _q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResultVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResult
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderGetPathForContentUriResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetAsync)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics* pThis, _q_CWindows_CStorage_CIStorageItem* item, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* itemProperties, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStaticsVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStatics
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertiesStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* pThis, INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IconResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IconResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemProperty
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* pThis, INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DisplayNameResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* pThis, HSTRING value);
} _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinitionVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Message)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderState* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ErrorMessages)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatus* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderStatusVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderStatus
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderStatusVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderState state, HSTRING message, _q_CWindows_CStorage_CProvider_CIStorageProviderStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateInstance2)(_q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderState state, HSTRING message, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* errorMessages, _q_CWindows_CStorage_CProvider_CIStorageProviderStatus** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactoryVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactory
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderStatusFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Id)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Context)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Context)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Path)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayNameResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DisplayNameResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IconResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IconResource)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_HydrationPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HydrationPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_HydrationPolicyModifier)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HydrationPolicyModifier)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderHydrationPolicyModifier value);
    HRESULT (STDMETHODCALLTYPE* get_PopulationPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_PopulationPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderPopulationPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_InSyncPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_InSyncPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderInSyncPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_HardlinkPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HardlinkPolicy)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderHardlinkPolicy value);
    HRESULT (STDMETHODCALLTYPE* get_ShowSiblingsAsGroup)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ShowSiblingsAsGroup)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Version)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionMode)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderProtectionMode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProtectionMode)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CStorage_CProvider_CStorageProviderProtectionMode value);
    HRESULT (STDMETHODCALLTYPE* get_AllowPinning)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowPinning)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_StorageProviderItemPropertyDefinitions)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RecycleBinUri)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_RecycleBinUri)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
} _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfoVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProviderId)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProviderId)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2* pThis, GUID value);
} _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2Vtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FallbackFileTypeInfo)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3Vtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Register)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo* syncRootInformation);
    HRESULT (STDMETHODCALLTYPE* Unregister)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* pThis, HSTRING id);
    HRESULT (STDMETHODCALLTYPE* GetSyncRootInformationForFolder)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* pThis, _q_CWindows_CStorage_CIStorageFolder* folder, _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSyncRootInformationForId)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* pThis, HSTRING id, _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentSyncRoots)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo** __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStaticsVtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(_q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2* pThis, boolean* __pret);
} _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2Vtbl;
struct _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2
{
    _q_CWindows_CStorage_CProvider_CIStorageProviderSyncRootManagerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIContentIndexer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIContentIndexer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIContentIndexer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIContentIndexer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIContentIndexer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIContentIndexer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, _q_CWindows_CStorage_CSearch_CIIndexableContent* indexableContent, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, _q_CWindows_CStorage_CSearch_CIIndexableContent* indexableContent, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, HSTRING contentId, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteMultipleAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* contentIds, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteAllAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* RetrievePropertiesAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, HSTRING contentId, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* propertiesToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Revision)(_q_CWindows_CStorage_CSearch_CIContentIndexer* pThis, UINT64* __pret);
} _q_CWindows_CStorage_CSearch_CIContentIndexerVtbl;
struct _q_CWindows_CStorage_CSearch_CIContentIndexer
{
    _q_CWindows_CStorage_CSearch_CIContentIndexerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerQueryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetCountAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* GetPropertiesAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetPropertiesRangeAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* pThis, UINT32 startIndex, UINT32 maxItems, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent** __pret);
    HRESULT (STDMETHODCALLTYPE* GetRangeAsync)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* pThis, UINT32 startIndex, UINT32 maxItems, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent** __pret);
    HRESULT (STDMETHODCALLTYPE* get_QueryFolder)(_q_CWindows_CStorage_CSearch_CIContentIndexerQuery* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _q_CWindows_CStorage_CSearch_CIContentIndexerQueryVtbl;
struct _q_CWindows_CStorage_CSearch_CIContentIndexerQuery
{
    _q_CWindows_CStorage_CSearch_CIContentIndexerQueryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperationsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateQueryWithSortOrderAndLanguage)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* pThis, HSTRING searchFilter, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* propertiesToRetrieve, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* sortOrder, HSTRING searchFilterLanguage, _q_CWindows_CStorage_CSearch_CIContentIndexerQuery** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateQueryWithSortOrder)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* pThis, HSTRING searchFilter, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* propertiesToRetrieve, _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* sortOrder, _q_CWindows_CStorage_CSearch_CIContentIndexerQuery** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateQuery)(_q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations* pThis, HSTRING searchFilter, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* propertiesToRetrieve, _q_CWindows_CStorage_CSearch_CIContentIndexerQuery** __pret);
} _q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperationsVtbl;
struct _q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperations
{
    _q_CWindows_CStorage_CSearch_CIContentIndexerQueryOperationsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIContentIndexerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetIndexerWithName)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* pThis, HSTRING indexName, _q_CWindows_CStorage_CSearch_CIContentIndexer** __pret);
    HRESULT (STDMETHODCALLTYPE* GetIndexer)(_q_CWindows_CStorage_CSearch_CIContentIndexerStatics* pThis, _q_CWindows_CStorage_CSearch_CIContentIndexer** __pret);
} _q_CWindows_CStorage_CSearch_CIContentIndexerStaticsVtbl;
struct _q_CWindows_CStorage_CSearch_CIContentIndexerStatics
{
    _q_CWindows_CStorage_CSearch_CIContentIndexerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIIndexableContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIIndexableContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIIndexableContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIIndexableContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIIndexableContent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Id)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Stream)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Stream)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* value);
    HRESULT (STDMETHODCALLTYPE* get_StreamContentType)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_StreamContentType)(_q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, HSTRING value);
} _q_CWindows_CStorage_CSearch_CIIndexableContentVtbl;
struct _q_CWindows_CStorage_CSearch_CIIndexableContent
{
    _q_CWindows_CStorage_CSearch_CIIndexableContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIQueryOptionsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIQueryOptions* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIQueryOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIQueryOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIQueryOptions* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIQueryOptions* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIQueryOptions* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FileTypeFilter)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FolderDepth)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CSearch_CFolderDepth* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FolderDepth)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CSearch_CFolderDepth value);
    HRESULT (STDMETHODCALLTYPE* get_ApplicationSearchFilter)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ApplicationSearchFilter)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_UserSearchFilter)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UserSearchFilter)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Language)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_IndexerOption)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CSearch_CIndexerOption* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IndexerOption)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CSearch_CIndexerOption value);
    HRESULT (STDMETHODCALLTYPE* get_SortOrder)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry** __pret);
    HRESULT (STDMETHODCALLTYPE* get_GroupPropertyName)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DateStackOption)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CSearch_CDateStackOption* __pret);
    HRESULT (STDMETHODCALLTYPE* SaveToString)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* LoadFromString)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* SetThumbnailPrefetch)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CFileProperties_CThumbnailMode mode, UINT32 requestedSize, _q_CWindows_CStorage_CFileProperties_CThumbnailOptions options);
    HRESULT (STDMETHODCALLTYPE* SetPropertyPrefetch)(_q_CWindows_CStorage_CSearch_CIQueryOptions* pThis, _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions options, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* propertiesToRetrieve);
} _q_CWindows_CStorage_CSearch_CIQueryOptionsVtbl;
struct _q_CWindows_CStorage_CSearch_CIQueryOptions
{
    _q_CWindows_CStorage_CSearch_CIQueryOptionsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIQueryOptionsFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateCommonFileQuery)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* pThis, _q_CWindows_CStorage_CSearch_CCommonFileQuery query, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* fileTypeFilter, _q_CWindows_CStorage_CSearch_CIQueryOptions** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateCommonFolderQuery)(_q_CWindows_CStorage_CSearch_CIQueryOptionsFactory* pThis, _q_CWindows_CStorage_CSearch_CCommonFolderQuery query, _q_CWindows_CStorage_CSearch_CIQueryOptions** __pret);
} _q_CWindows_CStorage_CSearch_CIQueryOptionsFactoryVtbl;
struct _q_CWindows_CStorage_CSearch_CIQueryOptionsFactory
{
    _q_CWindows_CStorage_CSearch_CIQueryOptionsFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StorageProviderIdFilter)(_q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
} _q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilterVtbl;
struct _q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilter
{
    _q_CWindows_CStorage_CSearch_CIQueryOptionsWithProviderFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFileQueryResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsync)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* pThis, UINT32 startIndex, UINT32 maxNumberOfItems, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsyncDefaultStartAndCount)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
} _q_CWindows_CStorage_CSearch_CIStorageFileQueryResultVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult
{
    _q_CWindows_CStorage_CSearch_CIStorageFileQueryResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetMatchingPropertiesWithRanges)(_q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2* pThis, _q_CWindows_CStorage_CIStorageFile* file, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment** __pret);
} _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2Vtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2
{
    _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperationsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetIndexedStateAsync)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFileQueryOverloadDefault)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFileQuery)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFileQuery query, _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFileQueryWithOptions)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIQueryOptions* queryOptions, _q_CWindows_CStorage_CSearch_CIStorageFileQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderQueryOverloadDefault)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderQuery)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFolderQuery query, _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFolderQueryWithOptions)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIQueryOptions* queryOptions, _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateItemQuery)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIStorageItemQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateItemQueryWithOptions)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIQueryOptions* queryOptions, _q_CWindows_CStorage_CSearch_CIStorageItemQueryResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsync)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFileQuery query, UINT32 startIndex, UINT32 maxItemsToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsyncOverloadDefaultStartAndCount)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFileQuery query, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsync)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFolderQuery query, UINT32 startIndex, UINT32 maxItemsToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsyncOverloadDefaultStartAndCount)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFolderQuery query, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsync)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, UINT32 startIndex, UINT32 maxItemsToRetrieve, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* AreQueryOptionsSupported)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CIQueryOptions* queryOptions, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsCommonFolderQuerySupported)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFolderQuery query, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* IsCommonFileQuerySupported)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations* pThis, _q_CWindows_CStorage_CSearch_CCommonFileQuery query, boolean* __pret);
} _q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperationsVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations
{
    _q_CWindows_CStorage_CSearch_CIStorageFolderQueryOperationsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsync)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* pThis, UINT32 startIndex, UINT32 maxNumberOfItems, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsyncDefaultStartAndCount)(_q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResultVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResult
{
    _q_CWindows_CStorage_CSearch_CIStorageFolderQueryResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageItemQueryResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsync)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* pThis, UINT32 startIndex, UINT32 maxNumberOfItems, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsyncDefaultStartAndCount)(_q_CWindows_CStorage_CSearch_CIStorageItemQueryResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem** __pret);
} _q_CWindows_CStorage_CSearch_CIStorageItemQueryResultVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageItemQueryResult
{
    _q_CWindows_CStorage_CSearch_CIStorageItemQueryResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Folder)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(_q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails* pThis, _q_CWindows_CStorage_CIStorageLibraryChangeTracker** __pret);
} _q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetailsVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetails
{
    _q_CWindows_CStorage_CSearch_CIStorageLibraryChangeTrackerTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetailsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Folder)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateModifiedSinceQuery)(_q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails* pThis, _q_CWindows_CFoundation_CDateTime lastQueryTime, _q_CWindows_CStorage_CSearch_CIStorageItemQueryResult** __pret);
} _q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetailsVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetails
{
    _q_CWindows_CStorage_CSearch_CIStorageLibraryContentChangedTriggerDetailsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIStorageQueryResultBaseVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetItemCountAsync)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Folder)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* add_ContentsChanged)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ContentsChanged)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* add_OptionsChanged)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable* changedHandler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_OptionsChanged)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _q_CWindows_CFoundation_CEventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* FindStartIndexAsync)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, IInspectable* value, _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* GetCurrentQueryOptions)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _q_CWindows_CStorage_CSearch_CIQueryOptions** __pret);
    HRESULT (STDMETHODCALLTYPE* ApplyNewQueryOptions)(_q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* pThis, _q_CWindows_CStorage_CSearch_CIQueryOptions* newQueryOptions);
} _q_CWindows_CStorage_CSearch_CIStorageQueryResultBaseVtbl;
struct _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase
{
    _q_CWindows_CStorage_CSearch_CIStorageQueryResultBaseVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CSearch_CIValueAndLanguageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Language)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Language)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CStorage_CSearch_CIValueAndLanguage* pThis, IInspectable* value);
} _q_CWindows_CStorage_CSearch_CIValueAndLanguageVtbl;
struct _q_CWindows_CStorage_CSearch_CIValueAndLanguage
{
    _q_CWindows_CStorage_CSearch_CIValueAndLanguageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIBuffer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Capacity)(_q_CWindows_CStorage_CStreams_CIBuffer* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Length)(_q_CWindows_CStorage_CStreams_CIBuffer* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Length)(_q_CWindows_CStorage_CStreams_CIBuffer* pThis, UINT32 value);
} _q_CWindows_CStorage_CStreams_CIBufferVtbl;
struct _q_CWindows_CStorage_CStreams_CIBuffer
{
    _q_CWindows_CStorage_CStreams_CIBufferVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIBufferFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIBufferFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIBufferFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIBufferFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIBufferFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIBufferFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIBufferFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CStorage_CStreams_CIBufferFactory* pThis, UINT32 capacity, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CStorage_CStreams_CIBufferFactoryVtbl;
struct _q_CWindows_CStorage_CStreams_CIBufferFactory
{
    _q_CWindows_CStorage_CStreams_CIBufferFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIBufferStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIBufferStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIBufferStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIBufferStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIBufferStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIBufferStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIBufferStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateCopyFromMemoryBuffer)(_q_CWindows_CStorage_CStreams_CIBufferStatics* pThis, _q_CWindows_CFoundation_CIMemoryBuffer* input, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateMemoryBufferOverIBuffer)(_q_CWindows_CStorage_CStreams_CIBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* input, _q_CWindows_CFoundation_CIMemoryBuffer** __pret);
} _q_CWindows_CStorage_CStreams_CIBufferStaticsVtbl;
struct _q_CWindows_CStorage_CStreams_CIBufferStatics
{
    _q_CWindows_CStorage_CStreams_CIBufferStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIContentTypeProviderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentType)(_q_CWindows_CStorage_CStreams_CIContentTypeProvider* pThis, HSTRING* __pret);
} _q_CWindows_CStorage_CStreams_CIContentTypeProviderVtbl;
struct _q_CWindows_CStorage_CStreams_CIContentTypeProvider
{
    _q_CWindows_CStorage_CStreams_CIContentTypeProviderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIDataReaderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIDataReader* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIDataReader* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIDataReader* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIDataReader* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIDataReader* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIDataReader* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UnconsumedBufferLength)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_UnicodeEncoding)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CUnicodeEncoding* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UnicodeEncoding)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CUnicodeEncoding value);
    HRESULT (STDMETHODCALLTYPE* get_ByteOrder)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CByteOrder* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ByteOrder)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CByteOrder value);
    HRESULT (STDMETHODCALLTYPE* get_InputStreamOptions)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CInputStreamOptions* __pret);
    HRESULT (STDMETHODCALLTYPE* put_InputStreamOptions)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CInputStreamOptions value);
    HRESULT (STDMETHODCALLTYPE* ReadByte)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT8* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadBytes)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT32 valueLength, UINT8* value);
    HRESULT (STDMETHODCALLTYPE* ReadBuffer)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT32 length, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadBoolean)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadGuid)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadInt16)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, INT16* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadInt32)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadInt64)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, INT64* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadUInt16)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT16* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadUInt32)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadUInt64)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadSingle)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, FLOAT* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadDouble)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadString)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT32 codeUnitCount, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadDateTime)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* ReadTimeSpan)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* LoadAsync)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, UINT32 count, _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* DetachBuffer)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* DetachStream)(_q_CWindows_CStorage_CStreams_CIDataReader* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CStorage_CStreams_CIDataReaderVtbl;
struct _q_CWindows_CStorage_CStreams_CIDataReader
{
    _q_CWindows_CStorage_CStreams_CIDataReaderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIDataReaderFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateDataReader)(_q_CWindows_CStorage_CStreams_CIDataReaderFactory* pThis, _q_CWindows_CStorage_CStreams_CIInputStream* inputStream, _q_CWindows_CStorage_CStreams_CIDataReader** __pret);
} _q_CWindows_CStorage_CStreams_CIDataReaderFactoryVtbl;
struct _q_CWindows_CStorage_CStreams_CIDataReaderFactory
{
    _q_CWindows_CStorage_CStreams_CIDataReaderFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIDataReaderStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* FromBuffer)(_q_CWindows_CStorage_CStreams_CIDataReaderStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _q_CWindows_CStorage_CStreams_CIDataReader** __pret);
} _q_CWindows_CStorage_CStreams_CIDataReaderStaticsVtbl;
struct _q_CWindows_CStorage_CStreams_CIDataReaderStatics
{
    _q_CWindows_CStorage_CStreams_CIDataReaderStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIDataWriterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIDataWriter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIDataWriter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIDataWriter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIDataWriter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIDataWriter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIDataWriter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_UnstoredBufferLength)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_UnicodeEncoding)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CUnicodeEncoding* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UnicodeEncoding)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CUnicodeEncoding value);
    HRESULT (STDMETHODCALLTYPE* get_ByteOrder)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CByteOrder* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ByteOrder)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CByteOrder value);
    HRESULT (STDMETHODCALLTYPE* WriteByte)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, UINT8 value);
    HRESULT (STDMETHODCALLTYPE* WriteBytes)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, UINT32 valueLength, UINT8* value);
    HRESULT (STDMETHODCALLTYPE* WriteBuffer)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer);
    HRESULT (STDMETHODCALLTYPE* WriteBufferRange)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, UINT32 start, UINT32 count);
    HRESULT (STDMETHODCALLTYPE* WriteBoolean)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* WriteGuid)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, GUID value);
    HRESULT (STDMETHODCALLTYPE* WriteInt16)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, INT16 value);
    HRESULT (STDMETHODCALLTYPE* WriteInt32)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, INT32 value);
    HRESULT (STDMETHODCALLTYPE* WriteInt64)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, INT64 value);
    HRESULT (STDMETHODCALLTYPE* WriteUInt16)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, UINT16 value);
    HRESULT (STDMETHODCALLTYPE* WriteUInt32)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* WriteUInt64)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, UINT64 value);
    HRESULT (STDMETHODCALLTYPE* WriteSingle)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, FLOAT value);
    HRESULT (STDMETHODCALLTYPE* WriteDouble)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* WriteDateTime)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* WriteTimeSpan)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CFoundation_CTimeSpan value);
    HRESULT (STDMETHODCALLTYPE* WriteString)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, HSTRING value, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* MeasureString)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, HSTRING value, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* StoreAsync)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* FlushAsync)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* DetachBuffer)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* DetachStream)(_q_CWindows_CStorage_CStreams_CIDataWriter* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
} _q_CWindows_CStorage_CStreams_CIDataWriterVtbl;
struct _q_CWindows_CStorage_CStreams_CIDataWriter
{
    _q_CWindows_CStorage_CStreams_CIDataWriterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIDataWriterFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateDataWriter)(_q_CWindows_CStorage_CStreams_CIDataWriterFactory* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream* outputStream, _q_CWindows_CStorage_CStreams_CIDataWriter** __pret);
} _q_CWindows_CStorage_CStreams_CIDataWriterFactoryVtbl;
struct _q_CWindows_CStorage_CStreams_CIDataWriterFactory
{
    _q_CWindows_CStorage_CStreams_CIDataWriterFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OpenAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, HSTRING filePath, _q_CWindows_CStorage_CFileAccessMode accessMode, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenWithOptionsAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, HSTRING filePath, _q_CWindows_CStorage_CFileAccessMode accessMode, _q_CWindows_CStorage_CStorageOpenOptions sharingOptions, _q_CWindows_CStorage_CStreams_CFileOpenDisposition openDisposition, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, HSTRING filePath, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteWithOptionsAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, HSTRING filePath, _q_CWindows_CStorage_CStorageOpenOptions openOptions, _q_CWindows_CStorage_CStreams_CFileOpenDisposition openDisposition, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenForUserAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING filePath, _q_CWindows_CStorage_CFileAccessMode accessMode, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenForUserWithOptionsAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING filePath, _q_CWindows_CStorage_CFileAccessMode accessMode, _q_CWindows_CStorage_CStorageOpenOptions sharingOptions, _q_CWindows_CStorage_CStreams_CFileOpenDisposition openDisposition, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteForUserAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING filePath, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteForUserWithOptionsAsync)(_q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics* pThis, _q_CWindows_CSystem_CIUser* user, HSTRING filePath, _q_CWindows_CStorage_CStorageOpenOptions openOptions, _q_CWindows_CStorage_CStreams_CFileOpenDisposition openDisposition, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
} _q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStaticsVtbl;
struct _q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStatics
{
    _q_CWindows_CStorage_CStreams_CIFileRandomAccessStreamStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIInputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIInputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIInputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIInputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIInputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIInputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIInputStream* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ReadAsync)(_q_CWindows_CStorage_CStreams_CIInputStream* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, UINT32 count, _q_CWindows_CStorage_CStreams_CInputStreamOptions options, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32** __pret);
} _q_CWindows_CStorage_CStreams_CIInputStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIInputStream
{
    _q_CWindows_CStorage_CStreams_CIInputStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIInputStreamReferenceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OpenSequentialReadAsync)(_q_CWindows_CStorage_CStreams_CIInputStreamReference* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CStorage_CStreams_CIInputStreamReferenceVtbl;
struct _q_CWindows_CStorage_CStreams_CIInputStreamReference
{
    _q_CWindows_CStorage_CStreams_CIInputStreamReferenceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* WriteAsync)(_q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* FlushAsync)(_q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
} _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIOutputStream
{
    _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Size)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, UINT64 value);
    HRESULT (STDMETHODCALLTYPE* GetInputStreamAt)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, UINT64 position, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* GetOutputStreamAt)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, UINT64 position, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Position)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* Seek)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, UINT64 position);
    HRESULT (STDMETHODCALLTYPE* CloneStream)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanRead)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanWrite)(_q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, boolean* __pret);
} _q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIRandomAccessStream
{
    _q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OpenReadAsync)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** __pret);
} _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceVtbl;
struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference
{
    _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromFile)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* pThis, _q_CWindows_CStorage_CIStorageFile* file, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromUri)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromStream)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* stream, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReference** __pret);
} _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStaticsVtbl;
struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStatics
{
    _q_CWindows_CStorage_CStreams_CIRandomAccessStreamReferenceStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CopyAsync)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* pThis, _q_CWindows_CStorage_CStreams_CIInputStream* source, _q_CWindows_CStorage_CStreams_CIOutputStream* destination, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* CopySizeAsync)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* pThis, _q_CWindows_CStorage_CStreams_CIInputStream* source, _q_CWindows_CStorage_CStreams_CIOutputStream* destination, UINT64 bytesToCopy, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* CopyAndCloseAsync)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics* pThis, _q_CWindows_CStorage_CStreams_CIInputStream* source, _q_CWindows_CStorage_CStreams_CIOutputStream* destination, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64** __pret);
} _q_CWindows_CStorage_CStreams_CIRandomAccessStreamStaticsVtbl;
struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamStatics
{
    _q_CWindows_CStorage_CStreams_CIRandomAccessStreamStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, TrustLevel* trustLevel);
} _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl;
struct _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
{
    _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* This, TrustLevel* trustLevel);
    void* unneeded_get_ProcessId;
    void* unneeded_get_ExecutableFileName;
    void* unneeded_get_Parent;
    void* unneeded_get_ProcessStartTime;
    void* unneeded_get_DiskUsage;
    void* unneeded_get_MemoryUsage;
    void* unneeded_get_CpuUsage;
} _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfoVtbl;
struct _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo
{
    _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueue* This, TrustLevel* trustLevel);
    void* unneeded_CreateTimer;
    void* unneeded_TryEnqueue;
    void* unneeded_TryEnqueueWithPriority;
    void* unneeded_add_ShutdownStarting;
    void* unneeded_remove_ShutdownStarting;
    void* unneeded_add_ShutdownCompleted;
    void* unneeded_remove_ShutdownCompleted;
} _q_CWindows_CSystem_CIDispatcherQueueVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueue
{
    _q_CWindows_CSystem_CIDispatcherQueueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueController* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueController* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueController* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueController* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(_q_CWindows_CSystem_CIDispatcherQueueController* pThis, _q_CWindows_CSystem_CIDispatcherQueue** __pret);
    HRESULT (STDMETHODCALLTYPE* ShutdownQueueAsync)(_q_CWindows_CSystem_CIDispatcherQueueController* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueController
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateOnDedicatedThread)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* pThis, _q_CWindows_CSystem_CIDispatcherQueueController** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIUser* This, TrustLevel* trustLevel);
    void* unneeded_get_NonRoamableId;
    void* unneeded_get_AuthenticationStatus;
    void* unneeded_get_Type;
    void* unneeded_GetPropertyAsync;
    void* unneeded_GetPropertiesAsync;
    void* unneeded_GetPictureAsync;
} _q_CWindows_CSystem_CIUserVtbl;
struct _q_CWindows_CSystem_CIUser
{
    _q_CWindows_CSystem_CIUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CSystem_CProfile_CSystemIdentificationSource* __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForPublisher)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForUser)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CCore_CICoreDispatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CCore_CICoreDispatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CCore_CICoreDispatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, TrustLevel* trustLevel);
    void* unneeded_get_HasThreadAccess;
    void* unneeded_ProcessEvents;
    void* unneeded_RunAsync;
    void* unneeded_RunIdleAsync;
} _q_CWindows_CUI_CCore_CICoreDispatcherVtbl;
struct _q_CWindows_CUI_CCore_CICoreDispatcher
{
    _q_CWindows_CUI_CCore_CICoreDispatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CCore_CICoreWindowVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CCore_CICoreWindow* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CCore_CICoreWindow* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CCore_CICoreWindow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CCore_CICoreWindow* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CCore_CICoreWindow* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CCore_CICoreWindow* This, TrustLevel* trustLevel);
    void* unneeded_get_AutomationHostProvider;
    void* unneeded_get_Bounds;
    void* unneeded_get_CustomProperties;
    void* unneeded_get_Dispatcher;
    void* unneeded_get_FlowDirection;
    void* unneeded_put_FlowDirection;
    void* unneeded_get_IsInputEnabled;
    void* unneeded_put_IsInputEnabled;
    void* unneeded_get_PointerCursor;
    void* unneeded_put_PointerCursor;
    void* unneeded_get_PointerPosition;
    void* unneeded_get_Visible;
    void* unneeded_Activate;
    void* unneeded_Close;
    void* unneeded_GetAsyncKeyState;
    void* unneeded_GetKeyState;
    void* unneeded_ReleasePointerCapture;
    void* unneeded_SetPointerCapture;
    void* unneeded_add_Activated;
    void* unneeded_remove_Activated;
    void* unneeded_add_AutomationProviderRequested;
    void* unneeded_remove_AutomationProviderRequested;
    void* unneeded_add_CharacterReceived;
    void* unneeded_remove_CharacterReceived;
    void* unneeded_add_Closed;
    void* unneeded_remove_Closed;
    void* unneeded_add_InputEnabled;
    void* unneeded_remove_InputEnabled;
    void* unneeded_add_KeyDown;
    void* unneeded_remove_KeyDown;
    void* unneeded_add_KeyUp;
    void* unneeded_remove_KeyUp;
    void* unneeded_add_PointerCaptureLost;
    void* unneeded_remove_PointerCaptureLost;
    void* unneeded_add_PointerEntered;
    void* unneeded_remove_PointerEntered;
    void* unneeded_add_PointerExited;
    void* unneeded_remove_PointerExited;
    void* unneeded_add_PointerMoved;
    void* unneeded_remove_PointerMoved;
    void* unneeded_add_PointerPressed;
    void* unneeded_remove_PointerPressed;
    void* unneeded_add_PointerReleased;
    void* unneeded_remove_PointerReleased;
    void* unneeded_add_TouchHitTesting;
    void* unneeded_remove_TouchHitTesting;
    void* unneeded_add_PointerWheelChanged;
    void* unneeded_remove_PointerWheelChanged;
    void* unneeded_add_SizeChanged;
    void* unneeded_remove_SizeChanged;
    void* unneeded_add_VisibilityChanged;
    void* unneeded_remove_VisibilityChanged;
} _q_CWindows_CUI_CCore_CICoreWindowVtbl;
struct _q_CWindows_CUI_CCore_CICoreWindow
{
    _q_CWindows_CUI_CCore_CICoreWindowVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIBadgeNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIBadgeNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIBadgeNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIBadgeNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIBadgeNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIBadgeNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIBadgeNotification* This, TrustLevel* trustLevel);
    void* unneeded_get_Content;
    void* unneeded_put_ExpirationTime;
    void* unneeded_get_ExpirationTime;
} _q_CWindows_CUI_CNotifications_CIBadgeNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIBadgeNotification
{
    _q_CWindows_CUI_CNotifications_CIBadgeNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIBadgeNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateBadgeNotification)(_q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CUI_CNotifications_CIBadgeNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIBadgeNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIBadgeNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIBadgeNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CINotificationDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CINotificationData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CINotificationData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CINotificationData* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CINotificationData* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CINotificationData* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CINotificationData* This, TrustLevel* trustLevel);
    void* unneeded_get_Values;
    void* unneeded_get_SequenceNumber;
    void* unneeded_put_SequenceNumber;
} _q_CWindows_CUI_CNotifications_CINotificationDataVtbl;
struct _q_CWindows_CUI_CNotifications_CINotificationData
{
    _q_CWindows_CUI_CNotifications_CINotificationDataVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateNotificationDataWithValuesAndSequenceNumber)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* initialValues, UINT32 sequenceNumber, _q_CWindows_CUI_CNotifications_CINotificationData** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateNotificationDataWithValues)(_q_CWindows_CUI_CNotifications_CINotificationDataFactory* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* initialValues, _q_CWindows_CUI_CNotifications_CINotificationData** __pret);
} _q_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CINotificationDataFactory
{
    _q_CWindows_CUI_CNotifications_CINotificationDataFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotification* This, TrustLevel* trustLevel);
    void* unneeded_get_Content;
    void* unneeded_get_DeliveryTime;
    void* unneeded_get_SnoozeInterval;
    void* unneeded_get_MaximumSnoozeCount;
    void* unneeded_put_Id;
    void* unneeded_get_Id;
} _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotification
{
    _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateScheduledToastNotification)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CFoundation_CDateTime deliveryTime, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateScheduledToastNotificationRecurring)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CFoundation_CDateTime deliveryTime, _q_CWindows_CFoundation_CTimeSpan snoozeInterval, UINT32 maximumSnoozeCount, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Cancel;
    void* unneeded_put_Cancel;
    void* unneeded_get_ScheduledToastNotification;
    void* unneeded_GetDeferral;
} _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl;
struct _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs
{
    _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CITileNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CITileNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CITileNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CITileNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CITileNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CITileNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CITileNotification* This, TrustLevel* trustLevel);
    void* unneeded_get_Content;
    void* unneeded_put_ExpirationTime;
    void* unneeded_get_ExpirationTime;
    void* unneeded_put_Tag;
    void* unneeded_get_Tag;
} _q_CWindows_CUI_CNotifications_CITileNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CITileNotification
{
    _q_CWindows_CUI_CNotifications_CITileNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CITileNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateTileNotification)(_q_CWindows_CUI_CNotifications_CITileNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CUI_CNotifications_CITileNotification** __pret);
} _q_CWindows_CUI_CNotifications_CITileNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CITileNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CITileNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Reason;
} _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs
{
    _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_ErrorCode;
} _q_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs
{
    _q_CWindows_CUI_CNotifications_CIToastFailedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ExpirationTime)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationTime)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* add_Dismissed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Dismissed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Failed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Failed)(_q_CWindows_CUI_CNotifications_CIToastNotification* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Tag)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Tag)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Group)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Group)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SuppressPopup)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SuppressPopup)(_q_CWindows_CUI_CNotifications_CIToastNotification2* pThis, boolean* __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotification2Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification2
{
    _q_CWindows_CUI_CNotifications_CIToastNotification2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NotificationMirroring)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, _q_CWindows_CUI_CNotifications_CNotificationMirroring* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NotificationMirroring)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, _q_CWindows_CUI_CNotifications_CNotificationMirroring value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(_q_CWindows_CUI_CNotifications_CIToastNotification3* pThis, HSTRING value);
} _q_CWindows_CUI_CNotifications_CIToastNotification3Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification3
{
    _q_CWindows_CUI_CNotifications_CIToastNotification3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Data)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CINotificationData** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Data)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CINotificationData* value);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CToastNotificationPriority* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(_q_CWindows_CUI_CNotifications_CIToastNotification4* pThis, _q_CWindows_CUI_CNotifications_CToastNotificationPriority value);
} _q_CWindows_CUI_CNotifications_CIToastNotification4Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification4
{
    _q_CWindows_CUI_CNotifications_CIToastNotification4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification6Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification6* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExpiresOnReboot)(_q_CWindows_CUI_CNotifications_CIToastNotification6* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ExpiresOnReboot)(_q_CWindows_CUI_CNotifications_CIToastNotification6* pThis, boolean value);
} _q_CWindows_CUI_CNotifications_CIToastNotification6Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification6
{
    _q_CWindows_CUI_CNotifications_CIToastNotification6Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotification)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationHistory* This, TrustLevel* trustLevel);
    void* unneeded_RemoveGroup;
    void* unneeded_RemoveGroupWithId;
    void* unneeded_RemoveGroupedTagWithId;
    void* unneeded_RemoveGroupedTag;
    void* unneeded_Remove;
    void* unneeded_Clear;
    void* unneeded_ClearWithId;
} _q_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationHistory
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationHistoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser* This, TrustLevel* trustLevel);
    void* unneeded_CreateToastNotifier;
    void* unneeded_CreateToastNotifierWithId;
    void* unneeded_get_History;
    void* unneeded_get_User;
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifier)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, _q_CWindows_CUI_CNotifications_CIToastNotifier** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifierWithId)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, HSTRING applicationId, _q_CWindows_CUI_CNotifications_CIToastNotifier** __pret);
    HRESULT (STDMETHODCALLTYPE* GetTemplateContent)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, _q_CWindows_CUI_CNotifications_CToastTemplateType type, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_History)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2* pThis, _q_CWindows_CUI_CNotifications_CIToastNotificationHistory** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser** __pret);
    HRESULT (STDMETHODCALLTYPE* ConfigureNotificationMirroring)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4* pThis, _q_CWindows_CUI_CNotifications_CNotificationMirroring value);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5* pThis, _q_CWindows_CUI_CNotifications_CIToastNotificationManagerForUser** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics5Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Show)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* notification);
    HRESULT (STDMETHODCALLTYPE* Hide)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* notification);
    HRESULT (STDMETHODCALLTYPE* get_Setting)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CNotificationSetting* __pret);
    HRESULT (STDMETHODCALLTYPE* AddToSchedule)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification* scheduledToast);
    HRESULT (STDMETHODCALLTYPE* RemoveFromSchedule)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIScheduledToastNotification* scheduledToast);
    HRESULT (STDMETHODCALLTYPE* GetScheduledToastNotifications)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier
{
    _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* UpdateWithTagAndGroup)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* pThis, _q_CWindows_CUI_CNotifications_CINotificationData* data, HSTRING tag, HSTRING group, _q_CWindows_CUI_CNotifications_CNotificationUpdateResult* __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateWithTag)(_q_CWindows_CUI_CNotifications_CIToastNotifier2* pThis, _q_CWindows_CUI_CNotifications_CINotificationData* data, HSTRING tag, _q_CWindows_CUI_CNotifications_CNotificationUpdateResult* __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier2
{
    _q_CWindows_CUI_CNotifications_CIToastNotifier2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ScheduledToastNotificationShowing)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ScheduledToastNotificationShowing)(_q_CWindows_CUI_CNotifications_CIToastNotifier3* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier3
{
    _q_CWindows_CUI_CNotifications_CIToastNotifier3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CAtomPub_CIAtomPubClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* RetrieveServiceDocumentAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* RetrieveMediaResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* RetrieveResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, HSTRING description, _q_CWindows_CWeb_CSyndication_CISyndicationItem* item, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateMediaResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, HSTRING mediaType, HSTRING description, _q_CWindows_CStorage_CStreams_CIInputStream* mediaStream, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateMediaResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, HSTRING mediaType, _q_CWindows_CStorage_CStreams_CIInputStream* mediaStream, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CSyndication_CISyndicationItem* item, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* UpdateResourceItemAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationItem* item, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteResourceAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteResourceItemAsync)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationItem* item, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* CancelAsyncOperations)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClient* pThis);
} _q_CWindows_CWeb_CAtomPub_CIAtomPubClientVtbl;
struct _q_CWindows_CWeb_CAtomPub_CIAtomPubClient
{
    _q_CWindows_CWeb_CAtomPub_CIAtomPubClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateAtomPubClientWithCredentials)(_q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* serverCredential, _q_CWindows_CWeb_CAtomPub_CIAtomPubClient** __pret);
} _q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactoryVtbl;
struct _q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactory
{
    _q_CWindows_CWeb_CAtomPub_CIAtomPubClientFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CAtomPub_CIResourceCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Categories)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Accepts)(_q_CWindows_CWeb_CAtomPub_CIResourceCollection* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
} _q_CWindows_CWeb_CAtomPub_CIResourceCollectionVtbl;
struct _q_CWindows_CWeb_CAtomPub_CIResourceCollection
{
    _q_CWindows_CWeb_CAtomPub_CIResourceCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CAtomPub_CIServiceDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Workspaces)(_q_CWindows_CWeb_CAtomPub_CIServiceDocument* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace** __pret);
} _q_CWindows_CWeb_CAtomPub_CIServiceDocumentVtbl;
struct _q_CWindows_CWeb_CAtomPub_CIServiceDocument
{
    _q_CWindows_CWeb_CAtomPub_CIServiceDocumentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CAtomPub_CIWorkspaceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Collections)(_q_CWindows_CWeb_CAtomPub_CIWorkspace* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection** __pret);
} _q_CWindows_CWeb_CAtomPub_CIWorkspaceVtbl;
struct _q_CWindows_CWeb_CAtomPub_CIWorkspace
{
    _q_CWindows_CWeb_CAtomPub_CIWorkspaceVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis);
    HRESULT (STDMETHODCALLTYPE* add_RequestSent)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RequestSent)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ResponseReceived)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ResponseReceived)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RequestResponseCompleted)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RequestResponseCompleted)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ActivityId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Timestamps)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestedUri)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProcessId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ThreadId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Initiator)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SourceLocations)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation** __pret);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestampsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CacheCheckedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionInitiatedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NameResolvedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SslNegotiatedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionCompletedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestSentTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestCompletedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseReceivedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseCompletedTimestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestampsVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestampsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ActivityId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Message)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ProcessId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ThreadId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Initiator)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SourceLocations)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation** __pret);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgsVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Timestamp)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ActivityId)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* pThis, GUID* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Message)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgsVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromProcessDiagnosticInfo)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* pThis, _q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* processDiagnosticInfo, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider** __pret);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceUri)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LineNumber)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* pThis, UINT64* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ColumnNumber)(_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* pThis, UINT64* __pret);
} _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocationVtbl;
struct _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation
{
    _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AllowAutoRedirect)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowAutoRedirect)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AllowUI)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AllowUI)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AutomaticDecompression)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AutomaticDecompression)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_CacheControl)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CookieManager)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CWeb_CHttp_CIHttpCookieManager** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ClientCertificate)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ClientCertificate)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate* value);
    HRESULT (STDMETHODCALLTYPE* get_IgnorableServerCertificateErrors)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxConnectionsPerServer)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxConnectionsPerServer)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyCredential)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyCredential)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_ServerCredential)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ServerCredential)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_UseProxy)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_UseProxy)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* pThis, boolean value);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxVersion)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* pThis, _q_CWindows_CWeb_CHttp_CHttpVersion* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxVersion)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2* pThis, _q_CWindows_CWeb_CHttp_CHttpVersion value);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2Vtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CookieUsageBehavior)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* pThis, _q_CWindows_CWeb_CHttp_CFilters_CHttpCookieUsageBehavior* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CookieUsageBehavior)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3* pThis, _q_CWindows_CWeb_CHttp_CFilters_CHttpCookieUsageBehavior value);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3Vtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_ServerCustomValidationRequested)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ServerCustomValidationRequested)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* ClearAuthenticationCache)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4* pThis);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4Vtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter4Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_User)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5* pThis, _q_CWindows_CSystem_CIUser** __pret);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5Vtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter5Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateForUser)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter** __pret);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStatics
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilterStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ReadBehavior)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* pThis, _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ReadBehavior)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* pThis, _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheReadBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_WriteBehavior)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* pThis, _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheWriteBehavior* __pret);
    HRESULT (STDMETHODCALLTYPE* put_WriteBehavior)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl* pThis, _q_CWindows_CWeb_CHttp_CFilters_CHttpCacheWriteBehavior value);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControlVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControl
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpCacheControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SendRequestAsync)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* request, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificate)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrorSeverity)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrors)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerIntermediateCertificates)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* Reject)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CFoundation_CIDeferral** __pret);
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgsVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MaxAge)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxAge)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxStale)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxStale)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_MinFresh)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
    HRESULT (STDMETHODCALLTYPE* put_MinFresh)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_SharedMaxAge)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SharedMaxAge)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Scheme)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Token)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromScheme)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* pThis, HSTRING scheme, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromSchemeWithToken)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory* pThis, HSTRING scheme, HSTRING token, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** challengeHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Token)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory* pThis, HSTRING token, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** connectionOptionHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentCoding)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory* pThis, HSTRING contentCoding, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** contentCodingHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentCoding)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromValue)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* pThis, HSTRING contentCoding, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromValueWithQuality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory* pThis, HSTRING contentCoding, DOUBLE quality, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** contentCodingWithQualityHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_DispositionType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DispositionType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FileName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_FileNameStar)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FileNameStar)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Name)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Size)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64* value);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory* pThis, HSTRING dispositionType, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** contentDispositionHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentDisposition)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentDisposition)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentEncoding)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentLanguage)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentLength)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentLength)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentLocation)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentLocation)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentMD5)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentMD5)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentRange)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentRange)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_Expires)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Expires)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_LastModified)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_LastModified)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* Append)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, HSTRING name, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TryAppendWithoutValidation)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection* pThis, HSTRING name, HSTRING value, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FirstBytePosition)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LastBytePosition)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Length)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Unit)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Unit)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue* pThis, HSTRING value);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromLength)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* pThis, UINT64 length, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromRange)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* pThis, UINT64 from, UINT64 to, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromRangeWithLength)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory* pThis, UINT64 from, UINT64 to, UINT64 length, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue** contentRangeHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* pThis, HSTRING value);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* pThis, HSTRING name, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithValue)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory* pThis, HSTRING name, HSTRING value, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** cookiePairHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Scheme)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Token)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromScheme)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* pThis, HSTRING scheme, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromSchemeWithToken)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory* pThis, HSTRING scheme, HSTRING token, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** credentialsHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Date)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Delta)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue** dateOrDeltaHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* pThis, HSTRING name, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithValue)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory* pThis, HSTRING name, HSTRING value, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** expectationHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_LanguageRange)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromLanguageRange)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* pThis, HSTRING languageRange, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromLanguageRangeWithQuality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory* pThis, HSTRING languageRange, DOUBLE quality, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** languageRangeWithQualityHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CharSet)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CharSet)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MediaType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory* pThis, HSTRING mediaType, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue** mediaTypeHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_CharSet)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CharSet)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MediaType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Quality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_IReference_1_DOUBLE* value);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromMediaType)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* pThis, HSTRING mediaType, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromMediaTypeWithQuality)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory* pThis, HSTRING mediaType, DOUBLE quality, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** mediaTypeWithQualityHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* pThis, HSTRING value);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* pThis, HSTRING name, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithValue)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory* pThis, HSTRING name, HSTRING value, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** nameValueHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Version)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* pThis, HSTRING productName, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithVersion)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory* pThis, HSTRING productName, HSTRING productVersion, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** productHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Product)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromComment)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* pThis, HSTRING productComment, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromNameWithVersion)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory* pThis, HSTRING productName, HSTRING productVersion, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** productInfoHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Accept)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AcceptEncoding)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_AcceptLanguage)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Authorization)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Authorization)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_CacheControl)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Connection)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Cookie)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Date)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Date)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Expect)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_From)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_From)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Host)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Host)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* get_IfModifiedSince)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_IfModifiedSince)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_IfUnmodifiedSince)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_IfUnmodifiedSince)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxForwards)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxForwards)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1_UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyAuthorization)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyAuthorization)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_Referer)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Referer)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_TransferEncoding)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_UserAgent)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* Append)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, HSTRING name, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TryAppendWithoutValidation)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection* pThis, HSTRING name, HSTRING value, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Age)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Age)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Allow)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CacheControl)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Connection)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Date)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Date)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Location)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Location)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyAuthenticate)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RetryAfter)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* put_RetryAfter)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* get_TransferEncoding)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_WwwAuthenticate)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* Append)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, HSTRING name, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* TryAppendWithoutValidation)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection* pThis, HSTRING name, HSTRING value, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Parameters)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* ParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* pThis, HSTRING input);
    HRESULT (STDMETHODCALLTYPE* TryParseAdd)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection* pThis, HSTRING input, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Parse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* TryParse)(_q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics* pThis, HSTRING input, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** transferCodingHeaderValue, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics
{
    _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromBuffer)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* content, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromBufferWithOffset)(_q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* content, UINT32 offset, UINT32 count, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetWithOptionAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CHttpCompletionOption completionOption, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetBufferAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetInputStreamAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetStringAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* PostAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CIHttpContent* content, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* PutAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CIHttpContent* content, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* SendRequestAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* request, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* SendRequestWithOptionAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* request, _q_CWindows_CWeb_CHttp_CHttpCompletionOption completionOption, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DefaultRequestHeaders)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpClientVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClient
{
    _q_CWindows_CWeb_CHttp_CIHttpClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClient2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClient2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClient2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClient2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClient2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClient2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClient2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* TryDeleteAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryGetAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryGetAsync2)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CHttpCompletionOption completionOption, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryGetBufferAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryGetInputStreamAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryGetStringAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryPostAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CIHttpContent* content, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TryPutAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CIHttpContent* content, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TrySendRequestAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* request, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* TrySendRequestAsync2)(_q_CWindows_CWeb_CHttp_CIHttpClient2* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* request, _q_CWindows_CWeb_CHttp_CHttpCompletionOption completionOption, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpClient2Vtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClient2
{
    _q_CWindows_CWeb_CHttp_CIHttpClient2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* pThis, _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* filter, _q_CWindows_CWeb_CHttp_CIHttpClient** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* BufferAllAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadAsBufferAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadAsInputStreamAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* ReadAsStringAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* TryComputeLength)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, UINT64* length, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* WriteToStreamAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream* outputStream, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpContentVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpContent
{
    _q_CWindows_CWeb_CHttp_CIHttpContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpCookieVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpCookie* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpCookie* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpCookie* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpCookie* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpCookie* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpCookie* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Domain)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Path)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Expires)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Expires)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_HttpOnly)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HttpOnly)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Secure)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Secure)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Value)(_q_CWindows_CWeb_CHttp_CIHttpCookie* pThis, HSTRING value);
} _q_CWindows_CWeb_CHttp_CIHttpCookieVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpCookie
{
    _q_CWindows_CWeb_CHttp_CIHttpCookieVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpCookieFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpCookieFactory* pThis, HSTRING name, HSTRING domain, HSTRING path, _q_CWindows_CWeb_CHttp_CIHttpCookie** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpCookieFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpCookieFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpCookieFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpCookieManagerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* SetCookie)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* pThis, _q_CWindows_CWeb_CHttp_CIHttpCookie* cookie, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetCookieWithThirdParty)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* pThis, _q_CWindows_CWeb_CHttp_CIHttpCookie* cookie, boolean thirdParty, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* DeleteCookie)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* pThis, _q_CWindows_CWeb_CHttp_CIHttpCookie* cookie);
    HRESULT (STDMETHODCALLTYPE* GetCookies)(_q_CWindows_CWeb_CHttp_CIHttpCookieManager* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpCookieManagerVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpCookieManager
{
    _q_CWindows_CWeb_CHttp_CIHttpCookieManagerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory* pThis, _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* content, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpGetBufferResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseMessage)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Succeeded)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CIHttpGetBufferResult* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpGetBufferResultVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult
{
    _q_CWindows_CWeb_CHttp_CIHttpGetBufferResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseMessage)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Succeeded)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResultVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult
{
    _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpGetStringResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseMessage)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Succeeded)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CHttp_CIHttpGetStringResult* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CIHttpGetStringResultVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpGetStringResult
{
    _q_CWindows_CWeb_CHttp_CIHttpGetStringResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMethodVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMethod* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMethod* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMethod* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMethod* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Method)(_q_CWindows_CWeb_CHttp_CIHttpMethod* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CHttp_CIHttpMethodVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMethod
{
    _q_CWindows_CWeb_CHttp_CIHttpMethodVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMethodFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpMethodFactory* pThis, HSTRING method, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpMethodFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMethodFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpMethodFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMethodStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Delete)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Get)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Head)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Options)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Patch)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Post)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Put)(_q_CWindows_CWeb_CHttp_CIHttpMethodStatics* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpMethodStaticsVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMethodStatics
{
    _q_CWindows_CWeb_CHttp_CIHttpMethodStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Add)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContent* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent* content);
} _q_CWindows_CWeb_CHttp_CIHttpMultipartContentVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMultipartContent
{
    _q_CWindows_CWeb_CHttp_CIHttpMultipartContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithSubtype)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* pThis, HSTRING subtype, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithSubtypeAndBoundary)(_q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory* pThis, HSTRING subtype, HSTRING boundary, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Add)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent* content);
    HRESULT (STDMETHODCALLTYPE* AddWithName)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent* content, HSTRING name);
    HRESULT (STDMETHODCALLTYPE* AddWithNameAndFileName)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent* content, HSTRING name, HSTRING fileName);
} _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent
{
    _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithBoundary)(_q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory* pThis, HSTRING boundary, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpRequestMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Content)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent* value);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Method)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Method)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestUri)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequestUri)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_TransportInformation)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpTransportInformation** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpRequestMessageVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpRequestMessage
{
    _q_CWindows_CWeb_CHttp_CIHttpRequestMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod* method, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpRequestResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedError)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ResponseMessage)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Succeeded)(_q_CWindows_CWeb_CHttp_CIHttpRequestResult* pThis, boolean* __pret);
} _q_CWindows_CWeb_CHttp_CIHttpRequestResultVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpRequestResult
{
    _q_CWindows_CWeb_CHttp_CIHttpRequestResultVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Content)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent* value);
    HRESULT (STDMETHODCALLTYPE* get_Headers)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsSuccessStatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ReasonPhrase)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ReasonPhrase)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_RequestMessage)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequestMessage)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Source)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource value);
    HRESULT (STDMETHODCALLTYPE* get_StatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHttpStatusCode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_StatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHttpStatusCode value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHttpVersion* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Version)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CHttpVersion value);
    HRESULT (STDMETHODCALLTYPE* EnsureSuccessStatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* pThis, _q_CWindows_CWeb_CHttp_CHttpStatusCode statusCode, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromInputStream)(_q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory* pThis, _q_CWindows_CStorage_CStreams_CIInputStream* content, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpStringContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateFromString)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* pThis, HSTRING content, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromStringWithEncoding)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* pThis, HSTRING content, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateFromStringWithEncodingAndMediaType)(_q_CWindows_CWeb_CHttp_CIHttpStringContentFactory* pThis, HSTRING content, _q_CWindows_CStorage_CStreams_CUnicodeEncoding encoding, HSTRING mediaType, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpStringContentFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpStringContentFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpStringContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpTransportInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificate)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrorSeverity)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* pThis, _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerCertificateErrors)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ServerIntermediateCertificates)(_q_CWindows_CWeb_CHttp_CIHttpTransportInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpTransportInformationVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpTransportInformation
{
    _q_CWindows_CWeb_CHttp_CIHttpTransportInformationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CIUriToStreamResolverVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CIUriToStreamResolver* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CIUriToStreamResolver* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CIUriToStreamResolver* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CIUriToStreamResolver* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CIUriToStreamResolver* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CIUriToStreamResolver* This, TrustLevel* trustLevel);
    void* unneeded_UriToStreamAsync;
} _q_CWindows_CWeb_CIUriToStreamResolverVtbl;
struct _q_CWindows_CWeb_CIUriToStreamResolver
{
    _q_CWindows_CWeb_CIUriToStreamResolverVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CIWebErrorStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CIWebErrorStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CIWebErrorStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CIWebErrorStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CIWebErrorStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CIWebErrorStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CIWebErrorStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetStatus)(_q_CWindows_CWeb_CIWebErrorStatics* pThis, INT32 hresult, _q_CWindows_CWeb_CWebErrorStatus* __pret);
} _q_CWindows_CWeb_CIWebErrorStaticsVtbl;
struct _q_CWindows_CWeb_CIWebErrorStatics
{
    _q_CWindows_CWeb_CIWebErrorStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationAttributeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationAttribute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationAttribute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationAttribute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationAttribute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationAttribute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationAttribute* This, TrustLevel* trustLevel);
    void* unneeded_get_Name;
    void* unneeded_put_Name;
    void* unneeded_get_Namespace;
    void* unneeded_put_Namespace;
    void* unneeded_get_Value;
    void* unneeded_put_Value;
} _q_CWindows_CWeb_CSyndication_CISyndicationAttributeVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationAttribute
{
    _q_CWindows_CWeb_CSyndication_CISyndicationAttributeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationAttribute)(_q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory* pThis, HSTRING attributeName, HSTRING attributeNamespace, HSTRING attributeValue, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationAttributeFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationCategoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Label)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Label)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Scheme)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Scheme)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Term)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Term)(_q_CWindows_CWeb_CSyndication_CISyndicationCategory* pThis, HSTRING value);
} _q_CWindows_CWeb_CSyndication_CISyndicationCategoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationCategory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationCategoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationCategory)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* pThis, HSTRING term, _q_CWindows_CWeb_CSyndication_CISyndicationCategory** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationCategoryEx)(_q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory* pThis, HSTRING term, HSTRING scheme, HSTRING label, _q_CWindows_CWeb_CSyndication_CISyndicationCategory** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationCategoryFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ServerCredential)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ServerCredential)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_ProxyCredential)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ProxyCredential)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxResponseBufferSize)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxResponseBufferSize)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Timeout)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Timeout)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BypassCacheOnRetrieve)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_BypassCacheOnRetrieve)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* SetRequestHeader)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, HSTRING name, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RetrieveFeedAsync)(_q_CWindows_CWeb_CSyndication_CISyndicationClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationClientVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationClient
{
    _q_CWindows_CWeb_CSyndication_CISyndicationClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationClientFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationClient)(_q_CWindows_CWeb_CSyndication_CISyndicationClientFactory* pThis, _q_CWindows_CSecurity_CCredentials_CIPasswordCredential* serverCredential, _q_CWindows_CWeb_CSyndication_CISyndicationClient** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationClientFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationClientFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationClientFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_SourceUri)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SourceUri)(_q_CWindows_CWeb_CSyndication_CISyndicationContent* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
} _q_CWindows_CWeb_CSyndication_CISyndicationContentVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationContent
{
    _q_CWindows_CWeb_CSyndication_CISyndicationContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationContentFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationContent)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* pThis, HSTRING text, _q_CWindows_CWeb_CSyndication_CSyndicationTextType type, _q_CWindows_CWeb_CSyndication_CISyndicationContent** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationContentWithSourceUri)(_q_CWindows_CWeb_CSyndication_CISyndicationContentFactory* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* sourceUri, _q_CWindows_CWeb_CSyndication_CISyndicationContent** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationContentFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationContentFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationContentFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationErrorStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetStatus)(_q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics* pThis, INT32 hresult, _q_CWindows_CWeb_CSyndication_CSyndicationErrorStatus* __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationErrorStaticsVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationErrorStatics
{
    _q_CWindows_CWeb_CSyndication_CISyndicationErrorStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationFeedVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Authors)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Categories)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Contributors)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Generator)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationGenerator** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Generator)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationGenerator* value);
    HRESULT (STDMETHODCALLTYPE* get_IconUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_IconUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Id)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Items)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdatedTime)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* put_LastUpdatedTime)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Links)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ImageUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ImageUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Rights)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Rights)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Subtitle)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Subtitle)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_FirstUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LastUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_NextUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PreviousUri)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SourceFormat)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CWeb_CSyndication_CSyndicationFormat* __pret);
    HRESULT (STDMETHODCALLTYPE* Load)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, HSTRING feed);
    HRESULT (STDMETHODCALLTYPE* LoadFromXml)(_q_CWindows_CWeb_CSyndication_CISyndicationFeed* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* feedDocument);
} _q_CWindows_CWeb_CSyndication_CISyndicationFeedVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationFeed
{
    _q_CWindows_CWeb_CSyndication_CISyndicationFeedVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationFeedFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationFeed)(_q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory* pThis, HSTRING title, HSTRING subtitle, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CSyndication_CISyndicationFeed** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationFeedFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationFeedFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationFeedFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Text)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_Version)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Version)(_q_CWindows_CWeb_CSyndication_CISyndicationGenerator* pThis, HSTRING value);
} _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationGenerator
{
    _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationGenerator)(_q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory* pThis, HSTRING text, _q_CWindows_CWeb_CSyndication_CISyndicationGenerator** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationGeneratorFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Authors)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Categories)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Contributors)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationContent** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Content)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationContent* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Id)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_LastUpdatedTime)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* put_LastUpdatedTime)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Links)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PublishedDate)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CDateTime* __pret);
    HRESULT (STDMETHODCALLTYPE* put_PublishedDate)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Rights)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Rights)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationFeed** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Source)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationFeed* value);
    HRESULT (STDMETHODCALLTYPE* get_Summary)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Summary)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationText* value);
    HRESULT (STDMETHODCALLTYPE* get_CommentsUri)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_CommentsUri)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_EditUri)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_EditMediaUri)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ETag)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ItemUri)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* Load)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, HSTRING item);
    HRESULT (STDMETHODCALLTYPE* LoadFromXml)(_q_CWindows_CWeb_CSyndication_CISyndicationItem* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* itemDocument);
} _q_CWindows_CWeb_CSyndication_CISyndicationItemVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationItem
{
    _q_CWindows_CWeb_CSyndication_CISyndicationItemVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationItemFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationItem)(_q_CWindows_CWeb_CSyndication_CISyndicationItemFactory* pThis, HSTRING title, _q_CWindows_CWeb_CSyndication_CISyndicationContent* content, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CSyndication_CISyndicationItem** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationItemFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationItemFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationItemFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationLinkVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Length)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Length)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MediaType)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Relationship)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Relationship)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ResourceLanguage)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ResourceLanguage)(_q_CWindows_CWeb_CSyndication_CISyndicationLink* pThis, HSTRING value);
} _q_CWindows_CWeb_CSyndication_CISyndicationLinkVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationLink
{
    _q_CWindows_CWeb_CSyndication_CISyndicationLinkVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationLinkFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationLink)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CSyndication_CISyndicationLink** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationLinkEx)(_q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, HSTRING relationship, HSTRING title, HSTRING mediaType, UINT32 length, _q_CWindows_CWeb_CSyndication_CISyndicationLink** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationLinkFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationLinkFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationLinkFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NodeName)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NodeName)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_NodeNamespace)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NodeNamespace)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_NodeValue)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_NodeValue)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Language)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_BaseUri)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_BaseUri)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_AttributeExtensions)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ElementExtensions)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode** __pret);
    HRESULT (STDMETHODCALLTYPE* GetXmlDocument)(_q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _q_CWindows_CWeb_CSyndication_CSyndicationFormat format, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationNode
{
    _q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationNodeFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationNode)(_q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory* pThis, HSTRING nodeName, HSTRING nodeNamespace, HSTRING nodeValue, _q_CWindows_CWeb_CSyndication_CISyndicationNode** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationNodeFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationNodeFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationNodeFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationPersonVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Email)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Email)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Name)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(_q_CWindows_CWeb_CSyndication_CISyndicationPerson* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
} _q_CWindows_CWeb_CSyndication_CISyndicationPersonVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationPerson
{
    _q_CWindows_CWeb_CSyndication_CISyndicationPersonVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationPersonFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationPerson)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* pThis, HSTRING name, _q_CWindows_CWeb_CSyndication_CISyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationPersonEx)(_q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory* pThis, HSTRING name, HSTRING email, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _q_CWindows_CWeb_CSyndication_CISyndicationPerson** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationPersonFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationPersonFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationPersonFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationTextVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationText* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationText* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationText* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationText* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationText* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationText* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CWindows_CWeb_CSyndication_CISyndicationText* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Text)(_q_CWindows_CWeb_CSyndication_CISyndicationText* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Type)(_q_CWindows_CWeb_CSyndication_CISyndicationText* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Type)(_q_CWindows_CWeb_CSyndication_CISyndicationText* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Xml)(_q_CWindows_CWeb_CSyndication_CISyndicationText* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Xml)(_q_CWindows_CWeb_CSyndication_CISyndicationText* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* value);
} _q_CWindows_CWeb_CSyndication_CISyndicationTextVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationText
{
    _q_CWindows_CWeb_CSyndication_CISyndicationTextVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CSyndication_CISyndicationTextFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationText)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* pThis, HSTRING text, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateSyndicationTextEx)(_q_CWindows_CWeb_CSyndication_CISyndicationTextFactory* pThis, HSTRING text, _q_CWindows_CWeb_CSyndication_CSyndicationTextType type, _q_CWindows_CWeb_CSyndication_CISyndicationText** __pret);
} _q_CWindows_CWeb_CSyndication_CISyndicationTextFactoryVtbl;
struct _q_CWindows_CWeb_CSyndication_CISyndicationTextFactory
{
    _q_CWindows_CWeb_CSyndication_CISyndicationTextFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EventType)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* pThis, _q_CWindows_CUI_CCore_CCoreAcceleratorKeyEventType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_VirtualKey)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* pThis, _q_CWindows_CSystem_CVirtualKey* __pret);
    HRESULT (STDMETHODCALLTYPE* get_KeyStatus)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* pThis, _q_CWindows_CUI_CCore_CCorePhysicalKeyStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoutingStage)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* pThis, _q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyRoutingStage* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* pThis, boolean value);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Reason)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* pThis, _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason* __pret);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ProcessId)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_EnterpriseId)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsPrivateNetworkClientServerCapabilityEnabled)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWebViewControlAsync)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, INT64 hostWindowHandle, _q_CWindows_CFoundation_CRect bounds, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl** __pret);
    HRESULT (STDMETHODCALLTYPE* GetWebViewControls)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl** __pret);
    HRESULT (STDMETHODCALLTYPE* Terminate)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis);
    HRESULT (STDMETHODCALLTYPE* add_ProcessExited)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ProcessExited)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessVtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateWithOptions)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory* pThis, _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* processOptions, _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess** __pret);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactoryVtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactory
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptionsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_EnterpriseId)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_EnterpriseId)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_PrivateNetworkClientServerCapability)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* pThis, _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState value);
    HRESULT (STDMETHODCALLTYPE* get_PrivateNetworkClientServerCapability)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions* pThis, _q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcessCapabilityState* __pret);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptionsVtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptions
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcessOptionsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSiteVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Process)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Bounds)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _q_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsVisible)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsVisible)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis);
    HRESULT (STDMETHODCALLTYPE* MoveFocus)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusReason reason);
    HRESULT (STDMETHODCALLTYPE* add_MoveFocusRequested)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_MoveFocusRequested)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_AcceleratorKeyPressed)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_AcceleratorKeyPressed)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSiteVtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSiteVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* add_GotFocus)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_GotFocus)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LostFocus)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_LostFocus)(_q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2Vtbl;
struct _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2
{
    _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlSite2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Source)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* source);
    HRESULT (STDMETHODCALLTYPE* get_DocumentTitle)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanGoBack)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CanGoForward)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_DefaultBackgroundColor)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_DefaultBackgroundColor)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContainsFullScreenElement)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Settings)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CWeb_CUI_CIWebViewControlSettings** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeferredPermissionRequests)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest** __pret);
    HRESULT (STDMETHODCALLTYPE* GoForward)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis);
    HRESULT (STDMETHODCALLTYPE* GoBack)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis);
    HRESULT (STDMETHODCALLTYPE* Refresh)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis);
    HRESULT (STDMETHODCALLTYPE* Stop)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis);
    HRESULT (STDMETHODCALLTYPE* Navigate)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* source);
    HRESULT (STDMETHODCALLTYPE* NavigateToString)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, HSTRING text);
    HRESULT (STDMETHODCALLTYPE* NavigateToLocalStreamUri)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* source, _q_CWindows_CWeb_CIUriToStreamResolver* streamResolver);
    HRESULT (STDMETHODCALLTYPE* NavigateWithHttpRequestMessage)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage* requestMessage);
    HRESULT (STDMETHODCALLTYPE* InvokeScriptAsync)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, HSTRING scriptName, _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* arguments, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* CapturePreviewToStreamAsync)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream* stream, _q_CWindows_CFoundation_CIAsyncAction** __pret);
    HRESULT (STDMETHODCALLTYPE* CaptureSelectedContentToDataPackageAsync)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage** __pret);
    HRESULT (STDMETHODCALLTYPE* BuildLocalStreamUri)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, HSTRING contentIdentifier, HSTRING relativePath, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* GetDeferredPermissionRequestById)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, UINT32 id, _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest** result);
    HRESULT (STDMETHODCALLTYPE* add_NavigationStarting)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationStarting)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContentLoading)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ContentLoading)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DOMContentLoaded)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DOMContentLoaded)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NavigationCompleted)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_NavigationCompleted)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationStarting)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationStarting)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameContentLoading)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FrameContentLoading)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameDOMContentLoaded)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FrameDOMContentLoaded)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_FrameNavigationCompleted)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_FrameNavigationCompleted)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ScriptNotify)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ScriptNotify)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LongRunningScriptDetected)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_LongRunningScriptDetected)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnsafeContentWarningDisplaying)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UnsafeContentWarningDisplaying)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnviewableContentIdentified)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UnviewableContentIdentified)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_PermissionRequested)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_PermissionRequested)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_UnsupportedUriSchemeIdentified)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UnsupportedUriSchemeIdentified)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_NewWindowRequested)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_NewWindowRequested)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContainsFullScreenElementChanged)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ContainsFullScreenElementChanged)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_WebResourceRequested)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_WebResourceRequested)(_q_CWindows_CWeb_CUI_CIWebViewControl* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CWeb_CUI_CIWebViewControlVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControl
{
    _q_CWindows_CWeb_CUI_CIWebViewControlVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControl2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControl2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControl2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControl2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControl2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControl2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControl2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* AddInitializeScript)(_q_CWindows_CWeb_CUI_CIWebViewControl2* pThis, HSTRING script);
} _q_CWindows_CWeb_CUI_CIWebViewControl2Vtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControl2
{
    _q_CWindows_CWeb_CUI_CIWebViewControl2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PermissionType)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* pThis, _q_CWindows_CWeb_CUI_CWebViewControlPermissionType* __pret);
    HRESULT (STDMETHODCALLTYPE* Allow)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* pThis);
    HRESULT (STDMETHODCALLTYPE* Deny)(_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest* pThis);
} _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequestVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest
{
    _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequestVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ExecutionTime)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* get_StopPageScriptExecution)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_StopPageScriptExecution)(_q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* pThis, boolean value);
} _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsSuccess)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_WebErrorStatus)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* pThis, _q_CWindows_CWeb_CWebErrorStatus* __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Cancel)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Cancel)(_q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* pThis, boolean value);
} _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Referrer)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* pThis, boolean value);
} _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NewWindow)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl** __pret);
    HRESULT (STDMETHODCALLTYPE* put_NewWindow)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2* pThis, _q_CWindows_CFoundation_CIDeferral** __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2Vtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2
{
    _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PermissionType)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis, _q_CWindows_CWeb_CUI_CWebViewControlPermissionType* __pret);
    HRESULT (STDMETHODCALLTYPE* get_State)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis, _q_CWindows_CWeb_CUI_CWebViewControlPermissionState* __pret);
    HRESULT (STDMETHODCALLTYPE* Defer)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis);
    HRESULT (STDMETHODCALLTYPE* Allow)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis);
    HRESULT (STDMETHODCALLTYPE* Deny)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest* pThis);
} _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest
{
    _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_PermissionRequest)(_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest** __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Value)(_q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlSettingsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_IsJavaScriptEnabled)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsJavaScriptEnabled)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsIndexedDBEnabled)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsIndexedDBEnabled)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsScriptNotifyAllowed)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsScriptNotifyAllowed)(_q_CWindows_CWeb_CUI_CIWebViewControlSettings* pThis, boolean* __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlSettingsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlSettings
{
    _q_CWindows_CWeb_CUI_CIWebViewControlSettingsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Handled)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(_q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* pThis, boolean value);
} _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Referrer)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediaType)(_q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* pThis, HSTRING* __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* pThis, _q_CWindows_CFoundation_CIDeferral** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Request)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestMessage** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Response)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage* value);
    HRESULT (STDMETHODCALLTYPE* get_Response)(_q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgsVtbl;
struct _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs
{
    _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgsVtbl* lpVtbl;
};
// definitions for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIUnconstrainedTransferRequestResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUnconstrainedTransferRequestResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32 index, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32 index, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32 index, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRangeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRangeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRange
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferFileRangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPartVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPartVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPartVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPartVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPartVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPart
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferContentPartVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* asyncInfo, _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIDownloadOperation* sender, _q_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferRangesDownloadedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CDownloadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CBackgroundTransferRangesDownloadedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32 index, _q_CWindows_CWeb_CWebErrorStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, _q_CWindows_CWeb_CWebErrorStatus value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32 index, _q_CWindows_CWeb_CWebErrorStatus value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32 index, _q_CWindows_CWeb_CWebErrorStatus value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, _q_CWindows_CWeb_CWebErrorStatus value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CWebErrorStatus* items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CWebErrorStatus* items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatusVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatus
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CWebErrorStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatusVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatus
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CWebErrorStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatusVtbl;
struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatus
{
    _cg_CWindows_CFoundation_IReference_1__q_CWindows_CWeb_CWebErrorStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* asyncInfo, _q_CWindows_CNetworking_CBackgroundTransfer_CIUploadOperation* progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperation__q_CWindows_CNetworking_CBackgroundTransfer_CUploadOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_GUIDVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_GUID* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_GUID* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_GUID* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_GUID* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_GUID* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_GUID* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_GUIDVtbl;
struct _cg_CWindows_CFoundation_IReference_1_GUID
{
    _cg_CWindows_CFoundation_IReference_1_GUIDVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT8Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_UINT8* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_UINT8* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_UINT8* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_UINT8* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_UINT8* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_UINT8* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_UINT8Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_UINT8
{
    _cg_CWindows_CFoundation_IReference_1_UINT8Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsage
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityInterval
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectivityIntervalVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsage
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CAttributedNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsage
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CProviderNetworkUsageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* pThis, _q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatus
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileDeleteStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_boolean* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_boolean* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_boolean* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IReference_1_boolean
{
    _cg_CWindows_CFoundation_IReference_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_UINT32* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_UINT32
{
    _cg_CWindows_CFoundation_IReference_1_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_UINT64
{
    _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTimeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTimeVtbl;
struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime
{
    _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTimeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8Vtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT8Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionProfile** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUriVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUriVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUriVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUIDVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUIDVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUID
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_GUIDVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_INT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_INT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_INT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_INT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_INT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_INT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_INT32* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_INT32Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_INT32
{
    _cg_CWindows_CFoundation_IReference_1_INT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfileVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESim* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEventVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEventVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEventVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* asyncInfo, _q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* sender, _q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* sender, _q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher* sender, _q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* sender, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* sender, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_DOUBLEVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_DOUBLE* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_DOUBLE* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_DOUBLE* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_DOUBLE* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_DOUBLE* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_DOUBLE* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_DOUBLEVtbl;
struct _cg_CWindows_CFoundation_IReference_1_DOUBLE
{
    _cg_CWindows_CFoundation_IReference_1_DOUBLEVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpanVtbl;
struct _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpan
{
    _cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CTimeSpanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_INT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_INT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_INT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_INT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_INT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_INT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_INT64* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_INT64Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_INT64
{
    _cg_CWindows_CFoundation_IReference_1_INT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdmaVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdmaVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdmaVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsmVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsmVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsmVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLteVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLteVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLteVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdmaVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdmaVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdmaVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmtsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmtsVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmtsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNRVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNRVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNRVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32Vtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession* sender, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, boolean* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* pThis, _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChangeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChangeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinTypeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinTypeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinTypeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChangeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager* sender, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSarVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* sender, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager* sender, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32Vtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32Vtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostNameVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostNameVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostNameVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* pThis, _q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClientVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClientVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* pThis, _q_CWindows_CNetworking_CNetworkOperators_CIUssdReply** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation* pThis, _q_CWindows_CNetworking_CProximity_CIPeerWatcher* sender, _q_CWindows_CNetworking_CProximity_CIPeerInformation* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformation
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable* pThis, _q_CWindows_CNetworking_CProximity_CIPeerWatcher* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CProximity_CPeerWatcher_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs* pThis, _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel* sender, _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* pThis, _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_GetView;
    void* unneeded_Insert;
    void* unneeded_Remove;
    void* unneeded_Clear;
} _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* pThis, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdRegistrationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdRegistrationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance* pThis, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* sender, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceInstance* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstance
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceInstanceVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable* pThis, _q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CIDnssdServiceWatcher* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CServiceDiscovery_CDnssd_CDnssdServiceWatcher_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPair
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CEndpointPairVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _q_CWindows_CStorage_CStreams_CIOutputStream** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIDatagramSocket* sender, _q_CWindows_CNetworking_CSockets_CIDatagramSocketMessageReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CDatagramSocket__q_CWindows_CNetworking_CSockets_CDatagramSocketMessageReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIMessageWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CIWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIMessageWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* pThis, UINT32* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* asyncInfo, UINT32 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT32_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT32_UINT32* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT32_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32 index, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, HSTRING value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32 index, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32 index, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32 startIndex, UINT32 itemsLength, HSTRING* items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, UINT32 itemsLength, HSTRING* items);
} _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32 index, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32 index, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32 index, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* pThis, UINT32 itemsLength, _q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResultVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResultVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificateVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificateVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIMessageWebSocketMessageReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CMessageWebSocketMessageReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIServerMessageWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerMessageWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIServerStreamWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIWebSocketClosedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CServerStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketClosedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformation
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CNetworking_CSockets_CSocketActivityInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocketListener* sender, _q_CWindows_CNetworking_CSockets_CIStreamSocketListenerConnectionReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamSocketListener__q_CWindows_CNetworking_CSockets_CStreamSocketListenerConnectionReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CNetworking_CSockets_CIStreamWebSocket* sender, _q_CWindows_CNetworking_CSockets_CIWebSocketServerCustomValidationRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CSockets_CStreamWebSocket__q_CWindows_CNetworking_CSockets_CWebSocketServerCustomValidationRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs* pThis, _q_CWindows_CNetworking_CVpn_CIVpnChannel* sender, _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPrompt
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs* pThis, _q_CWindows_CNetworking_CVpn_CIVpnChannel* sender, _q_CWindows_CNetworking_CVpn_CIVpnChannelActivityStateChangedArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CVpn_CVpnChannel__q_CWindows_CNetworking_CVpn_CVpnChannelActivityStateChangedArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElementVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElement
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnCustomPromptElementVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredentialVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* pThis, _q_CWindows_CNetworking_CVpn_CIVpnCredential** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredentialVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredentialVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredentialVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnCredential* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredentialVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredential
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnCredentialVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostNameVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostNameVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostName
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CHostNameVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostNameVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostNameVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostName
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CHostNameVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnDomainNameInfo** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfo
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnDomainNameInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostNameVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32 index, _q_CWindows_CNetworking_CIHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CHostName** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, _q_CWindows_CNetworking_CIHostName* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32 index, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32 index, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, _q_CWindows_CNetworking_CIHostName* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CIHostName** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CIHostName** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostNameVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostName
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CHostNameVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUriVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32 index, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CFoundation_CUri** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32 index, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32 index, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CFoundation_CIUriRuntimeClass** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri* pThis, UINT32 itemsLength, _q_CWindows_CFoundation_CIUriRuntimeClass** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUriVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUri
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CFoundation_CUriVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* pThis, _q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatus
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CVpn_CVpnManagementErrorStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfile
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CIVpnProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnNamespaceInfo** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfo
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnNamespaceInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppIdVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnAppId** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, _q_CWindows_CNetworking_CVpn_CIVpnAppId* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnAppId* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnAppId* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, _q_CWindows_CNetworking_CVpn_CIVpnAppId* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnAppId** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnAppId** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppIdVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppId
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnAppIdVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppIdVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppIdVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppId
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnAppIdVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRouteVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, _q_CWindows_CNetworking_CVpn_CIVpnRoute* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, _q_CWindows_CNetworking_CVpn_CIVpnRoute* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnRoute** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnRoute** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRouteVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRoute
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnRouteVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRouteVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRouteVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRoute
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnRouteVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32 index, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CVpn_CIVpnTrafficFilter** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilterVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilterVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilterVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilter
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CVpn_CVpnTrafficFilterVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBufferVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CVpn_CVpnPacketBufferVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBufferVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBuffer
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CVpn_CVpnPacketBufferVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPair* sender, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairStateChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairStateChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplateVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplateVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairTemplate* sender, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveInboundEndpointPairCreatedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairTemplate__q_CWindows_CNetworking_CXboxLive_CXboxLiveInboundEndpointPairCreatedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveEndpointPairCreationResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResultVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResult
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairCreationResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPair
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveEndpointPairVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResultVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResult
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32 index, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32 index, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32 index, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetric
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServiceMetricVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32 index, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32 index, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32 index, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* pThis, UINT32 itemsLength, _q_CWindows_CNetworking_CXboxLive_CIXboxLiveDeviceAddress** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddressVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddressVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddress
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveDeviceAddressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResultVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResultVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResult
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CXboxLive_CXboxLiveQualityOfServicePrivatePayloadResultVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSessionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* pThis, _q_CWindows_CNetworking_CConnectivity_CIConnectionSession** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSessionVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSessionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSessionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSessionVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSession
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CConnectionSessionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifierVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifierVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifier
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CLanIdentifierVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* pThis, _q_CWindows_CNetworking_CConnectivity_CIProxyConfiguration** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfigurationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfigurationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfigurationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfigurationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfiguration
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CConnectivity_CProxyConfigurationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPairVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPair
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CNetworking_CEndpointPairVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPairVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPairVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPair
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CNetworking_CEndpointPairVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfile
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CConnectivity_CConnectionProfileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* pThis, IInspectable* sender, IInspectable* args);
} _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable
{
    _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs* pThis, IInspectable* sender, _q_CWindows_CNetworking_CProximity_CITriggeredConnectionStateChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CTriggeredConnectionStateChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs* pThis, IInspectable* sender, _q_CWindows_CNetworking_CProximity_CIConnectionRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CWindows_CNetworking_CProximity_CConnectionRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CNetworking_CProximity_CPeerInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* pThis, _q_CWindows_CNetworking_CSockets_CIStreamSocket** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocketVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocketVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocketVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CSockets_CStreamSocket* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocketVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocket
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CSockets_CStreamSocketVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs* pThis, IInspectable* sender, _q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs* args);
} _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgsVtbl;
struct _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs
{
    _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32 index, _q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, _q_CWindows_CData_CJson_CIJsonValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32 index, _q_CWindows_CData_CJson_CIJsonValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32 index, _q_CWindows_CData_CJson_CIJsonValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, _q_CWindows_CData_CJson_CIJsonValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CData_CJson_CIJsonValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue* pThis, UINT32 itemsLength, _q_CWindows_CData_CJson_CIJsonValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_GetView;
    void* unneeded_Insert;
    void* unneeded_Remove;
    void* unneeded_Clear;
} _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Key;
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
{
    _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* pThis, _q_CWindows_CData_CPdf_CIPdfDocument** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocumentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocumentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CPdf_CPdfDocument* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocumentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocument
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CPdf_CPdfDocumentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegment
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegment
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegment
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CSelectableWordSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* pThis, HSTRING* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING
{
    _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRING
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhoneme
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextPhonemeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordFormVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordFormVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordForm
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CAlternateWordFormVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegment
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CWordSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegment
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CText_CWordSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegment
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CText_CWordSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CData_CXml_CDom_CXmlDocument* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocument
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CData_CXml_CDom_CXmlDocumentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNode
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNode
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNode
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CData_CXml_CDom_CIXmlNodeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntry
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CAccessCache_CAccessListEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* pThis, _q_CWindows_CStorage_CIStorageItem** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItemVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CIStorageItem* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItemVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItem
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* pThis, _q_CWindows_CStorage_CIStorageFile** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFile* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* pThis, _q_CWindows_CStorage_CIStorageFolder** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageFolder* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs* pThis, _q_CWindows_CStorage_CAccessCache_CIStorageItemMostRecentlyUsedList* sender, _q_CWindows_CStorage_CAccessCache_CIItemRemovedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CAccessCache_CStorageItemMostRecentlyUsedList__q_CWindows_CStorage_CAccessCache_CItemRemovedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* pThis, _q_CWindows_CStorage_CIApplicationData** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationDataVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationDataVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationDataVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CApplicationData* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationDataVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationData
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CApplicationDataVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable* pThis, _q_CWindows_CStorage_CIApplicationData* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CApplicationData_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_add_MapChanged;
    void* unneeded_remove_MapChanged;
} _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_CCollections_IObservableMap_2_HSTRING_IInspectable* sender, _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* event);
} _cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IMapChangedEventHandler_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_CollectionChange;
    void* unneeded_get_Key;
} _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IMapChangedEventArgs_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_GetView;
    void* unneeded_Insert;
    void* unneeded_Remove;
    void* unneeded_Clear;
} _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_get_Key;
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainerVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainer
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__q_CWindows_CStorage_CApplicationDataContainerVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable* pThis, _q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStream** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransactionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* pThis, _q_CWindows_CStorage_CIStorageStreamTransaction** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransactionVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransactionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransactionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageStreamTransaction* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransactionVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransaction
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageStreamTransactionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* pThis, _q_CWindows_CStorage_CFileProperties_CIBasicProperties** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CBasicProperties* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicProperties
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CBasicPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnailVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* pThis, _q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnailVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnailVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnailVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnailVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnail
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CStorageItemThumbnailVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CIStorageItemInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFileInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CBulkAccess_CFolderInformationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItem
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedStateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* pThis, _q_CWindows_CStorage_CSearch_CIndexedState* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedStateVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedStateVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedStateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CSearch_CIndexedState* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedStateVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedState
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CSearch_CIndexedStateVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* asyncInfo, UINT32 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* pThis, _q_CWindows_CStorage_CFileProperties_CIMusicProperties** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicProperties
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CMusicPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* pThis, _q_CWindows_CStorage_CFileProperties_CIVideoProperties** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoProperties
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CVideoPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImagePropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* pThis, _q_CWindows_CStorage_CFileProperties_CIImageProperties** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImagePropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImagePropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImagePropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImagePropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImageProperties
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CImagePropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* pThis, _q_CWindows_CStorage_CFileProperties_CIDocumentProperties** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentPropertiesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentPropertiesVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CFileProperties_CDocumentPropertiesVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_GetView;
    void* unneeded_Insert;
    void* unneeded_Remove;
    void* unneeded_Clear;
} _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Key;
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFileVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFileVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFile
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CStorageFileVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs* pThis, _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* sender, _q_CWindows_CStorage_CPickers_CProvider_CIFileRemovedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CFileRemovedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs* pThis, _q_CWindows_CStorage_CPickers_CProvider_CIFileOpenPickerUI* sender, _q_CWindows_CStorage_CPickers_CProvider_CIPickerClosingEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileOpenPickerUI__q_CWindows_CStorage_CPickers_CProvider_CPickerClosingEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable* pThis, _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs* pThis, _q_CWindows_CStorage_CPickers_CProvider_CIFileSavePickerUI* sender, _q_CWindows_CStorage_CPickers_CProvider_CITargetFileRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CPickers_CProvider_CFileSavePickerUI__q_CWindows_CStorage_CPickers_CProvider_CTargetFileRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs* pThis, _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* sender, _q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable* pThis, _q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderErrorVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32 index, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32 index, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32 index, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* pThis, UINT32 itemsLength, _q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinitionVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinitionVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinitionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32 index, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32 index, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32 index, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* pThis, UINT32 itemsLength, _q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntry
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntry
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* pThis, UINT32* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_UINT32* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_UINT32Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectable
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContent
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CIIndexableContentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32 index, _q_CWindows_CStorage_CSearch_CSortEntry* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, _q_CWindows_CStorage_CSearch_CSortEntry value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32 index, _q_CWindows_CStorage_CSearch_CSortEntry value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32 index, _q_CWindows_CStorage_CSearch_CSortEntry value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, _q_CWindows_CStorage_CSearch_CSortEntry value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CStorage_CSearch_CSortEntry* items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry* pThis, UINT32 itemsLength, _q_CWindows_CStorage_CSearch_CSortEntry* items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntry
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntry
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CSearch_CSortEntryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable* pThis, _q_CWindows_CStorage_CSearch_CIStorageQueryResultBase* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CSearch_CIStorageQueryResultBase_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_GetView;
    void* unneeded_Insert;
    void* unneeded_Remove;
    void* unneeded_Clear;
} _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment
{
    _cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment* This, TrustLevel* trustLevel);
    void* unneeded_Lookup;
    void* unneeded_get_Size;
    void* unneeded_HasKey;
    void* unneeded_Split;
} _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegment
{
    _cg_CWindows_CFoundation_CCollections_IMapView_2_HSTRING__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CText_CTextSegmentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibraryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* pThis, _q_CWindows_CStorage_CIStorageLibrary** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibraryVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibraryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibraryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStorageLibrary* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibraryVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibrary
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStorageLibraryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* This, TrustLevel* trustLevel);
    void* unneeded_add_VectorChanged;
    void* unneeded_remove_VectorChanged;
} _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder* pThis, _cg_CWindows_CFoundation_CCollections_IObservableVector_1__q_CWindows_CStorage_CStorageFolder* sender, _q_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);
} _cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolderVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolder
{
    _cg_CWindows_CFoundation_CCollections_IVectorChangedEventHandler_1__q_CWindows_CStorage_CStorageFolderVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable* pThis, _q_CWindows_CStorage_CIStorageLibrary* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CStorageLibrary_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChange
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CStorageLibraryChangeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* pThis, _q_CWindows_CStorage_CProvider_CFileUpdateStatus* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__cg_CWindows_CFoundation_CCollections_IVector_1_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBufferVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBufferVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBufferVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBufferVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* pThis, _q_CWindows_CDevices_CGeolocation_CIGeopoint** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopointVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CDevices_CGeolocation_CGeopoint* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopointVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopoint
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CDevices_CGeolocation_CGeopointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* pThis, _q_CWindows_CStorage_CKnownFoldersAccessStatus* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatusVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CKnownFoldersAccessStatus* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatusVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatus
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CKnownFoldersAccessStatusVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfoVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfoVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* pThis, UINT64* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_UINT64_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_UINT64_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _q_CWindows_CWeb_CAtomPub_CIServiceDocument** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationItem** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationItem** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* asyncInfo, _q_CWindows_CWeb_CSyndication_CTransferProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This, TrustLevel* trustLevel);
    void* unneeded_put_Progress;
    void* unneeded_get_Progress;
    void* unneeded_put_Completed;
    void* unneeded_get_Completed;
    void* unneeded_GetResults;
} _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* asyncInfo, _q_CWindows_CWeb_CSyndication_CTransferProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress* pThis, _cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationFeed** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CWeb_CSyndication_CRetrievalProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategoryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategoryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttributeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationAttribute** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttributeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttributeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttributeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttributeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttributeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationNode** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationNode* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationNode* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationNode* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationNode* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationNode** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationNode** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNodeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspaceVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspaceVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspaceVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollectionVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollectionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs* pThis, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* sender, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* sender, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* sender, _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs* pThis, _q_CWindows_CWeb_CHttp_CFilters_CIHttpBaseProtocolFilter* sender, _q_CWindows_CWeb_CHttp_CFilters_CIHttpServerCustomValidationRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CFilters_CHttpBaseProtocolFilter__q_CWindows_CWeb_CHttp_CFilters_CHttpServerCustomValidationRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpNameValueHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpChallengeHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpConnectionOptionHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpContentCodingWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING* This, TrustLevel* trustLevel);
    void* unneeded_get_Key;
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl;
struct _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING
{
    _cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpCookiePairHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpExpectationHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32 index, _q_CWindows_CGlobalization_CILanguage** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, _q_CWindows_CGlobalization_CILanguage* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32 index, _q_CWindows_CGlobalization_CILanguage* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32 index, _q_CWindows_CGlobalization_CILanguage* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, _q_CWindows_CGlobalization_CILanguage* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CGlobalization_CILanguage** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage* pThis, UINT32 itemsLength, _q_CWindows_CGlobalization_CILanguage** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguage
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CGlobalization_CLanguageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguage
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CGlobalization_CLanguageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguage
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CGlobalization_CLanguageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguageVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguage
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CGlobalization_CLanguageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpLanguageRangeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpMediaTypeWithQualityHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CIHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, _q_CWindows_CWeb_CHttp_CIHttpMethod* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CIHttpMethod** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CIHttpMethod** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethod
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethod
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethod
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethod
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpMethodVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpProductInfoHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32 index, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValue
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHeaders_CHttpTransferCodingHeaderValueVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, HSTRING* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CStorage_CStreams_CIInputStream** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, HSTRING* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpRequestResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpGetStringResult** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookie
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookie
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CHttpCookieVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContent
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CWeb_CHttp_CIHttpContentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContentVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContent
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CWeb_CHttp_CIHttpContentVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPersonVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationPerson* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationPerson* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationPerson* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationPerson* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationPerson** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationPerson** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPersonVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPersonVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPersonVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPersonVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPersonVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationCategory** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationCategory* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationCategory* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationCategory* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationCategory* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationCategory** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationCategory** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategoryVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategoryVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationItem** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationItem* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationItem** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationItem** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItemVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItemVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItemVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItemVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLinkVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationLink** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Size)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* GetView)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink** __pret);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationLink* value, UINT32* index, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* SetAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationLink* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32 index, _q_CWindows_CWeb_CSyndication_CISyndicationLink* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, _q_CWindows_CWeb_CSyndication_CISyndicationLink* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis);
    HRESULT (STDMETHODCALLTYPE* Clear)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis);
    HRESULT (STDMETHODCALLTYPE* GetMany)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32 startIndex, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationLink** items, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* pThis, UINT32 itemsLength, _q_CWindows_CWeb_CSyndication_CISyndicationLink** items);
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLinkVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLinkVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLinkVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLinkVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLinkVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequestVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequestVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequestVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* pThis, _q_CWindows_CApplicationModel_CDataTransfer_CIDataPackage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlMoveFocusRequestedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlMoveFocusRequestedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlAcceleratorKeyPressedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl__q_CWindows_CWeb_CUI_CInterop_CWebViewControlAcceleratorKeyPressedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControl_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* pThis, _q_CWindows_CWeb_CUI_CIWebViewControl** __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControl
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CInterop_CWebViewControlVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable* pThis, _q_CWindows_CWeb_CUI_CInterop_CIWebViewControlProcess* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CInterop_CWebViewControlProcess_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* sender, _q_CWindows_CUI_CNotifications_CIToastDismissedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastDismissedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* sender, IInspectable* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectableVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectable
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* sender, _q_CWindows_CUI_CNotifications_CIToastFailedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotification__q_CWindows_CUI_CNotifications_CToastFailedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotificationVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotification
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CUI_CNotifications_CScheduledToastNotificationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs* pThis, _q_CWindows_CUI_CNotifications_CIToastNotifier* sender, _q_CWindows_CUI_CNotifications_CIScheduledToastNotificationShowingEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CUI_CNotifications_CToastNotifier__q_CWindows_CUI_CNotifications_CScheduledToastNotificationShowingEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperationVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPointVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPointVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPoint
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CWindows_CFoundation_CPointVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl* lpVtbl;
};
