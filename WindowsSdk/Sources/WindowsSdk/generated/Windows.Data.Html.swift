// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.Data.Html {
// type: Windows.Data.Html.HtmlUtilities
// static class
public class HtmlUtilities
{
    private struct _IHtmlUtilities {
        static var x : IHtmlUtilities =
            try! RoGetActivationFactory("Windows.Data.Html.HtmlUtilities")
    }
    public static var HtmlUtilities : IHtmlUtilities {
        _IHtmlUtilities.x
    }
    public static func ConvertToText(html : Swift.String) throws -> Optional<Swift.String> {
        return try HtmlUtilities.ConvertToText(html: html);
    }
}

// type: Windows.Data.Html.IHtmlUtilities
// interface type
open class IHtmlUtilities
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xfec00add, Data2: 0x2399, Data3 : 0x4fac, Data4 : (0xb5, 0xa7, 0x05, 0xe9, 0xac, 0xd7, 0x18, 0x1d)) }
    // System.String ConvertToText(System.String)
    private func _n_ConvertToText(_ html : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CData_CHtml_CIHtmlUtilities.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ConvertToText(pThis, html, __presult))
        }
    }
    public func ConvertToText(html : Swift.String) throws -> Swift.String {
        let __hstr_html = try HString(html);
        return try withExtendedLifetime(__hstr_html) {
        var __result : Optional<HSTRING> = nil;
        try self._n_ConvertToText(__hstr_html.Raw(), &__result);
        return Swift.String(from: __result);
        }
    }
} // IHtmlUtilities


}
