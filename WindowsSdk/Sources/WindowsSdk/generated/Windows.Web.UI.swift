// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.Web.UI {
// type: Windows.Web.UI.IWebViewControl
// interface type
open class IWebViewControl
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3f921316, Data2: 0xbc70, Data3 : 0x4bda, Data4 : (0x91, 0x36, 0xc9, 0x43, 0x70, 0x89, 0x9f, 0xab)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Source()
    private func _n_get_Source(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Source(pThis, __presult))
        }
    }
    public func get_Source() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Source(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] void put_Source(Windows.Foundation.Uri)
    private func _n_put_Source(_ source : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Source(pThis, source))
        }
    }
    public func put_Source(source : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Void {
        try self._n_put_Source(RawPointer(source));
    }
    // [IsSpecialName] System.String get_DocumentTitle()
    private func _n_get_DocumentTitle(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DocumentTitle(pThis, __presult))
        }
    }
    public func get_DocumentTitle() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_DocumentTitle(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] bool get_CanGoBack()
    private func _n_get_CanGoBack(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CanGoBack(pThis, __presult))
        }
    }
    public func get_CanGoBack() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_CanGoBack(&__result);
        return __result;
    }
    // [IsSpecialName] bool get_CanGoForward()
    private func _n_get_CanGoForward(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CanGoForward(pThis, __presult))
        }
    }
    public func get_CanGoForward() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_CanGoForward(&__result);
        return __result;
    }
    // [IsSpecialName] void put_DefaultBackgroundColor(Windows.UI.Color)
    private func _n_put_DefaultBackgroundColor(_ value : _q_CWindows_CUI_CColor) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_DefaultBackgroundColor(pThis, value))
        }
    }
    public func put_DefaultBackgroundColor(value : Windows.UI.Color) throws -> Void {
        try self._n_put_DefaultBackgroundColor(value);
    }
    // [IsSpecialName] Windows.UI.Color get_DefaultBackgroundColor()
    private func _n_get_DefaultBackgroundColor(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DefaultBackgroundColor(pThis, __presult))
        }
    }
    public func get_DefaultBackgroundColor() throws -> Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DefaultBackgroundColor(&__result);
        return __result;
    }
    // [IsSpecialName] bool get_ContainsFullScreenElement()
    private func _n_get_ContainsFullScreenElement(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContainsFullScreenElement(pThis, __presult))
        }
    }
    public func get_ContainsFullScreenElement() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_ContainsFullScreenElement(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.UI.WebViewControlSettings get_Settings()
    private func _n_get_Settings(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControlSettings>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Settings(pThis, __presult))
        }
    }
    public func get_Settings() throws -> Optional<Windows.Web.UI.IWebViewControlSettings> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControlSettings>> = nil;
        try self._n_get_Settings(&__result);
        return Windows.Web.UI.IWebViewControlSettings(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVectorView<Windows.Web.UI.WebViewControlDeferredPermissionRequest> get_DeferredPermissionRequests()
    private func _n_get_DeferredPermissionRequests(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeferredPermissionRequests(pThis, __presult))
        }
    }
    public func get_DeferredPermissionRequests() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest>> = nil;
        try self._n_get_DeferredPermissionRequests(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest(consuming: __result);
    }
    // void GoForward()
    private func _n_GoForward() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GoForward(pThis))
        }
    }
    public func GoForward() throws -> Void {
        try self._n_GoForward();
    }
    // void GoBack()
    private func _n_GoBack() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GoBack(pThis))
        }
    }
    public func GoBack() throws -> Void {
        try self._n_GoBack();
    }
    // void Refresh()
    private func _n_Refresh() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Refresh(pThis))
        }
    }
    public func Refresh() throws -> Void {
        try self._n_Refresh();
    }
    // void Stop()
    private func _n_Stop() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Stop(pThis))
        }
    }
    public func Stop() throws -> Void {
        try self._n_Stop();
    }
    // void Navigate(Windows.Foundation.Uri)
    private func _n_Navigate(_ source : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Navigate(pThis, source))
        }
    }
    public func Navigate(source : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Void {
        try self._n_Navigate(RawPointer(source));
    }
    // void NavigateToString(System.String)
    private func _n_NavigateToString(_ text : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.NavigateToString(pThis, text))
        }
    }
    public func NavigateToString(text : Optional<Swift.String>) throws -> Void {
        let __hstr_text = try HString(text!);
        return try withExtendedLifetime(__hstr_text) {
        try self._n_NavigateToString(__hstr_text.Raw());
        }
    }
    // void NavigateToLocalStreamUri(Windows.Foundation.Uri, Windows.Web.IUriToStreamResolver)
    private func _n_NavigateToLocalStreamUri(_ source : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ streamResolver : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CIUriToStreamResolver>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.NavigateToLocalStreamUri(pThis, source, streamResolver))
        }
    }
    public func NavigateToLocalStreamUri(source : Optional<Windows.Foundation.IUriRuntimeClass>, streamResolver : Optional<Windows.Web.IUriToStreamResolver>) throws -> Void {
        try self._n_NavigateToLocalStreamUri(RawPointer(source), RawPointer(streamResolver));
    }
    // void NavigateWithHttpRequestMessage(Windows.Web.Http.HttpRequestMessage)
    private func _n_NavigateWithHttpRequestMessage(_ requestMessage : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.NavigateWithHttpRequestMessage(pThis, requestMessage))
        }
    }
    public func NavigateWithHttpRequestMessage(requestMessage : Optional<Windows.Web.Http.IHttpRequestMessage>) throws -> Void {
        try self._n_NavigateWithHttpRequestMessage(RawPointer(requestMessage));
    }
    // Windows.Foundation.IAsyncOperation<System.String> InvokeScriptAsync(System.String, Windows.Foundation.Collections.IIterable<System.String>)
    private func _n_InvokeScriptAsync(_ scriptName : Optional<HSTRING>, _ arguments : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InvokeScriptAsync(pThis, scriptName, arguments, __presult))
        }
    }
    public func InvokeScriptAsync(scriptName : Optional<Swift.String>, arguments : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1_HSTRING> {
        let __hstr_scriptName = try HString(scriptName!);
        return try withExtendedLifetime(__hstr_scriptName) {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1_HSTRING>> = nil;
        try self._n_InvokeScriptAsync(__hstr_scriptName.Raw(), RawPointer(arguments), &__result);
        return ClosedGenerics.IAsyncOperation_1_HSTRING(consuming: __result);
        }
    }
    public func InvokeScript(scriptName : Optional<Swift.String>, arguments : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Swift.String {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.InvokeScriptAsync(scriptName: scriptName, arguments: arguments)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncAction CapturePreviewToStreamAsync(Windows.Storage.Streams.IRandomAccessStream)
    private func _n_CapturePreviewToStreamAsync(_ stream : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIRandomAccessStream>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIAsyncAction>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CapturePreviewToStreamAsync(pThis, stream, __presult))
        }
    }
    public func CapturePreviewToStreamAsync(stream : Optional<Windows.Storage.Streams.IRandomAccessStream>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIAsyncAction>> = nil;
        try self._n_CapturePreviewToStreamAsync(RawPointer(stream), &__result);
        return Windows.Foundation.IAsyncAction(consuming: __result);
    }
    public func CapturePreviewToStream(stream : Optional<Windows.Storage.Streams.IRandomAccessStream>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.CapturePreviewToStreamAsync(stream: stream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackage> CaptureSelectedContentToDataPackageAsync()
    private func _n_CaptureSelectedContentToDataPackageAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CaptureSelectedContentToDataPackageAsync(pThis, __presult))
        }
    }
    public func CaptureSelectedContentToDataPackageAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage>> = nil;
        try self._n_CaptureSelectedContentToDataPackageAsync(&__result);
        return ClosedGenerics.IAsyncOperation_1__q_CWindows_CApplicationModel_CDataTransfer_CDataPackage(consuming: __result);
    }
    public func CaptureSelectedContentToDataPackage() async throws -> Optional<Windows.ApplicationModel.DataTransfer.IDataPackage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.CaptureSelectedContentToDataPackageAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.Uri BuildLocalStreamUri(System.String, System.String)
    private func _n_BuildLocalStreamUri(_ contentIdentifier : Optional<HSTRING>, _ relativePath : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.BuildLocalStreamUri(pThis, contentIdentifier, relativePath, __presult))
        }
    }
    public func BuildLocalStreamUri(contentIdentifier : Optional<Swift.String>, relativePath : Optional<Swift.String>) throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        let __hstr_contentIdentifier = try HString(contentIdentifier!);
        return try withExtendedLifetime(__hstr_contentIdentifier) {
        let __hstr_relativePath = try HString(relativePath!);
        return try withExtendedLifetime(__hstr_relativePath) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_BuildLocalStreamUri(__hstr_contentIdentifier.Raw(), __hstr_relativePath.Raw(), &__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
        }
        }
    }
    // void GetDeferredPermissionRequestById(System.UInt32, ref Windows.Web.UI.WebViewControlDeferredPermissionRequest)
    private func _n_GetDeferredPermissionRequestById(_ id : UINT32, _ result : UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest>>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferredPermissionRequestById(pThis, id, result))
        }
    }
    public func GetDeferredPermissionRequestById(id : Swift.UInt32, result : inout Optional<Windows.Web.UI.IWebViewControlDeferredPermissionRequest>) throws -> Void {
            var _tmp_out_result: Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest>> = nil;
        try self._n_GetDeferredPermissionRequestById(id, &_tmp_out_result);
            result = Windows.Web.UI.IWebViewControlDeferredPermissionRequest(consuming: _tmp_out_result);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_NavigationStarting(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlNavigationStartingEventArgs>)
    private func _n_add_NavigationStarting(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_NavigationStarting(pThis, handler, __presult))
        }
    }
    public func add_NavigationStarting(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_NavigationStarting(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_NavigationStarting(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_NavigationStarting(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_NavigationStarting(pThis, token))
        }
    }
    public func remove_NavigationStarting(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_NavigationStarting(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_ContentLoading(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlContentLoadingEventArgs>)
    private func _n_add_ContentLoading(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_ContentLoading(pThis, handler, __presult))
        }
    }
    public func add_ContentLoading(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_ContentLoading(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_ContentLoading(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_ContentLoading(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ContentLoading(pThis, token))
        }
    }
    public func remove_ContentLoading(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_ContentLoading(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_DOMContentLoaded(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlDOMContentLoadedEventArgs>)
    private func _n_add_DOMContentLoaded(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_DOMContentLoaded(pThis, handler, __presult))
        }
    }
    public func add_DOMContentLoaded(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_DOMContentLoaded(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_DOMContentLoaded(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_DOMContentLoaded(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_DOMContentLoaded(pThis, token))
        }
    }
    public func remove_DOMContentLoaded(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_DOMContentLoaded(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_NavigationCompleted(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlNavigationCompletedEventArgs>)
    private func _n_add_NavigationCompleted(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_NavigationCompleted(pThis, handler, __presult))
        }
    }
    public func add_NavigationCompleted(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_NavigationCompleted(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_NavigationCompleted(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_NavigationCompleted(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_NavigationCompleted(pThis, token))
        }
    }
    public func remove_NavigationCompleted(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_NavigationCompleted(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_FrameNavigationStarting(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlNavigationStartingEventArgs>)
    private func _n_add_FrameNavigationStarting(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_FrameNavigationStarting(pThis, handler, __presult))
        }
    }
    public func add_FrameNavigationStarting(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationStartingEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_FrameNavigationStarting(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_FrameNavigationStarting(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_FrameNavigationStarting(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FrameNavigationStarting(pThis, token))
        }
    }
    public func remove_FrameNavigationStarting(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_FrameNavigationStarting(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_FrameContentLoading(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlContentLoadingEventArgs>)
    private func _n_add_FrameContentLoading(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_FrameContentLoading(pThis, handler, __presult))
        }
    }
    public func add_FrameContentLoading(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlContentLoadingEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_FrameContentLoading(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_FrameContentLoading(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_FrameContentLoading(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FrameContentLoading(pThis, token))
        }
    }
    public func remove_FrameContentLoading(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_FrameContentLoading(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_FrameDOMContentLoaded(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlDOMContentLoadedEventArgs>)
    private func _n_add_FrameDOMContentLoaded(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_FrameDOMContentLoaded(pThis, handler, __presult))
        }
    }
    public func add_FrameDOMContentLoaded(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlDOMContentLoadedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_FrameDOMContentLoaded(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_FrameDOMContentLoaded(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_FrameDOMContentLoaded(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FrameDOMContentLoaded(pThis, token))
        }
    }
    public func remove_FrameDOMContentLoaded(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_FrameDOMContentLoaded(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_FrameNavigationCompleted(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlNavigationCompletedEventArgs>)
    private func _n_add_FrameNavigationCompleted(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_FrameNavigationCompleted(pThis, handler, __presult))
        }
    }
    public func add_FrameNavigationCompleted(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNavigationCompletedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_FrameNavigationCompleted(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_FrameNavigationCompleted(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_FrameNavigationCompleted(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FrameNavigationCompleted(pThis, token))
        }
    }
    public func remove_FrameNavigationCompleted(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_FrameNavigationCompleted(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_ScriptNotify(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlScriptNotifyEventArgs>)
    private func _n_add_ScriptNotify(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_ScriptNotify(pThis, handler, __presult))
        }
    }
    public func add_ScriptNotify(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlScriptNotifyEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_ScriptNotify(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_ScriptNotify(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_ScriptNotify(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ScriptNotify(pThis, token))
        }
    }
    public func remove_ScriptNotify(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_ScriptNotify(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_LongRunningScriptDetected(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlLongRunningScriptDetectedEventArgs>)
    private func _n_add_LongRunningScriptDetected(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_LongRunningScriptDetected(pThis, handler, __presult))
        }
    }
    public func add_LongRunningScriptDetected(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlLongRunningScriptDetectedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_LongRunningScriptDetected(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_LongRunningScriptDetected(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_LongRunningScriptDetected(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_LongRunningScriptDetected(pThis, token))
        }
    }
    public func remove_LongRunningScriptDetected(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_LongRunningScriptDetected(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_UnsafeContentWarningDisplaying(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,System.Object>)
    private func _n_add_UnsafeContentWarningDisplaying(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_UnsafeContentWarningDisplaying(pThis, handler, __presult))
        }
    }
    public func add_UnsafeContentWarningDisplaying(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_UnsafeContentWarningDisplaying(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_UnsafeContentWarningDisplaying(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_UnsafeContentWarningDisplaying(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_UnsafeContentWarningDisplaying(pThis, token))
        }
    }
    public func remove_UnsafeContentWarningDisplaying(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_UnsafeContentWarningDisplaying(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_UnviewableContentIdentified(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlUnviewableContentIdentifiedEventArgs>)
    private func _n_add_UnviewableContentIdentified(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_UnviewableContentIdentified(pThis, handler, __presult))
        }
    }
    public func add_UnviewableContentIdentified(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnviewableContentIdentifiedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_UnviewableContentIdentified(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_UnviewableContentIdentified(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_UnviewableContentIdentified(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_UnviewableContentIdentified(pThis, token))
        }
    }
    public func remove_UnviewableContentIdentified(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_UnviewableContentIdentified(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_PermissionRequested(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlPermissionRequestedEventArgs>)
    private func _n_add_PermissionRequested(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_PermissionRequested(pThis, handler, __presult))
        }
    }
    public func add_PermissionRequested(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlPermissionRequestedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_PermissionRequested(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_PermissionRequested(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_PermissionRequested(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PermissionRequested(pThis, token))
        }
    }
    public func remove_PermissionRequested(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_PermissionRequested(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_UnsupportedUriSchemeIdentified(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs>)
    private func _n_add_UnsupportedUriSchemeIdentified(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_UnsupportedUriSchemeIdentified(pThis, handler, __presult))
        }
    }
    public func add_UnsupportedUriSchemeIdentified(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlUnsupportedUriSchemeIdentifiedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_UnsupportedUriSchemeIdentified(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_UnsupportedUriSchemeIdentified(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_UnsupportedUriSchemeIdentified(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_UnsupportedUriSchemeIdentified(pThis, token))
        }
    }
    public func remove_UnsupportedUriSchemeIdentified(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_UnsupportedUriSchemeIdentified(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_NewWindowRequested(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlNewWindowRequestedEventArgs>)
    private func _n_add_NewWindowRequested(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_NewWindowRequested(pThis, handler, __presult))
        }
    }
    public func add_NewWindowRequested(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlNewWindowRequestedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_NewWindowRequested(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_NewWindowRequested(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_NewWindowRequested(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_NewWindowRequested(pThis, token))
        }
    }
    public func remove_NewWindowRequested(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_NewWindowRequested(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_ContainsFullScreenElementChanged(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,System.Object>)
    private func _n_add_ContainsFullScreenElementChanged(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_ContainsFullScreenElementChanged(pThis, handler, __presult))
        }
    }
    public func add_ContainsFullScreenElementChanged(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl_IInspectable>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_ContainsFullScreenElementChanged(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_ContainsFullScreenElementChanged(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_ContainsFullScreenElementChanged(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ContainsFullScreenElementChanged(pThis, token))
        }
    }
    public func remove_ContainsFullScreenElementChanged(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_ContainsFullScreenElementChanged(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_WebResourceRequested(Windows.Foundation.TypedEventHandler<Windows.Web.UI.IWebViewControl,Windows.Web.UI.WebViewControlWebResourceRequestedEventArgs>)
    private func _n_add_WebResourceRequested(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_WebResourceRequested(pThis, handler, __presult))
        }
    }
    public func add_WebResourceRequested(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CUI_CIWebViewControl__q_CWindows_CWeb_CUI_CWebViewControlWebResourceRequestedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_WebResourceRequested(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_WebResourceRequested(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_WebResourceRequested(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_WebResourceRequested(pThis, token))
        }
    }
    public func remove_WebResourceRequested(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_WebResourceRequested(token);
    }
    public var CanGoBack : boolean {
        get throws {
            return try get_CanGoBack();
        }
    }
    public var CanGoForward : boolean {
        get throws {
            return try get_CanGoForward();
        }
    }
    public var ContainsFullScreenElement : boolean {
        get throws {
            return try get_ContainsFullScreenElement();
        }
    }
    public var DefaultBackgroundColor : Windows.UI.Color {
        get throws {
            return try get_DefaultBackgroundColor();
        }
    }
    public var DeferredPermissionRequests : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CUI_CWebViewControlDeferredPermissionRequest> {
        get throws {
            return try get_DeferredPermissionRequests();
        }
    }
    public var DocumentTitle : Swift.String {
        get throws {
            return try get_DocumentTitle();
        }
    }
    public var Settings : Optional<Windows.Web.UI.IWebViewControlSettings> {
        get throws {
            return try get_Settings();
        }
    }
    public var Source : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Source();
        }
    }
} // IWebViewControl


// type: Windows.Web.UI.IWebViewControl2
// interface type
open class IWebViewControl2
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x4d3c06f9, Data2: 0xc8df, Data3 : 0x41cc, Data4 : (0x8b, 0xd5, 0x2a, 0x94, 0x7b, 0x20, 0x45, 0x03)) }
    // void AddInitializeScript(System.String)
    private func _n_AddInitializeScript(_ script : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControl2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.AddInitializeScript(pThis, script))
        }
    }
    public func AddInitializeScript(script : Optional<Swift.String>) throws -> Void {
        let __hstr_script = try HString(script!);
        return try withExtendedLifetime(__hstr_script) {
        try self._n_AddInitializeScript(__hstr_script.Raw());
        }
    }
} // IWebViewControl2


// type: Windows.Web.UI.IWebViewControlContentLoadingEventArgs
// interface type
open class IWebViewControlContentLoadingEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9a3fccb2, Data2: 0xb9bb, Data3 : 0x404b, Data4 : (0xa2, 0x2b, 0x66, 0xdc, 0xcd, 0x12, 0x50, 0xc6)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlContentLoadingEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlContentLoadingEventArgs


// type: Windows.Web.UI.IWebViewControlDOMContentLoadedEventArgs
// interface type
open class IWebViewControlDOMContentLoadedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbe8bc008, Data2: 0x9541, Data3 : 0x4545, Data4 : (0x9f, 0xf2, 0x2d, 0xf5, 0x85, 0xb2, 0x9f, 0x7d)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlDOMContentLoadedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlDOMContentLoadedEventArgs


// type: Windows.Web.UI.IWebViewControlDeferredPermissionRequest
// interface type
open class IWebViewControlDeferredPermissionRequest
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2ce349e0, Data2: 0xd759, Data3 : 0x445c, Data4 : (0x99, 0x26, 0x89, 0x95, 0x29, 0x8f, 0x15, 0x2b)) }
    // [IsSpecialName] System.UInt32 get_Id()
    private func _n_get_Id(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, __presult))
        }
    }
    public func get_Id() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Id(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.UI.WebViewControlPermissionType get_PermissionType()
    private func _n_get_PermissionType(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CWebViewControlPermissionType>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PermissionType(pThis, __presult))
        }
    }
    public func get_PermissionType() throws -> Windows.Web.UI.WebViewControlPermissionType {
        var __result : _q_CWindows_CWeb_CUI_CWebViewControlPermissionType = _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Geolocation;
        try self._n_get_PermissionType(&__result);
        return __result;
    }
    // void Allow()
    private func _n_Allow() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Allow(pThis))
        }
    }
    public func Allow() throws -> Void {
        try self._n_Allow();
    }
    // void Deny()
    private func _n_Deny() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlDeferredPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Deny(pThis))
        }
    }
    public func Deny() throws -> Void {
        try self._n_Deny();
    }
    public var Id : Swift.UInt32 {
        get throws {
            return try get_Id();
        }
    }
    public var PermissionType : Windows.Web.UI.WebViewControlPermissionType {
        get throws {
            return try get_PermissionType();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlDeferredPermissionRequest


// type: Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs
// interface type
open class IWebViewControlLongRunningScriptDetectedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2a6e5bba, Data2: 0x98b4, Data3 : 0x45bc, Data4 : (0xbb, 0xeb, 0x0f, 0x69, 0xce, 0x49, 0xc5, 0x99)) }
    // [IsSpecialName] Windows.Foundation.TimeSpan get_ExecutionTime()
    private func _n_get_ExecutionTime(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CTimeSpan>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExecutionTime(pThis, __presult))
        }
    }
    public func get_ExecutionTime() throws -> Windows.Foundation.TimeSpan {
        var __result : _q_CWindows_CFoundation_CTimeSpan = _q_CWindows_CFoundation_CTimeSpan(Duration: 0);
        try self._n_get_ExecutionTime(&__result);
        return __result;
    }
    // [IsSpecialName] bool get_StopPageScriptExecution()
    private func _n_get_StopPageScriptExecution(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_StopPageScriptExecution(pThis, __presult))
        }
    }
    public func get_StopPageScriptExecution() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_StopPageScriptExecution(&__result);
        return __result;
    }
    // [IsSpecialName] void put_StopPageScriptExecution(bool)
    private func _n_put_StopPageScriptExecution(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlLongRunningScriptDetectedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_StopPageScriptExecution(pThis, value))
        }
    }
    public func put_StopPageScriptExecution(value : boolean) throws -> Void {
        try self._n_put_StopPageScriptExecution(value);
    }
    public var ExecutionTime : Windows.Foundation.TimeSpan {
        get throws {
            return try get_ExecutionTime();
        }
    }
    public var StopPageScriptExecution : boolean {
        get throws {
            return try get_StopPageScriptExecution();
        }
    }
} // IWebViewControlLongRunningScriptDetectedEventArgs


// type: Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs
// interface type
open class IWebViewControlNavigationCompletedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x20409918, Data2: 0x4a15, Data3 : 0x4c46, Data4 : (0xa5, 0x5d, 0xf7, 0x9e, 0xdb, 0x0b, 0xde, 0x8b)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] bool get_IsSuccess()
    private func _n_get_IsSuccess(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsSuccess(pThis, __presult))
        }
    }
    public func get_IsSuccess() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_IsSuccess(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.WebErrorStatus get_WebErrorStatus()
    private func _n_get_WebErrorStatus(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CWebErrorStatus>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNavigationCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_WebErrorStatus(pThis, __presult))
        }
    }
    public func get_WebErrorStatus() throws -> Windows.Web.WebErrorStatus {
        var __result : _q_CWindows_CWeb_CWebErrorStatus = _q_CWindows_CWeb_CWebErrorStatus_Unknown;
        try self._n_get_WebErrorStatus(&__result);
        return __result;
    }
    public var IsSuccess : boolean {
        get throws {
            return try get_IsSuccess();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
    public var WebErrorStatus : Windows.Web.WebErrorStatus {
        get throws {
            return try get_WebErrorStatus();
        }
    }
} // IWebViewControlNavigationCompletedEventArgs


// type: Windows.Web.UI.IWebViewControlNavigationStartingEventArgs
// interface type
open class IWebViewControlNavigationStartingEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0c9057c5, Data2: 0x0a08, Data3 : 0x41c7, Data4 : (0x86, 0x3b, 0x71, 0xe3, 0xa9, 0x54, 0x91, 0x37)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] bool get_Cancel()
    private func _n_get_Cancel(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cancel(pThis, __presult))
        }
    }
    public func get_Cancel() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Cancel(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Cancel(bool)
    private func _n_put_Cancel(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNavigationStartingEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Cancel(pThis, value))
        }
    }
    public func put_Cancel(value : boolean) throws -> Void {
        try self._n_put_Cancel(value);
    }
    public var Cancel : boolean {
        get throws {
            return try get_Cancel();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlNavigationStartingEventArgs


// type: Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs
// interface type
open class IWebViewControlNewWindowRequestedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3df44bbb, Data2: 0xa124, Data3 : 0x46d5, Data4 : (0xa0, 0x83, 0xd0, 0x2c, 0xac, 0xdf, 0xf5, 0xad)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Uri get_Referrer()
    private func _n_get_Referrer(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Referrer(pThis, __presult))
        }
    }
    public func get_Referrer() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Referrer(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] bool get_Handled()
    private func _n_get_Handled(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Handled(pThis, __presult))
        }
    }
    public func get_Handled() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Handled(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Handled(bool)
    private func _n_put_Handled(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Handled(pThis, value))
        }
    }
    public func put_Handled(value : boolean) throws -> Void {
        try self._n_put_Handled(value);
    }
    public var Handled : boolean {
        get throws {
            return try get_Handled();
        }
    }
    public var Referrer : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Referrer();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlNewWindowRequestedEventArgs


// type: Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs2
// interface type
open class IWebViewControlNewWindowRequestedEventArgs2
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb53c5ca6, Data2: 0x2aae, Data3 : 0x4bfc, Data4 : (0x92, 0xb9, 0xc3, 0x0e, 0x92, 0xb4, 0x80, 0x98)) }
    // [IsSpecialName] Windows.Web.UI.IWebViewControl get_NewWindow()
    private func _n_get_NewWindow(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControl>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewWindow(pThis, __presult))
        }
    }
    public func get_NewWindow() throws -> Optional<Windows.Web.UI.IWebViewControl> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControl>> = nil;
        try self._n_get_NewWindow(&__result);
        return Windows.Web.UI.IWebViewControl(consuming: __result);
    }
    // [IsSpecialName] void put_NewWindow(Windows.Web.UI.IWebViewControl)
    private func _n_put_NewWindow(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControl>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_NewWindow(pThis, value))
        }
    }
    public func put_NewWindow(value : Optional<Windows.Web.UI.IWebViewControl>) throws -> Void {
        try self._n_put_NewWindow(RawPointer(value));
    }
    // Windows.Foundation.Deferral GetDeferral()
    private func _n_GetDeferral(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIDeferral>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlNewWindowRequestedEventArgs2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, __presult))
        }
    }
    public func GetDeferral() throws -> Optional<Windows.Foundation.IDeferral> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIDeferral>> = nil;
        try self._n_GetDeferral(&__result);
        return Windows.Foundation.IDeferral(consuming: __result);
    }
    public var NewWindow : Optional<Windows.Web.UI.IWebViewControl> {
        get throws {
            return try get_NewWindow();
        }
    }
} // IWebViewControlNewWindowRequestedEventArgs2


// type: Windows.Web.UI.IWebViewControlPermissionRequest
// interface type
open class IWebViewControlPermissionRequest
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe5bc836c, Data2: 0xf22f, Data3 : 0x40e2, Data4 : (0x95, 0xb2, 0x77, 0x29, 0xf8, 0x40, 0xeb, 0x7f)) }
    // [IsSpecialName] System.UInt32 get_Id()
    private func _n_get_Id(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, __presult))
        }
    }
    public func get_Id() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Id(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.UI.WebViewControlPermissionType get_PermissionType()
    private func _n_get_PermissionType(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CWebViewControlPermissionType>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PermissionType(pThis, __presult))
        }
    }
    public func get_PermissionType() throws -> Windows.Web.UI.WebViewControlPermissionType {
        var __result : _q_CWindows_CWeb_CUI_CWebViewControlPermissionType = _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Geolocation;
        try self._n_get_PermissionType(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.UI.WebViewControlPermissionState get_State()
    private func _n_get_State(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CWebViewControlPermissionState>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_State(pThis, __presult))
        }
    }
    public func get_State() throws -> Windows.Web.UI.WebViewControlPermissionState {
        var __result : _q_CWindows_CWeb_CUI_CWebViewControlPermissionState = _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Unknown;
        try self._n_get_State(&__result);
        return __result;
    }
    // void Defer()
    private func _n_Defer() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Defer(pThis))
        }
    }
    public func Defer() throws -> Void {
        try self._n_Defer();
    }
    // void Allow()
    private func _n_Allow() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Allow(pThis))
        }
    }
    public func Allow() throws -> Void {
        try self._n_Allow();
    }
    // void Deny()
    private func _n_Deny() throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Deny(pThis))
        }
    }
    public func Deny() throws -> Void {
        try self._n_Deny();
    }
    public var Id : Swift.UInt32 {
        get throws {
            return try get_Id();
        }
    }
    public var PermissionType : Windows.Web.UI.WebViewControlPermissionType {
        get throws {
            return try get_PermissionType();
        }
    }
    public var State : Windows.Web.UI.WebViewControlPermissionState {
        get throws {
            return try get_State();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlPermissionRequest


// type: Windows.Web.UI.IWebViewControlPermissionRequestedEventArgs
// interface type
open class IWebViewControlPermissionRequestedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x27204d51, Data2: 0x2488, Data3 : 0x4cc5, Data4 : (0x96, 0x8e, 0x0a, 0x77, 0x1e, 0x59, 0xc1, 0x47)) }
    // [IsSpecialName] Windows.Web.UI.WebViewControlPermissionRequest get_PermissionRequest()
    private func _n_get_PermissionRequest(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PermissionRequest(pThis, __presult))
        }
    }
    public func get_PermissionRequest() throws -> Optional<Windows.Web.UI.IWebViewControlPermissionRequest> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CUI_CIWebViewControlPermissionRequest>> = nil;
        try self._n_get_PermissionRequest(&__result);
        return Windows.Web.UI.IWebViewControlPermissionRequest(consuming: __result);
    }
    public var PermissionRequest : Optional<Windows.Web.UI.IWebViewControlPermissionRequest> {
        get throws {
            return try get_PermissionRequest();
        }
    }
} // IWebViewControlPermissionRequestedEventArgs


// type: Windows.Web.UI.IWebViewControlScriptNotifyEventArgs
// interface type
open class IWebViewControlScriptNotifyEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x491de57b, Data2: 0x6f49, Data3 : 0x41bb, Data4 : (0xb5, 0x91, 0x51, 0xb8, 0x5b, 0x81, 0x70, 0x37)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] System.String get_Value()
    private func _n_get_Value(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlScriptNotifyEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, __presult))
        }
    }
    public func get_Value() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Value(&__result);
        return Swift.String(from: __result);
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
    public var Value : Swift.String {
        get throws {
            return try get_Value();
        }
    }
} // IWebViewControlScriptNotifyEventArgs


// type: Windows.Web.UI.IWebViewControlSettings
// interface type
open class IWebViewControlSettings
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc9967fbf, Data2: 0x5e98, Data3 : 0x4cfd, Data4 : (0x8c, 0xce, 0x27, 0xb0, 0x91, 0x1e, 0x3d, 0xe8)) }
    // [IsSpecialName] void put_IsJavaScriptEnabled(bool)
    private func _n_put_IsJavaScriptEnabled(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlSettings.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsJavaScriptEnabled(pThis, value))
        }
    }
    public func put_IsJavaScriptEnabled(value : boolean) throws -> Void {
        try self._n_put_IsJavaScriptEnabled(value);
    }
    // [IsSpecialName] bool get_IsJavaScriptEnabled()
    private func _n_get_IsJavaScriptEnabled(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlSettings.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsJavaScriptEnabled(pThis, __presult))
        }
    }
    public func get_IsJavaScriptEnabled() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_IsJavaScriptEnabled(&__result);
        return __result;
    }
    // [IsSpecialName] void put_IsIndexedDBEnabled(bool)
    private func _n_put_IsIndexedDBEnabled(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlSettings.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsIndexedDBEnabled(pThis, value))
        }
    }
    public func put_IsIndexedDBEnabled(value : boolean) throws -> Void {
        try self._n_put_IsIndexedDBEnabled(value);
    }
    // [IsSpecialName] bool get_IsIndexedDBEnabled()
    private func _n_get_IsIndexedDBEnabled(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlSettings.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsIndexedDBEnabled(pThis, __presult))
        }
    }
    public func get_IsIndexedDBEnabled() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_IsIndexedDBEnabled(&__result);
        return __result;
    }
    // [IsSpecialName] void put_IsScriptNotifyAllowed(bool)
    private func _n_put_IsScriptNotifyAllowed(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlSettings.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsScriptNotifyAllowed(pThis, value))
        }
    }
    public func put_IsScriptNotifyAllowed(value : boolean) throws -> Void {
        try self._n_put_IsScriptNotifyAllowed(value);
    }
    // [IsSpecialName] bool get_IsScriptNotifyAllowed()
    private func _n_get_IsScriptNotifyAllowed(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlSettings.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsScriptNotifyAllowed(pThis, __presult))
        }
    }
    public func get_IsScriptNotifyAllowed() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_IsScriptNotifyAllowed(&__result);
        return __result;
    }
    public var IsIndexedDBEnabled : boolean {
        get throws {
            return try get_IsIndexedDBEnabled();
        }
    }
    public var IsJavaScriptEnabled : boolean {
        get throws {
            return try get_IsJavaScriptEnabled();
        }
    }
    public var IsScriptNotifyAllowed : boolean {
        get throws {
            return try get_IsScriptNotifyAllowed();
        }
    }
} // IWebViewControlSettings


// type: Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs
// interface type
open class IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe3b81944, Data2: 0xe4fc, Data3 : 0x43dc, Data4 : (0x94, 0xca, 0xf9, 0x80, 0xf3, 0x0b, 0xc5, 0x1d)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] bool get_Handled()
    private func _n_get_Handled(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Handled(pThis, __presult))
        }
    }
    public func get_Handled() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Handled(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Handled(bool)
    private func _n_put_Handled(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlUnsupportedUriSchemeIdentifiedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Handled(pThis, value))
        }
    }
    public func put_Handled(value : boolean) throws -> Void {
        try self._n_put_Handled(value);
    }
    public var Handled : boolean {
        get throws {
            return try get_Handled();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs


// type: Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs
// interface type
open class IWebViewControlUnviewableContentIdentifiedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x4a9680db, Data2: 0x88f2, Data3 : 0x4e20, Data4 : (0xb6, 0x93, 0xb4, 0xe2, 0xdf, 0x4a, 0xa5, 0x81)) }
    // [IsSpecialName] Windows.Foundation.Uri get_Uri()
    private func _n_get_Uri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, __presult))
        }
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Uri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Uri get_Referrer()
    private func _n_get_Referrer(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Referrer(pThis, __presult))
        }
    }
    public func get_Referrer() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_Referrer(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] System.String get_MediaType()
    private func _n_get_MediaType(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlUnviewableContentIdentifiedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediaType(pThis, __presult))
        }
    }
    public func get_MediaType() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_MediaType(&__result);
        return Swift.String(from: __result);
    }
    public var MediaType : Swift.String {
        get throws {
            return try get_MediaType();
        }
    }
    public var Referrer : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Referrer();
        }
    }
    public var Uri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_Uri();
        }
    }
} // IWebViewControlUnviewableContentIdentifiedEventArgs


// type: Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs
// interface type
open class IWebViewControlWebResourceRequestedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x44d6524d, Data2: 0x55a4, Data3 : 0x4d8b, Data4 : (0x89, 0x1c, 0x93, 0x1d, 0x8e, 0x25, 0xd4, 0x2e)) }
    // Windows.Foundation.Deferral GetDeferral()
    private func _n_GetDeferral(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIDeferral>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, __presult))
        }
    }
    public func GetDeferral() throws -> Optional<Windows.Foundation.IDeferral> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIDeferral>> = nil;
        try self._n_GetDeferral(&__result);
        return Windows.Foundation.IDeferral(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_Request()
    private func _n_get_Request(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Request(pThis, __presult))
        }
    }
    public func get_Request() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_Request(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] void put_Response(Windows.Web.Http.HttpResponseMessage)
    private func _n_put_Response(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Response(pThis, value))
        }
    }
    public func put_Response(value : Optional<Windows.Web.Http.IHttpResponseMessage>) throws -> Void {
        try self._n_put_Response(RawPointer(value));
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessage get_Response()
    private func _n_get_Response(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CUI_CIWebViewControlWebResourceRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Response(pThis, __presult))
        }
    }
    public func get_Response() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_get_Response(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    public var Request : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_Request();
        }
    }
    public var Response : Optional<Windows.Web.Http.IHttpResponseMessage> {
        get throws {
            return try get_Response();
        }
    }
} // IWebViewControlWebResourceRequestedEventArgs


// type: Windows.Web.UI.WebViewControlContentLoadingEventArgs
// runtime class
public class WebViewControlContentLoadingEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlContentLoadingEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlContentLoadingEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlContentLoadingEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlContentLoadingEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlContentLoadingEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlDOMContentLoadedEventArgs
// runtime class
public class WebViewControlDOMContentLoadedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlDOMContentLoadedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlDOMContentLoadedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlDOMContentLoadedEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlDOMContentLoadedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlDOMContentLoadedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlDeferredPermissionRequest
// runtime class
public class WebViewControlDeferredPermissionRequest
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlDeferredPermissionRequest;
    public init(plok: Windows.Web.UI.IWebViewControlDeferredPermissionRequest?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlDeferredPermissionRequest { return _self; }
    public func get_Id() throws -> Swift.UInt32 {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try _ifc.get_Id();
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_PermissionType() throws -> Windows.Web.UI.WebViewControlPermissionType {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try _ifc.get_PermissionType();
    }
    public func Allow() throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try _ifc.Allow();
    }
    public func Deny() throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try _ifc.Deny();
    }
    public var Id : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try _ifc.Id;
        }
    }
    public var PermissionType : Windows.Web.UI.WebViewControlPermissionType {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try _ifc.PermissionType;
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlDeferredPermissionRequest = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlLongRunningScriptDetectedEventArgs
// runtime class
public class WebViewControlLongRunningScriptDetectedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs { return _self; }
    public func get_ExecutionTime() throws -> Windows.Foundation.TimeSpan {
        let _ifc : Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs = try _self.QueryInterface();
        return try _ifc.get_ExecutionTime();
    }
    public func get_StopPageScriptExecution() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs = try _self.QueryInterface();
        return try _ifc.get_StopPageScriptExecution();
    }
    public func put_StopPageScriptExecution(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs = try _self.QueryInterface();
        return try _ifc.put_StopPageScriptExecution(value: value);
    }
    public var ExecutionTime : Windows.Foundation.TimeSpan {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs = try _self.QueryInterface();
        return try _ifc.ExecutionTime;
        }
    }
    public var StopPageScriptExecution : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlLongRunningScriptDetectedEventArgs = try _self.QueryInterface();
        return try _ifc.StopPageScriptExecution;
        }
    }
}

// type: Windows.Web.UI.WebViewControlNavigationCompletedEventArgs
// runtime class
public class WebViewControlNavigationCompletedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_IsSuccess() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_IsSuccess();
    }
    public func get_WebErrorStatus() throws -> Windows.Web.WebErrorStatus {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_WebErrorStatus();
    }
    public var IsSuccess : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.IsSuccess;
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
    public var WebErrorStatus : Windows.Web.WebErrorStatus {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.WebErrorStatus;
        }
    }
}

// type: Windows.Web.UI.WebViewControlNavigationStartingEventArgs
// runtime class
public class WebViewControlNavigationStartingEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlNavigationStartingEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlNavigationStartingEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlNavigationStartingEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationStartingEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_Cancel() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationStartingEventArgs = try _self.QueryInterface();
        return try _ifc.get_Cancel();
    }
    public func put_Cancel(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationStartingEventArgs = try _self.QueryInterface();
        return try _ifc.put_Cancel(value: value);
    }
    public var Cancel : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationStartingEventArgs = try _self.QueryInterface();
        return try _ifc.Cancel;
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNavigationStartingEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlNewWindowRequestedEventArgs
// runtime class
public class WebViewControlNewWindowRequestedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_Referrer() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Referrer());
    }
    public func get_Handled() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try _ifc.get_Handled();
    }
    public func put_Handled(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try _ifc.put_Handled(value: value);
    }
    public var Handled : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try _ifc.Handled;
        }
    }
    public var Referrer : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Referrer);
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
    public func get_NewWindow() throws -> Optional<Windows.Web.UI.IWebViewControl> {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs2 = try _self.QueryInterface();
        return try _ifc.get_NewWindow();
    }
    public func put_NewWindow(value : Optional<Windows.Web.UI.IWebViewControl>) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs2 = try _self.QueryInterface();
        return try _ifc.put_NewWindow(value: value);
    }
    public func GetDeferral() throws -> Optional<Windows.Foundation.Deferral> {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs2 = try _self.QueryInterface();
        return try Windows.Foundation.Deferral(plok: _ifc.GetDeferral());
    }
    public var NewWindow : Optional<Windows.Web.UI.IWebViewControl> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlNewWindowRequestedEventArgs2 = try _self.QueryInterface();
        return try _ifc.NewWindow;
        }
    }
}

// type: Windows.Web.UI.WebViewControlPermissionRequest
// runtime class
public class WebViewControlPermissionRequest
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlPermissionRequest;
    public init(plok: Windows.Web.UI.IWebViewControlPermissionRequest?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlPermissionRequest { return _self; }
    public func get_Id() throws -> Swift.UInt32 {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.get_Id();
    }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_PermissionType() throws -> Windows.Web.UI.WebViewControlPermissionType {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.get_PermissionType();
    }
    public func get_State() throws -> Windows.Web.UI.WebViewControlPermissionState {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.get_State();
    }
    public func Defer() throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.Defer();
    }
    public func Allow() throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.Allow();
    }
    public func Deny() throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.Deny();
    }
    public var Id : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.Id;
        }
    }
    public var PermissionType : Windows.Web.UI.WebViewControlPermissionType {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.PermissionType;
        }
    }
    public var State : Windows.Web.UI.WebViewControlPermissionState {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try _ifc.State;
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequest = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlPermissionRequestedEventArgs
// runtime class
public class WebViewControlPermissionRequestedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlPermissionRequestedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlPermissionRequestedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlPermissionRequestedEventArgs { return _self; }
    public func get_PermissionRequest() throws -> Optional<Windows.Web.UI.WebViewControlPermissionRequest> {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Web.UI.WebViewControlPermissionRequest(plok: _ifc.get_PermissionRequest());
    }
    public var PermissionRequest : Optional<Windows.Web.UI.WebViewControlPermissionRequest> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlPermissionRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Web.UI.WebViewControlPermissionRequest(plok: _ifc.PermissionRequest);
        }
    }
}

// type: Windows.Web.UI.WebViewControlPermissionState
// enum type
public typealias WebViewControlPermissionState = _q_CWindows_CWeb_CUI_CWebViewControlPermissionState;

// type: Windows.Web.UI.WebViewControlPermissionType
// enum type
public typealias WebViewControlPermissionType = _q_CWindows_CWeb_CUI_CWebViewControlPermissionType;

// type: Windows.Web.UI.WebViewControlScriptNotifyEventArgs
// runtime class
public class WebViewControlScriptNotifyEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlScriptNotifyEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlScriptNotifyEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlScriptNotifyEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlScriptNotifyEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_Value() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.UI.IWebViewControlScriptNotifyEventArgs = try _self.QueryInterface();
        return try _ifc.get_Value();
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlScriptNotifyEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
    public var Value : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlScriptNotifyEventArgs = try _self.QueryInterface();
        return try _ifc.Value;
        }
    }
}

// type: Windows.Web.UI.WebViewControlSettings
// runtime class
public class WebViewControlSettings
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlSettings;
    public init(plok: Windows.Web.UI.IWebViewControlSettings?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlSettings { return _self; }
    public func put_IsJavaScriptEnabled(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.put_IsJavaScriptEnabled(value: value);
    }
    public func get_IsJavaScriptEnabled() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.get_IsJavaScriptEnabled();
    }
    public func put_IsIndexedDBEnabled(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.put_IsIndexedDBEnabled(value: value);
    }
    public func get_IsIndexedDBEnabled() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.get_IsIndexedDBEnabled();
    }
    public func put_IsScriptNotifyAllowed(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.put_IsScriptNotifyAllowed(value: value);
    }
    public func get_IsScriptNotifyAllowed() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.get_IsScriptNotifyAllowed();
    }
    public var IsIndexedDBEnabled : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.IsIndexedDBEnabled;
        }
    }
    public var IsJavaScriptEnabled : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.IsJavaScriptEnabled;
        }
    }
    public var IsScriptNotifyAllowed : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlSettings = try _self.QueryInterface();
        return try _ifc.IsScriptNotifyAllowed;
        }
    }
}

// type: Windows.Web.UI.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs
// runtime class
public class WebViewControlUnsupportedUriSchemeIdentifiedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_Handled() throws -> boolean {
        let _ifc : Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs = try _self.QueryInterface();
        return try _ifc.get_Handled();
    }
    public func put_Handled(value : boolean) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs = try _self.QueryInterface();
        return try _ifc.put_Handled(value: value);
    }
    public var Handled : boolean {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs = try _self.QueryInterface();
        return try _ifc.Handled;
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlUnsupportedUriSchemeIdentifiedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlUnviewableContentIdentifiedEventArgs
// runtime class
public class WebViewControlUnviewableContentIdentifiedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs { return _self; }
    public func get_Uri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Uri());
    }
    public func get_Referrer() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_Referrer());
    }
    public func get_MediaType() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs = try _self.QueryInterface();
        return try _ifc.get_MediaType();
    }
    public var MediaType : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs = try _self.QueryInterface();
        return try _ifc.MediaType;
        }
    }
    public var Referrer : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Referrer);
        }
    }
    public var Uri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlUnviewableContentIdentifiedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.Uri);
        }
    }
}

// type: Windows.Web.UI.WebViewControlWebResourceRequestedEventArgs
// runtime class
public class WebViewControlWebResourceRequestedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs;
    public init(plok: Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs { return _self; }
    public func GetDeferral() throws -> Optional<Windows.Foundation.Deferral> {
        let _ifc : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Deferral(plok: _ifc.GetDeferral());
    }
    public func get_Request() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_Request());
    }
    public func put_Response(value : Optional<Windows.Web.Http.HttpResponseMessage>) throws -> Void {
        let _ifc : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs = try _self.QueryInterface();
        return try _ifc.put_Response(value: value!.Interface());
    }
    public func get_Response() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.get_Response());
    }
    public var Request : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.Request);
        }
    }
    public var Response : Optional<Windows.Web.Http.HttpResponseMessage> {
        get throws {
        let _ifc : Windows.Web.UI.IWebViewControlWebResourceRequestedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.Response);
        }
    }
}

}
extension Windows.Web.UI.WebViewControlPermissionState {
    public static var Unknown : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Unknown;
        }
    }
    public static var Defer : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Defer;
        }
    }
    public static var Allow : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Allow;
        }
    }
    public static var Deny : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionState_Deny;
        }
    }
}
extension Windows.Web.UI.WebViewControlPermissionType {
    public static var Geolocation : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Geolocation;
        }
    }
    public static var UnlimitedIndexedDBQuota : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_UnlimitedIndexedDBQuota;
        }
    }
    public static var Media : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Media;
        }
    }
    public static var PointerLock : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_PointerLock;
        }
    }
    public static var WebNotifications : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_WebNotifications;
        }
    }
    public static var Screen : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_Screen;
        }
    }
    public static var ImmersiveView : Self {
        get {
            return _q_CWindows_CWeb_CUI_CWebViewControlPermissionType_ImmersiveView;
        }
    }
}
