// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xda07abf4, Data2: 0x91fa, Data3 : 0x5c96, Data4 : (0x84, 0xcb, 0x45, 0x9e, 0xa9, 0x7b, 0x93, 0x4d)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.AtomPub.ServiceDocument,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.AtomPub.ServiceDocument,Windows.Web.Syndication.RetrievalProgress> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.AtomPub.ServiceDocument,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.AtomPub.ServiceDocument,Windows.Web.Syndication.RetrievalProgress> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // Windows.Web.AtomPub.ServiceDocument GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CAtomPub_CIServiceDocument>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Web.AtomPub.IServiceDocument> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CAtomPub_CIServiceDocument>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Web.AtomPub.IServiceDocument(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xdd2a6d54, Data2: 0x55aa, Data3 : 0x5d09, Data4 : (0xb7, 0x90, 0x95, 0x20, 0xd4, 0xeb, 0x4f, 0x19)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.AtomPub.ServiceDocument,Windows.Web.Syndication.RetrievalProgress>, Windows.Web.Syndication.RetrievalProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x5f03b1d3, Data2: 0x470d, Data3 : 0x5be7, Data4 : (0x81, 0x76, 0x1c, 0x9a, 0x46, 0x01, 0x09, 0x00)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.AtomPub.ServiceDocument,Windows.Web.Syndication.RetrievalProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd0d7b58d, Data2: 0xd97e, Data3 : 0x5761, Data4 : (0xbe, 0x66, 0x42, 0xb8, 0x5b, 0x3d, 0x19, 0xc8)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CAtomPub_CWorkspace
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x32f021c7, Data2: 0x368b, Data3 : 0x5cfa, Data4 : (0x82, 0x9c, 0x4a, 0xcf, 0x8a, 0x36, 0xc8, 0x10)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CAtomPub_CResourceCollection
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Web.AtomPub.IServiceDocument> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CAtomPub_CServiceDocument__q_CWindows_CWeb_CSyndication_CRetrievalProgress =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
