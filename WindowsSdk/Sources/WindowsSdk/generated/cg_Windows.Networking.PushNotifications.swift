// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x55fa217d, Data2: 0x1fc3, Data3 : 0x5863, Data4 : (0xb9, 0x80, 0x70, 0x94, 0xd4, 0x37, 0x96, 0x94)) }
    // [IsSpecialName] void Invoke(Windows.Networking.PushNotifications.PushNotificationChannel, Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.PushNotifications.IPushNotificationChannel>, args : Optional<Windows.Networking.PushNotifications.IPushNotificationReceivedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs
// impl delegate type
open class impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationReceivedEventArgs>>) in
        guard let self = impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs.from_impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.PushNotifications.PushNotificationChannel(plok: Windows.Networking.PushNotifications.IPushNotificationChannel(sender)), args: Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs(plok: Windows.Networking.PushNotifications.IPushNotificationReceivedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.PushNotifications.PushNotificationChannel>, Optional<Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.PushNotifications.PushNotificationChannel>, Optional<Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs? {
        return pUnk?.bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.PushNotifications.PushNotificationChannel>, args : Optional<Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.PushNotifications.PushNotificationChannel>, args : Optional<Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel__q_CWindows_CNetworking_CPushNotifications_CPushNotificationReceivedEventArgs {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x70945a09, Data2: 0x331a, Data3 : 0x5e40, Data4 : (0xb8, 0x54, 0x66, 0xb7, 0xa3, 0x23, 0x3b, 0xab)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.PushNotifications.PushNotificationChannel>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.PushNotifications.PushNotificationChannel> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel(consuming: __result);
    }
    // Windows.Networking.PushNotifications.PushNotificationChannel GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.PushNotifications.IPushNotificationChannel> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannel>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.PushNotifications.IPushNotificationChannel(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcf7c902f, Data2: 0x0f0d, Data3 : 0x5b22, Data4 : (0x90, 0xb1, 0x85, 0x14, 0x1b, 0x58, 0x16, 0xcd)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.PushNotifications.PushNotificationChannel>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
// impl delegate type
open class impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.from_impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel(_ pUnk: UnsafeMutableRawPointer?) -> impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel? {
        return pUnk?.bindMemory(to: impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel {
        return _self
    }
}
// closed generic delegate type
public class IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7d4309e7, Data2: 0xb3ca, Data3 : 0x5fde, Data4 : (0x9b, 0x37, 0xbe, 0x32, 0x3a, 0xdb, 0x37, 0x0f)) }
    // [IsSpecialName] void Invoke(System.Object, Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<WinRT.IInspectable>, args : Optional<Windows.Networking.PushNotifications.IPushNotificationChannelsRevokedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs
// impl delegate type
open class impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CPushNotifications_CIPushNotificationChannelsRevokedEventArgs>>) in
        guard let self = impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs.from_impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: WinRT.Object(plok: WinRT.IInspectable(sender)), args: Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs(plok: Windows.Networking.PushNotifications.IPushNotificationChannelsRevokedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<WinRT.Object>, Optional<Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<WinRT.Object>, Optional<Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs? {
        return pUnk?.bindMemory(to: impl_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<WinRT.Object>, args : Optional<Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_EventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs
{
    private var _self : ClosedGenerics.IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs;
    public init(plok: ClosedGenerics.IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<WinRT.Object>, args : Optional<Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.GetInterface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.IEventHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannelsRevokedEventArgs {
        return _self
    }
}
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.PushNotifications.IPushNotificationChannel> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.impl_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CPushNotifications_CPushNotificationChannel =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
