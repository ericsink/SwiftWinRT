// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.System.Diagnostics {
// type: Windows.System.Diagnostics.IProcessDiagnosticInfo
// interface type
open class IProcessDiagnosticInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe830b04b, Data2: 0x300e, Data3 : 0x4ee6, Data4 : (0xa0, 0xab, 0x5b, 0x5f, 0x52, 0x31, 0xb4, 0x34)) }
// method not needed: get_ProcessId
// method not needed: get_ExecutableFileName
// method not needed: get_Parent
// method not needed: get_ProcessStartTime
// method not needed: get_DiskUsage
// method not needed: get_MemoryUsage
// method not needed: get_CpuUsage
} // IProcessDiagnosticInfo


// type: Windows.System.Diagnostics.ProcessDiagnosticInfo
// runtime class
public class ProcessDiagnosticInfo
    :
    WinRT.Object
{
    private var _self : Windows.System.Diagnostics.IProcessDiagnosticInfo;
    public init(plok: Windows.System.Diagnostics.IProcessDiagnosticInfo?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.System.Diagnostics.IProcessDiagnosticInfo { return _self; }
    // static interface not needed: Windows.System.Diagnostics.IProcessDiagnosticInfoStatics
    // static interface not needed: Windows.System.Diagnostics.IProcessDiagnosticInfoStatics2
    // method not needed: get_ProcessId
    // method not needed: get_ExecutableFileName
    // method not needed: get_Parent
    // method not needed: get_ProcessStartTime
    // method not needed: get_DiskUsage
    // method not needed: get_MemoryUsage
    // method not needed: get_CpuUsage
    // instance interface not needed: Windows.System.Diagnostics.IProcessDiagnosticInfo2
}

}
