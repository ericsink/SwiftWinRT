// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc776f3a9, Data2: 0x6e7f, Data3 : 0x5144, Data4 : (0x89, 0xf7, 0x8f, 0x5e, 0xc1, 0x16, 0x5b, 0xa4)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimProfile
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xdd15e279, Data2: 0x1276, Data3 : 0x588b, Data4 : (0xb9, 0xf0, 0x11, 0xb9, 0x7f, 0x27, 0x04, 0x52)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ESimOperationResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ESimOperationResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.ESimOperationResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IESimOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IESimOperationResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x15887528, Data2: 0xfa3f, Data3 : 0x5ae2, Data4 : (0xbd, 0x7f, 0x11, 0x19, 0xe6, 0x2d, 0x85, 0xb6)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimOperationResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x5efd6396, Data2: 0x4690, Data3 : 0x5e52, Data4 : (0x82, 0x7c, 0x1b, 0x52, 0x5d, 0x23, 0xd8, 0x98)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IESimDownloadProfileMetadataResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimDownloadProfileMetadataResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IESimDownloadProfileMetadataResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x800d3596, Data2: 0xfb0b, Data3 : 0x501a, Data4 : (0xbd, 0xa6, 0x80, 0x24, 0x09, 0xc1, 0xea, 0x22)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDownloadProfileMetadataResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9ca277db, Data2: 0xfe42, Data3 : 0x53b1, Data4 : (0xae, 0x3b, 0x09, 0x8e, 0x51, 0xfa, 0x6a, 0x9b)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.ESim, System.Object)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESim>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IESim>, args : Optional<WinRT.IInspectable>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectableVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESim>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.ESim(plok: Windows.Networking.NetworkOperators.IESim(sender)), args: WinRT.Object(plok: WinRT.IInspectable(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESim>, Optional<WinRT.Object>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESim>, Optional<WinRT.Object>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESim>, args : Optional<WinRT.Object>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESim>, args : Optional<WinRT.Object>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.GetInterface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESim_IInspectable {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x84054849, Data2: 0x4b50, Data3 : 0x5635, Data4 : (0xbc, 0xc9, 0x76, 0x27, 0x3a, 0x3c, 0x50, 0x07)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ESimDiscoverResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ESimDiscoverResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.ESimDiscoverResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IESimDiscoverResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimDiscoverResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IESimDiscoverResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe55a979f, Data2: 0x0864, Data3 : 0x5a1d, Data4 : (0xba, 0x84, 0x58, 0x3d, 0xd4, 0x84, 0xb7, 0x35)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ESimDiscoverResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x21277446, Data2: 0xc556, Data3 : 0x5fcf, Data4 : (0x8d, 0x2d, 0xf2, 0xcd, 0x06, 0x1f, 0x26, 0x03)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverEvent
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf1130ddf, Data2: 0x680c, Data3 : 0x5594, Data4 : (0xa2, 0xec, 0xab, 0xcb, 0x0c, 0x52, 0x11, 0x43)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Networking.NetworkOperators.ESimOperationResult,Windows.Networking.NetworkOperators.ESimProfileInstallProgress>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Networking.NetworkOperators.ESimOperationResult,Windows.Networking.NetworkOperators.ESimProfileInstallProgress> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Networking.NetworkOperators.ESimOperationResult,Windows.Networking.NetworkOperators.ESimProfileInstallProgress>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Networking.NetworkOperators.ESimOperationResult,Windows.Networking.NetworkOperators.ESimProfileInstallProgress> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.ESimOperationResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IESimOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimOperationResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IESimOperationResult(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x67a4b8eb, Data2: 0x792e, Data3 : 0x5683, Data4 : (0xb6, 0x25, 0x49, 0x28, 0x88, 0x4d, 0x39, 0xca)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Networking.NetworkOperators.ESimOperationResult,Windows.Networking.NetworkOperators.ESimProfileInstallProgress>, Windows.Networking.NetworkOperators.ESimProfileInstallProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>, _ progressInfo : _q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, progressInfo : Windows.Networking.NetworkOperators.ESimProfileInstallProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>, _ progressInfo : _q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.from_AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, Windows.Networking.NetworkOperators.ESimProfileInstallProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, Windows.Networking.NetworkOperators.ESimProfileInstallProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, progressInfo : Windows.Networking.NetworkOperators.ESimProfileInstallProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, progressInfo : Windows.Networking.NetworkOperators.ESimProfileInstallProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7b5eac5d, Data2: 0xdc91, Data3 : 0x5071, Data4 : (0xa9, 0x9f, 0x25, 0x6b, 0x4f, 0xb5, 0x63, 0x62)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Networking.NetworkOperators.ESimOperationResult,Windows.Networking.NetworkOperators.ESimProfileInstallProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf4586725, Data2: 0xea85, Data3 : 0x5ac6, Data4 : (0x84, 0x6e, 0xa8, 0x47, 0xe0, 0xe4, 0x5a, 0x0b)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.ESimProfileMetadata, System.Object)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IESimProfileMetadata>, args : Optional<WinRT.IInspectable>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectableVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimProfileMetadata>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.ESimProfileMetadata(plok: Windows.Networking.NetworkOperators.IESimProfileMetadata(sender)), args: WinRT.Object(plok: WinRT.IInspectable(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimProfileMetadata>, Optional<WinRT.Object>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimProfileMetadata>, Optional<WinRT.Object>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimProfileMetadata>, args : Optional<WinRT.Object>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimProfileMetadata>, args : Optional<WinRT.Object>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.GetInterface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimProfileMetadata_IInspectable {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf99b94ba, Data2: 0xd4d0, Data3 : 0x5c43, Data4 : (0xb1, 0x74, 0xff, 0xd7, 0xe6, 0xe5, 0x13, 0x1c)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.ESimWatcher, Windows.Networking.NetworkOperators.ESimAddedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.IESimAddedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimAddedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.ESimWatcher(plok: Windows.Networking.NetworkOperators.IESimWatcher(sender)), args: Windows.Networking.NetworkOperators.ESimAddedEventArgs(plok: Windows.Networking.NetworkOperators.IESimAddedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<Windows.Networking.NetworkOperators.ESimAddedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<Windows.Networking.NetworkOperators.ESimAddedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.ESimAddedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.ESimAddedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimAddedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb52d4068, Data2: 0x1dda, Data3 : 0x5baa, Data4 : (0xb7, 0x6b, 0xa7, 0xbc, 0x47, 0x8d, 0xb5, 0xf2)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.ESimWatcher, System.Object)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IESimWatcher>, args : Optional<WinRT.IInspectable>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectableVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.ESimWatcher(plok: Windows.Networking.NetworkOperators.IESimWatcher(sender)), args: WinRT.Object(plok: WinRT.IInspectable(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<WinRT.Object>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<WinRT.Object>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<WinRT.Object>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<WinRT.Object>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.GetInterface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher_IInspectable {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa8b7e917, Data2: 0x3ac3, Data3 : 0x54e1, Data4 : (0x9e, 0x26, 0x21, 0xf8, 0x3c, 0x60, 0x97, 0xd2)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.ESimWatcher, Windows.Networking.NetworkOperators.ESimRemovedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.IESimRemovedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimRemovedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.ESimWatcher(plok: Windows.Networking.NetworkOperators.IESimWatcher(sender)), args: Windows.Networking.NetworkOperators.ESimRemovedEventArgs(plok: Windows.Networking.NetworkOperators.IESimRemovedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<Windows.Networking.NetworkOperators.ESimRemovedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<Windows.Networking.NetworkOperators.ESimRemovedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.ESimRemovedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.ESimRemovedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimRemovedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe93527e9, Data2: 0xea10, Data3 : 0x5aa7, Data4 : (0xb8, 0xaa, 0xfe, 0xa8, 0x66, 0x29, 0x47, 0x04)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.ESimWatcher, Windows.Networking.NetworkOperators.ESimUpdatedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.IESimUpdatedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIESimUpdatedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.ESimWatcher(plok: Windows.Networking.NetworkOperators.IESimWatcher(sender)), args: Windows.Networking.NetworkOperators.ESimUpdatedEventArgs(plok: Windows.Networking.NetworkOperators.IESimUpdatedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<Windows.Networking.NetworkOperators.ESimUpdatedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.ESimWatcher>, Optional<Windows.Networking.NetworkOperators.ESimUpdatedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.ESimUpdatedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.ESimWatcher>, args : Optional<Windows.Networking.NetworkOperators.ESimUpdatedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimWatcher__q_CWindows_CNetworking_CNetworkOperators_CESimUpdatedEventArgs {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x522781d8, Data2: 0x29c8, Data3 : 0x5d89, Data4 : (0x89, 0x37, 0x1d, 0x1c, 0x20, 0x32, 0xf0, 0xc8)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IHotspotCredentialsAuthenticationResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIHotspotCredentialsAuthenticationResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IHotspotCredentialsAuthenticationResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7f254beb, Data2: 0x471f, Data3 : 0x5000, Data4 : (0x94, 0xce, 0x10, 0x2c, 0xc3, 0x33, 0x05, 0x5f)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x423cc41e, Data2: 0xfe8c, Data3 : 0x5a7d, Data4 : (0x9f, 0xee, 0xaa, 0xe0, 0x4e, 0xf8, 0x57, 0x00)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher>, args : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandAccountEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher(plok: Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher(sender)), args: Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs(plok: Windows.Networking.NetworkOperators.IMobileBroadbandAccountEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0e865096, Data2: 0x1ffa, Data3 : 0x5792, Data4 : (0x8d, 0x4f, 0x86, 0x23, 0xe3, 0xc7, 0x7f, 0x56)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher>, args : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandAccountUpdatedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountUpdatedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher(plok: Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher(sender)), args: Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs(plok: Windows.Networking.NetworkOperators.IMobileBroadbandAccountUpdatedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountUpdatedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe4dc9cfc, Data2: 0xf462, Data3 : 0x5afd, Data4 : (0x85, 0x6d, 0x04, 0xac, 0xe2, 0x29, 0xd0, 0x0e)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, System.Object)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher>, args : Optional<WinRT.IInspectable>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectableVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandAccountWatcher>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher(plok: Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher(sender)), args: WinRT.Object(plok: WinRT.IInspectable(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, Optional<WinRT.Object>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, Optional<WinRT.Object>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, args : Optional<WinRT.Object>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher>, args : Optional<WinRT.Object>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.GetInterface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAccountWatcher_IInspectable {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2896bc34, Data2: 0x7401, Data3 : 0x5d22, Data4 : (0xbf, 0x9f, 0xdb, 0x82, 0x5d, 0x09, 0xc9, 0x51)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellCdma
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf77a0168, Data2: 0x0396, Data3 : 0x5111, Data4 : (0xa4, 0x87, 0xa7, 0x95, 0xf2, 0x46, 0x46, 0xb7)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellGsm
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2270ad53, Data2: 0x49a0, Data3 : 0x55b3, Data4 : (0x93, 0x56, 0x00, 0x7c, 0x3b, 0x8c, 0x2d, 0xe3)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellLte
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x4ae9135f, Data2: 0x6029, Data3 : 0x54af, Data4 : (0x8a, 0xe6, 0x43, 0x2c, 0x12, 0xaf, 0xce, 0xdf)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellTdscdma
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb0e94bd2, Data2: 0x2dd2, Data3 : 0x532d, Data4 : (0x96, 0x0f, 0x4d, 0x1a, 0x81, 0x85, 0xb0, 0x21)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellUmts
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x66a9879f, Data2: 0x9612, Data3 : 0x5e02, Data4 : (0x9c, 0x3d, 0x94, 0x3b, 0x09, 0xdb, 0x4d, 0x35)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellNR
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2c673aa8, Data2: 0x6a35, Data3 : 0x50fd, Data4 : (0x94, 0x22, 0x36, 0x15, 0xa1, 0xc2, 0x8c, 0xcb)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceCommandResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x21f0ce4f, Data2: 0x8f33, Data3 : 0x5e71, Data4 : (0xa4, 0x57, 0xdd, 0xa5, 0x53, 0xb0, 0xd6, 0xbb)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x31f89ca6, Data2: 0xdd7f, Data3 : 0x5325, Data4 : (0x90, 0x20, 0x62, 0x7d, 0x8b, 0x47, 0xea, 0x02)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession, Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataSession>, args : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataReceivedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataSession>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandDeviceServiceDataReceivedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession(plok: Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataSession(sender)), args: Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs(plok: Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataReceivedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataSession__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceDataReceivedEventArgs {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xaca7ee14, Data2: 0x414a, Data3 : 0x509c, Data4 : (0x9d, 0x63, 0x36, 0x1e, 0x66, 0x31, 0xfc, 0x84)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceInformation
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcdbe0003, Data2: 0xdaaa, Data3 : 0x5c89, Data4 : (0x92, 0xe6, 0xa4, 0x7f, 0xfc, 0x24, 0x18, 0xa2)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModemConfiguration>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc11e0649, Data2: 0x8237, Data3 : 0x5c93, Data4 : (0xbb, 0xdb, 0x2e, 0xda, 0x52, 0x16, 0xfd, 0x3f)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfigurationVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xab0d25ab, Data2: 0x68cd, Data3 : 0x54ab, Data4 : (0xb1, 0x9c, 0x62, 0x47, 0x11, 0x65, 0x9d, 0x3d)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandModemStatus>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandModemStatus> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandModemStatus GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Windows.Networking.NetworkOperators.MobileBroadbandModemStatus {
        var __result : _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus = _q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus_Success;
        try self._n_GetResults(&__result);
        return __result;
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb8628318, Data2: 0xee4f, Data3 : 0x5af4, Data4 : (0x9e, 0x3b, 0xaf, 0x99, 0x4f, 0xa9, 0x6c, 0x51)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemStatus>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatusVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xae622260, Data2: 0x0d4b, Data3 : 0x5b39, Data4 : (0x97, 0x6b, 0xa7, 0xab, 0x61, 0x0a, 0xc1, 0x85)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandPco>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandPco> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandPco GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandPco> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPco>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandPco(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc7d3fc9e, Data2: 0xc381, Data3 : 0x545c, Data4 : (0xa8, 0xae, 0x6a, 0x46, 0x4e, 0xdb, 0x16, 0xa2)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPco>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPcoVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf2df3c8f, Data2: 0x20b5, Data3 : 0x555c, Data4 : (0xa3, 0x81, 0x7e, 0x29, 0xd5, 0xab, 0x51, 0xd7)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandModem, System.Object)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandModem>, args : Optional<WinRT.IInspectable>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectableVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandModem>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandModem(plok: Windows.Networking.NetworkOperators.IMobileBroadbandModem(sender)), args: WinRT.Object(plok: WinRT.IInspectable(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandModem>, Optional<WinRT.Object>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandModem>, Optional<WinRT.Object>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandModem>, args : Optional<WinRT.Object>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandModem>, args : Optional<WinRT.Object>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.GetInterface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModem_IInspectable {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd1e341f3, Data2: 0x4e36, Data3 : 0x58c5, Data4 : (0x92, 0xbf, 0xdd, 0x33, 0x09, 0x2e, 0x39, 0x0c)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccApp
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xba1101d2, Data2: 0x7219, Data3 : 0x5421, Data4 : (0xa0, 0x87, 0x4c, 0xc5, 0xf1, 0xf2, 0x5f, 0xc4)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandCellsInfo> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCellsInfo>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandCellsInfo(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x98f9a3f7, Data2: 0x92a2, Data3 : 0x5431, Data4 : (0x90, 0x2f, 0x9b, 0xf0, 0x10, 0x67, 0xab, 0x60)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfoVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x077679f5, Data2: 0x6948, Data3 : 0x5328, Data4 : (0x8a, 0xb4, 0x72, 0xe6, 0x3a, 0x75, 0x29, 0xbd)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandNetworkRegistrationStateChange
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2f76661c, Data2: 0x2f74, Data3 : 0x5ce2, Data4 : (0x99, 0xf9, 0x47, 0xd1, 0xa3, 0xa1, 0x36, 0x33)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandPinOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandPinOperationResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandPinOperationResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x595ad094, Data2: 0x60e3, Data3 : 0x5349, Data4 : (0x8f, 0xe6, 0xea, 0x8e, 0xcb, 0xbb, 0x25, 0x41)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2078b5f0, Data2: 0x9fa1, Data3 : 0x5056, Data4 : (0x81, 0xc7, 0x49, 0x02, 0x46, 0xa5, 0xbc, 0x13)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinLockStateChange
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x33394c13, Data2: 0x028c, Data3 : 0x553e, Data4 : (0x86, 0x7b, 0x3c, 0x7c, 0x21, 0xb6, 0xf2, 0x2d)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinType
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xca3d0221, Data2: 0x58c8, Data3 : 0x516a, Data4 : (0xad, 0xdf, 0xd0, 0xa8, 0x69, 0xfb, 0xaa, 0x49)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandRadioStateChange
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8a4ad36c, Data2: 0x8b24, Data3 : 0x5f2c, Data4 : (0xad, 0x6f, 0x6a, 0x93, 0x6a, 0x17, 0xbf, 0xc6)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x540c4534, Data2: 0xcd85, Data3 : 0x5abe, Data4 : (0x80, 0x13, 0x13, 0xcb, 0x14, 0x0e, 0xd1, 0x8b)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandSarManager, Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandSarManager>, args : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandTransmissionStateChangedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSarManager>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandTransmissionStateChangedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandSarManager(plok: Windows.Networking.NetworkOperators.IMobileBroadbandSarManager(sender)), args: Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs(plok: Windows.Networking.NetworkOperators.IMobileBroadbandTransmissionStateChangedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandSarManager>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandSarManager>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSarManager>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSarManager>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSarManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandTransmissionStateChangedEventArgs {
        return _self
    }
}
// closed interface type
public class IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xfd66b9ac, Data2: 0x40dc, Data3 : 0x5ac7, Data4 : (0xaa, 0xf1, 0x2d, 0x34, 0x03, 0xe5, 0xfc, 0xbb)) }
// method not needed: First
} // IIterable_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
// closed interface type
public class IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x03327f15, Data2: 0xe40f, Data3 : 0x52d1, Data4 : (0xbb, 0x6c, 0xbe, 0xbb, 0xd8, 0x15, 0x51, 0x34)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandAntennaSar
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc72d12ee, Data2: 0x6a4a, Data3 : 0x5980, Data4 : (0xad, 0x00, 0x8b, 0xf7, 0xfc, 0x85, 0x48, 0x55)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfo
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe3deb611, Data2: 0x51ac, Data3 : 0x58c9, Data4 : (0x9e, 0x72, 0xeb, 0xff, 0xdf, 0x14, 0x9f, 0x69)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandSlotManager, Windows.Networking.NetworkOperators.MobileBroadbandSlotInfoChangedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandSlotManager>, args : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandSlotInfoChangedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotInfoChangedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandSlotManager(plok: Windows.Networking.NetworkOperators.IMobileBroadbandSlotManager(sender)), args: Windows.Networking.NetworkOperators.MobileBroadbandSlotInfoChangedEventArgs(plok: Windows.Networking.NetworkOperators.IMobileBroadbandSlotInfoChangedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotInfoChangedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotInfoChangedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotInfoChangedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotInfoChangedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotInfoChangedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x67a52e4e, Data2: 0xa996, Data3 : 0x5861, Data4 : (0x97, 0x6a, 0x76, 0x2d, 0x06, 0x68, 0x70, 0x28)) }
    // [IsSpecialName] void Invoke(Windows.Networking.NetworkOperators.MobileBroadbandSlotManager, Windows.Networking.NetworkOperators.MobileBroadbandCurrentSlotIndexChangedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandSlotManager>, args : Optional<Windows.Networking.NetworkOperators.IMobileBroadbandCurrentSlotIndexChangedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandSlotManager>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandCurrentSlotIndexChangedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs.from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Networking.NetworkOperators.MobileBroadbandSlotManager(plok: Windows.Networking.NetworkOperators.IMobileBroadbandSlotManager(sender)), args: Windows.Networking.NetworkOperators.MobileBroadbandCurrentSlotIndexChangedEventArgs(plok: Windows.Networking.NetworkOperators.IMobileBroadbandCurrentSlotIndexChangedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandCurrentSlotIndexChangedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, Optional<Windows.Networking.NetworkOperators.MobileBroadbandCurrentSlotIndexChangedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandCurrentSlotIndexChangedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Networking.NetworkOperators.MobileBroadbandSlotManager>, args : Optional<Windows.Networking.NetworkOperators.MobileBroadbandCurrentSlotIndexChangedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandSlotManager__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCurrentSlotIndexChangedEventArgs {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcf1ce97f, Data2: 0x1a81, Data3 : 0x5ce6, Data4 : (0x8a, 0xd5, 0x55, 0xff, 0x8b, 0x0e, 0x8d, 0x1b)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppsResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppsResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppsResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa12bed56, Data2: 0xc672, Data3 : 0x595e, Data4 : (0xa6, 0x7b, 0x49, 0xab, 0xc2, 0x85, 0xad, 0xdc)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0774f4a6, Data2: 0xbdbe, Data3 : 0x59ff, Data4 : (0xaa, 0x1c, 0xa6, 0x2e, 0x3c, 0x6f, 0x9d, 0x37)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppRecordDetailsResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppRecordDetailsResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppRecordDetailsResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd0b53858, Data2: 0x0e54, Data3 : 0x5791, Data4 : (0x82, 0xed, 0x33, 0x13, 0xdc, 0x75, 0xda, 0x45)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x27fc8483, Data2: 0x30d8, Data3 : 0x5be3, Data4 : (0xbc, 0x1e, 0x8c, 0xca, 0x0b, 0x24, 0x1d, 0xf3)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppReadRecordResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIMobileBroadbandUiccAppReadRecordResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppReadRecordResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb81892b3, Data2: 0x4ca9, Data3 : 0x5ec4, Data4 : (0x89, 0x71, 0x2f, 0xbc, 0x19, 0xb5, 0x6c, 0xa9)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x601b30ed, Data2: 0x9b7f, Data3 : 0x54b6, Data4 : (0xb6, 0x1b, 0x24, 0xa0, 0x9b, 0xc5, 0x63, 0x04)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.INetworkOperatorTetheringOperationResult> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CINetworkOperatorTetheringOperationResult>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.INetworkOperatorTetheringOperationResult(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa936b927, Data2: 0x7537, Data3 : 0x59c6, Data4 : (0x89, 0xde, 0x33, 0xf3, 0x6a, 0x97, 0x25, 0xab)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResultVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe21d6797, Data2: 0x4ef6, Data3 : 0x553f, Data4 : (0xb7, 0xf9, 0x5e, 0xd7, 0x4b, 0xce, 0xbd, 0x7e)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringClient
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9f8fe338, Data2: 0xc6b1, Data3 : 0x5614, Data4 : (0xa1, 0x4f, 0x89, 0x77, 0xa7, 0x7e, 0x17, 0xf2)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IProvisionFromXmlDocumentResults> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIProvisionFromXmlDocumentResults>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IProvisionFromXmlDocumentResults(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7a7eee1b, Data2: 0x17f9, Data3 : 0x5a41, Data4 : (0x86, 0x1b, 0xc3, 0x0e, 0xa1, 0x27, 0xd0, 0xf1)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResultsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9dd0a063, Data2: 0x6153, Data3 : 0x5afd, Data4 : (0x82, 0x88, 0x87, 0x70, 0xdd, 0xcf, 0xf2, 0xdb)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.UssdReply>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Networking.NetworkOperators.UssdReply> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply(consuming: __result);
    }
    // Windows.Networking.NetworkOperators.UssdReply GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Networking.NetworkOperators.IUssdReply> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CNetworking_CNetworkOperators_CIUssdReply>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Networking.NetworkOperators.IUssdReply(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9385bd8f, Data2: 0x5e14, Data3 : 0x557a, Data4 : (0xa7, 0xf1, 0x63, 0xf3, 0x3d, 0x9e, 0xca, 0xcf)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReplyVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply {
        return _self
    }
}
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IESimOperationResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IESimDownloadProfileMetadataResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDownloadProfileMetadataResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IESimDiscoverResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CESimDiscoverResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IESimOperationResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CNetworking_CNetworkOperators_CESimOperationResult__q_CWindows_CNetworking_CNetworkOperators_CESimProfileInstallProgress =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IHotspotCredentialsAuthenticationResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CHotspotCredentialsAuthenticationResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandDeviceServiceCommandResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemConfiguration =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Windows.Networking.NetworkOperators.MobileBroadbandModemStatus {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandModemStatus =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandPco> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPco =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandCellsInfo> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandCellsInfo =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandPinOperationResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandPinOperationResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppsResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppsResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppRecordDetailsResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppRecordDetailsResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppReadRecordResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CMobileBroadbandUiccAppReadRecordResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.INetworkOperatorTetheringOperationResult> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CNetworkOperatorTetheringOperationResult =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IProvisionFromXmlDocumentResults> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CProvisionFromXmlDocumentResults =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Networking.NetworkOperators.IUssdReply> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CNetworking_CNetworkOperators_CUssdReply =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
