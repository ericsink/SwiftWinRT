// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed interface type
public class IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe8736833, Data2: 0xd013, Data3 : 0x5361, Data4 : (0x97, 0x7d, 0xc5, 0xe9, 0x99, 0x34, 0x68, 0x0e)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IOutputStream>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IOutputStream> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream(consuming: __result);
    }
    // Windows.Storage.Streams.IOutputStream GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIOutputStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IOutputStream> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIOutputStream>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IOutputStream(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbcb37f4f, Data2: 0x3af4, Data3 : 0x561c, Data4 : (0xa9, 0xe3, 0xee, 0xf1, 0x73, 0x84, 0x94, 0xd7)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IOutputStream>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStreamVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream.from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x430ecece, Data2: 0x1418, Data3 : 0x5d19, Data4 : (0x81, 0xb2, 0x5d, 0xdb, 0x38, 0x16, 0x03, 0xcc)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStream>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStream> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream(consuming: __result);
    }
    // Windows.Storage.Streams.IRandomAccessStream GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIRandomAccessStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IRandomAccessStream> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIRandomAccessStream>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IRandomAccessStream(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x398c4183, Data2: 0x793d, Data3 : 0x5b00, Data4 : (0x81, 0x9b, 0x4a, 0xef, 0x92, 0x48, 0x5e, 0x94)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa8fe0732, Data2: 0x556d, Data3 : 0x5841, Data4 : (0xb7, 0xee, 0xb3, 0x45, 0x0f, 0xb5, 0x26, 0x66)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IInputStream>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IInputStream> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream(consuming: __result);
    }
    // Windows.Storage.Streams.IInputStream GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IInputStream> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IInputStream(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd0bd0125, Data2: 0x9049, Data3 : 0x57a3, Data4 : (0xbd, 0x66, 0xe2, 0x52, 0x5d, 0x98, 0xc8, 0x14)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IInputStream>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStreamVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream.from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc4a57c5e, Data2: 0x32b0, Data3 : 0x55b3, Data4 : (0xad, 0x13, 0xce, 0x1c, 0x23, 0x04, 0x1e, 0xd6)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStreamWithContentType>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IRandomAccessStreamWithContentType> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType(consuming: __result);
    }
    // Windows.Storage.Streams.IRandomAccessStreamWithContentType GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IRandomAccessStreamWithContentType> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IRandomAccessStreamWithContentType(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3dddecf4, Data2: 0x1d39, Data3 : 0x58e8, Data4 : (0x83, 0xb1, 0xdb, 0xed, 0x54, 0x1c, 0x7f, 0x35)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamWithContentType>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentTypeVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType {
        return _self
    }
}
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd26b2819, Data2: 0x897f, Data3 : 0x5c7d, Data4 : (0x84, 0xd6, 0x56, 0xd7, 0x96, 0x56, 0x14, 0x31)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,System.UInt32>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,System.UInt32> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,System.UInt32>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,System.UInt32> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(consuming: __result);
    }
    // Windows.Storage.Streams.IBuffer GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IBuffer> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IBuffer(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbf666554, Data2: 0x7605, Data3 : 0x5d9a, Data4 : (0xb1, 0x4e, 0x18, 0xd8, 0xc8, 0x47, 0x2a, 0xfe)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,System.UInt32>, System.UInt32)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>, _ progressInfo : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, progressInfo : Swift.UInt32) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>, _ progressInfo : UINT32) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, Swift.UInt32) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, Swift.UInt32) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, progressInfo : Swift.UInt32) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, progressInfo : Swift.UInt32) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x06386a7a, Data2: 0xe009, Data3 : 0x5b0b, Data4 : (0xab, 0x68, 0xa8, 0xe4, 0x8b, 0x51, 0x66, 0x47)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,System.UInt32>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32Vtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 {
        return _self
    }
}
// closed interface type
public class IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3bee8834, Data2: 0xb9a7, Data3 : 0x5a80, Data4 : (0xa7, 0x46, 0x5e, 0xf0, 0x97, 0x22, 0x78, 0x78)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IBuffer>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Streams.IBuffer> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer(consuming: __result);
    }
    // Windows.Storage.Streams.IBuffer GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IBuffer> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IBuffer(consuming: __result);
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x51c3d2fd, Data2: 0xb8a1, Data3 : 0x5620, Data4 : (0xb7, 0x46, 0x7e, 0xe6, 0xd5, 0x33, 0xac, 0xa3)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IBuffer>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBufferVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer.from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer {
        return _self
    }
}
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf71cff65, Data2: 0xe737, Data3 : 0x5345, Data4 : (0xb3, 0x8f, 0xfd, 0x44, 0x5d, 0x2d, 0xc7, 0xe2)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,Windows.Web.Syndication.RetrievalProgress> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,Windows.Web.Syndication.RetrievalProgress> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // Windows.Storage.Streams.IInputStream GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IInputStream> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IInputStream(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6136b327, Data2: 0x4152, Data3 : 0x54e3, Data4 : (0xaa, 0x34, 0x38, 0xa0, 0xc1, 0x21, 0xdc, 0x4d)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,Windows.Web.Syndication.RetrievalProgress>, Windows.Web.Syndication.RetrievalProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x76772ec1, Data2: 0xc26f, Data3 : 0x5f6e, Data4 : (0x8d, 0x3b, 0x83, 0x14, 0x10, 0x7c, 0xef, 0xeb)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,Windows.Web.Syndication.RetrievalProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xad960e7f, Data2: 0xd73b, Data3 : 0x56e4, Data4 : (0xa5, 0x8c, 0x6e, 0xc7, 0x67, 0x8c, 0xfd, 0x88)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,System.UInt64>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,System.UInt64> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,System.UInt64>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,System.UInt64> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(consuming: __result);
    }
    // Windows.Storage.Streams.IBuffer GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IBuffer> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IBuffer(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd17f5eb6, Data2: 0xb422, Data3 : 0x5e26, Data4 : (0xa8, 0x17, 0x7e, 0x0f, 0xd0, 0x8f, 0x75, 0xd5)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,System.UInt64>, System.UInt64)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>, _ progressInfo : UINT64) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, progressInfo : Swift.UInt64) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>, _ progressInfo : UINT64) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, Swift.UInt64) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, Swift.UInt64) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, progressInfo : Swift.UInt64) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, progressInfo : Swift.UInt64) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xabc81235, Data2: 0x39c7, Data3 : 0x59bf, Data4 : (0x99, 0x48, 0x2d, 0x14, 0xa9, 0x3d, 0x40, 0xfd)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,System.UInt64>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64Vtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 {
        return _self
    }
}
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x455aa601, Data2: 0xf13e, Data3 : 0x5dee, Data4 : (0xb9, 0xcb, 0x16, 0xb5, 0x31, 0x99, 0x63, 0x27)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,System.UInt64>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,System.UInt64> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,System.UInt64>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,System.UInt64> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(consuming: __result);
    }
    // Windows.Storage.Streams.IInputStream GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Storage.Streams.IInputStream> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Storage.Streams.IInputStream(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf9b2e7f6, Data2: 0x762f, Data3 : 0x50db, Data4 : (0x95, 0xdd, 0x7f, 0x6c, 0x6e, 0xc4, 0x70, 0x90)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,System.UInt64>, System.UInt64)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>, _ progressInfo : UINT64) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, progressInfo : Swift.UInt64) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>, _ progressInfo : UINT64) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, Swift.UInt64) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, Swift.UInt64) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, progressInfo : Swift.UInt64) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, progressInfo : Swift.UInt64) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8db69706, Data2: 0x3dd1, Data3 : 0x5a28, Data4 : (0x98, 0x6a, 0x93, 0xbe, 0x07, 0x76, 0xd9, 0xc3)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,System.UInt64>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64Vtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 {
        return _self
    }
}
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIOutputStream?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IOutputStream> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIOutputStream =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IRandomAccessStream> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStream =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIInputStream?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IInputStream> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIInputStream =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IRandomAccessStreamWithContentType> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IBuffer> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32 =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CStreams_CIBuffer?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IBuffer> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CStreams_CIBuffer =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IInputStream> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CSyndication_CRetrievalProgress =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IBuffer> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64 =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Storage.Streams.IInputStream> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64 =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
