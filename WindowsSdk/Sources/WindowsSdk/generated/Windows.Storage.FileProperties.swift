// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.Storage.FileProperties {
// type: Windows.Storage.FileProperties.BasicProperties
// runtime class
public class BasicProperties
    :
    WinRT.Object
{
    private var _self : Windows.Storage.FileProperties.IBasicProperties;
    public init(plok: Windows.Storage.FileProperties.IBasicProperties?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.FileProperties.IBasicProperties { return _self; }
    public func get_Size() throws -> Swift.UInt64 {
        let _ifc : Windows.Storage.FileProperties.IBasicProperties = try _self.QueryInterface();
        return try _ifc.get_Size();
    }
    public func get_DateModified() throws -> Windows.Foundation.DateTime {
        let _ifc : Windows.Storage.FileProperties.IBasicProperties = try _self.QueryInterface();
        return try _ifc.get_DateModified();
    }
    public func get_ItemDate() throws -> Windows.Foundation.DateTime {
        let _ifc : Windows.Storage.FileProperties.IBasicProperties = try _self.QueryInterface();
        return try _ifc.get_ItemDate();
    }
    public var DateModified : Windows.Foundation.DateTime {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IBasicProperties = try _self.QueryInterface();
        return try _ifc.DateModified;
        }
    }
    public var ItemDate : Windows.Foundation.DateTime {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IBasicProperties = try _self.QueryInterface();
        return try _ifc.ItemDate;
        }
    }
    public var Size : Swift.UInt64 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IBasicProperties = try _self.QueryInterface();
        return try _ifc.Size;
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsync(propertiesToSave: propertiesToSave);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync() throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsyncOverloadDefault();
    }
    public func SaveProperties() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
}

// type: Windows.Storage.FileProperties.DocumentProperties
// runtime class
public class DocumentProperties
    :
    WinRT.Object
{
    private var _self : Windows.Storage.FileProperties.IDocumentProperties;
    public init(plok: Windows.Storage.FileProperties.IDocumentProperties?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.FileProperties.IDocumentProperties { return _self; }
    public func get_Author() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.get_Author();
    }
    public func get_Title() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.get_Title();
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.put_Title(value: value);
    }
    public func get_Keywords() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.get_Keywords();
    }
    public func get_Comment() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.get_Comment();
    }
    public func put_Comment(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.put_Comment(value: value);
    }
    public var Author : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.Author;
        }
    }
    public var Comment : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.Comment;
        }
    }
    public var Keywords : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.Keywords;
        }
    }
    public var Title : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IDocumentProperties = try _self.QueryInterface();
        return try _ifc.Title;
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsync(propertiesToSave: propertiesToSave);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync() throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsyncOverloadDefault();
    }
    public func SaveProperties() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
}

// type: Windows.Storage.FileProperties.IBasicProperties
// interface type
open class IBasicProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd05d55db, Data2: 0x785e, Data3 : 0x4a66, Data4 : (0xbe, 0x02, 0x9b, 0xee, 0xc5, 0x8a, 0xea, 0x81)) }
    // [IsSpecialName] System.UInt64 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT64>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIBasicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt64 {
        var __result : UINT64 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.DateTime get_DateModified()
    private func _n_get_DateModified(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CDateTime>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIBasicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DateModified(pThis, __presult))
        }
    }
    public func get_DateModified() throws -> Windows.Foundation.DateTime {
        var __result : _q_CWindows_CFoundation_CDateTime = _q_CWindows_CFoundation_CDateTime(UniversalTime: 0);
        try self._n_get_DateModified(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.DateTime get_ItemDate()
    private func _n_get_ItemDate(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CDateTime>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIBasicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ItemDate(pThis, __presult))
        }
    }
    public func get_ItemDate() throws -> Windows.Foundation.DateTime {
        var __result : _q_CWindows_CFoundation_CDateTime = _q_CWindows_CFoundation_CDateTime(UniversalTime: 0);
        try self._n_get_ItemDate(&__result);
        return __result;
    }
    public var DateModified : Windows.Foundation.DateTime {
        get throws {
            return try get_DateModified();
        }
    }
    public var ItemDate : Windows.Foundation.DateTime {
        get throws {
            return try get_ItemDate();
        }
    }
    public var Size : Swift.UInt64 {
        get throws {
            return try get_Size();
        }
    }
} // IBasicProperties


// type: Windows.Storage.FileProperties.IDocumentProperties
// interface type
open class IDocumentProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7eab19bc, Data2: 0x1821, Data3 : 0x4923, Data4 : (0xb4, 0xa9, 0x0a, 0xea, 0x40, 0x4d, 0x00, 0x70)) }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Author()
    private func _n_get_Author(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Author(pThis, __presult))
        }
    }
    public func get_Author() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Author(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.String get_Title()
    private func _n_get_Title(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, __presult))
        }
    }
    public func get_Title() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Title(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Title(System.String)
    private func _n_put_Title(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, value))
        }
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Title(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Keywords()
    private func _n_get_Keywords(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Keywords(pThis, __presult))
        }
    }
    public func get_Keywords() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Keywords(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.String get_Comment()
    private func _n_get_Comment(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Comment(pThis, __presult))
        }
    }
    public func get_Comment() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Comment(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Comment(System.String)
    private func _n_put_Comment(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIDocumentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Comment(pThis, value))
        }
    }
    public func put_Comment(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Comment(__hstr_value.Raw());
        }
    }
    public var Author : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Author();
        }
    }
    public var Comment : Swift.String {
        get throws {
            return try get_Comment();
        }
    }
    public var Keywords : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Keywords();
        }
    }
    public var Title : Swift.String {
        get throws {
            return try get_Title();
        }
    }
} // IDocumentProperties


// type: Windows.Storage.FileProperties.IImageProperties
// interface type
open class IImageProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x523c9424, Data2: 0xfcff, Data3 : 0x4275, Data4 : (0xaf, 0xee, 0xec, 0xdb, 0x9a, 0xb4, 0x79, 0x73)) }
    // [IsSpecialName] System.UInt32 get_Rating()
    private func _n_get_Rating(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Rating(pThis, __presult))
        }
    }
    public func get_Rating() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Rating(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Rating(System.UInt32)
    private func _n_put_Rating(_ value : UINT32) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Rating(pThis, value))
        }
    }
    public func put_Rating(value : Swift.UInt32) throws -> Void {
        try self._n_put_Rating(value);
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Keywords()
    private func _n_get_Keywords(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Keywords(pThis, __presult))
        }
    }
    public func get_Keywords() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Keywords(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.DateTime get_DateTaken()
    private func _n_get_DateTaken(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CDateTime>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DateTaken(pThis, __presult))
        }
    }
    public func get_DateTaken() throws -> Windows.Foundation.DateTime {
        var __result : _q_CWindows_CFoundation_CDateTime = _q_CWindows_CFoundation_CDateTime(UniversalTime: 0);
        try self._n_get_DateTaken(&__result);
        return __result;
    }
    // [IsSpecialName] void put_DateTaken(Windows.Foundation.DateTime)
    private func _n_put_DateTaken(_ value : _q_CWindows_CFoundation_CDateTime) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_DateTaken(pThis, value))
        }
    }
    public func put_DateTaken(value : Windows.Foundation.DateTime) throws -> Void {
        try self._n_put_DateTaken(value);
    }
    // [IsSpecialName] System.UInt32 get_Width()
    private func _n_get_Width(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Width(pThis, __presult))
        }
    }
    public func get_Width() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Width(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt32 get_Height()
    private func _n_get_Height(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Height(pThis, __presult))
        }
    }
    public func get_Height() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Height(&__result);
        return __result;
    }
    // [IsSpecialName] System.String get_Title()
    private func _n_get_Title(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, __presult))
        }
    }
    public func get_Title() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Title(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Title(System.String)
    private func _n_put_Title(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, value))
        }
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Title(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.IReference<System.Double> get_Latitude()
    private func _n_get_Latitude(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Latitude(pThis, __presult))
        }
    }
    public func get_Latitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>> = nil;
        try self._n_get_Latitude(&__result);
        return ClosedGenerics.IReference_1_DOUBLE(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<System.Double> get_Longitude()
    private func _n_get_Longitude(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Longitude(pThis, __presult))
        }
    }
    public func get_Longitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>> = nil;
        try self._n_get_Longitude(&__result);
        return ClosedGenerics.IReference_1_DOUBLE(consuming: __result);
    }
    // [IsSpecialName] System.String get_CameraManufacturer()
    private func _n_get_CameraManufacturer(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CameraManufacturer(pThis, __presult))
        }
    }
    public func get_CameraManufacturer() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_CameraManufacturer(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_CameraManufacturer(System.String)
    private func _n_put_CameraManufacturer(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_CameraManufacturer(pThis, value))
        }
    }
    public func put_CameraManufacturer(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_CameraManufacturer(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] System.String get_CameraModel()
    private func _n_get_CameraModel(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CameraModel(pThis, __presult))
        }
    }
    public func get_CameraModel() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_CameraModel(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_CameraModel(System.String)
    private func _n_put_CameraModel(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_CameraModel(pThis, value))
        }
    }
    public func put_CameraModel(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_CameraModel(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Storage.FileProperties.PhotoOrientation get_Orientation()
    private func _n_get_Orientation(_ __presult: UnsafeMutablePointer<_q_CWindows_CStorage_CFileProperties_CPhotoOrientation>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orientation(pThis, __presult))
        }
    }
    public func get_Orientation() throws -> Windows.Storage.FileProperties.PhotoOrientation {
        var __result : _q_CWindows_CStorage_CFileProperties_CPhotoOrientation = _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Unspecified;
        try self._n_get_Orientation(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVectorView<System.String> get_PeopleNames()
    private func _n_get_PeopleNames(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIImageProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PeopleNames(pThis, __presult))
        }
    }
    public func get_PeopleNames() throws -> Optional<ClosedGenerics.IVectorView_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1_HSTRING>> = nil;
        try self._n_get_PeopleNames(&__result);
        return ClosedGenerics.IVectorView_1_HSTRING(consuming: __result);
    }
    public var CameraManufacturer : Swift.String {
        get throws {
            return try get_CameraManufacturer();
        }
    }
    public var CameraModel : Swift.String {
        get throws {
            return try get_CameraModel();
        }
    }
    public var DateTaken : Windows.Foundation.DateTime {
        get throws {
            return try get_DateTaken();
        }
    }
    public var Height : Swift.UInt32 {
        get throws {
            return try get_Height();
        }
    }
    public var Keywords : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Keywords();
        }
    }
    public var Latitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
            return try get_Latitude();
        }
    }
    public var Longitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
            return try get_Longitude();
        }
    }
    public var Orientation : Windows.Storage.FileProperties.PhotoOrientation {
        get throws {
            return try get_Orientation();
        }
    }
    public var PeopleNames : Optional<ClosedGenerics.IVectorView_1_HSTRING> {
        get throws {
            return try get_PeopleNames();
        }
    }
    public var Rating : Swift.UInt32 {
        get throws {
            return try get_Rating();
        }
    }
    public var Title : Swift.String {
        get throws {
            return try get_Title();
        }
    }
    public var Width : Swift.UInt32 {
        get throws {
            return try get_Width();
        }
    }
} // IImageProperties


// type: Windows.Storage.FileProperties.IMusicProperties
// interface type
open class IMusicProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbc8aab62, Data2: 0x66ec, Data3 : 0x419a, Data4 : (0xbc, 0x5d, 0xca, 0x65, 0xa4, 0xcb, 0x46, 0xda)) }
    // [IsSpecialName] System.String get_Album()
    private func _n_get_Album(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Album(pThis, __presult))
        }
    }
    public func get_Album() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Album(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Album(System.String)
    private func _n_put_Album(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Album(pThis, value))
        }
    }
    public func put_Album(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Album(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] System.String get_Artist()
    private func _n_get_Artist(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Artist(pThis, __presult))
        }
    }
    public func get_Artist() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Artist(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Artist(System.String)
    private func _n_put_Artist(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Artist(pThis, value))
        }
    }
    public func put_Artist(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Artist(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Genre()
    private func _n_get_Genre(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Genre(pThis, __presult))
        }
    }
    public func get_Genre() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Genre(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_TrackNumber()
    private func _n_get_TrackNumber(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_TrackNumber(pThis, __presult))
        }
    }
    public func get_TrackNumber() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_TrackNumber(&__result);
        return __result;
    }
    // [IsSpecialName] void put_TrackNumber(System.UInt32)
    private func _n_put_TrackNumber(_ value : UINT32) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_TrackNumber(pThis, value))
        }
    }
    public func put_TrackNumber(value : Swift.UInt32) throws -> Void {
        try self._n_put_TrackNumber(value);
    }
    // [IsSpecialName] System.String get_Title()
    private func _n_get_Title(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, __presult))
        }
    }
    public func get_Title() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Title(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Title(System.String)
    private func _n_put_Title(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, value))
        }
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Title(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] System.UInt32 get_Rating()
    private func _n_get_Rating(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Rating(pThis, __presult))
        }
    }
    public func get_Rating() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Rating(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Rating(System.UInt32)
    private func _n_put_Rating(_ value : UINT32) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Rating(pThis, value))
        }
    }
    public func put_Rating(value : Swift.UInt32) throws -> Void {
        try self._n_put_Rating(value);
    }
    // [IsSpecialName] Windows.Foundation.TimeSpan get_Duration()
    private func _n_get_Duration(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CTimeSpan>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, __presult))
        }
    }
    public func get_Duration() throws -> Windows.Foundation.TimeSpan {
        var __result : _q_CWindows_CFoundation_CTimeSpan = _q_CWindows_CFoundation_CTimeSpan(Duration: 0);
        try self._n_get_Duration(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt32 get_Bitrate()
    private func _n_get_Bitrate(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bitrate(pThis, __presult))
        }
    }
    public func get_Bitrate() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Bitrate(&__result);
        return __result;
    }
    // [IsSpecialName] System.String get_AlbumArtist()
    private func _n_get_AlbumArtist(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_AlbumArtist(pThis, __presult))
        }
    }
    public func get_AlbumArtist() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_AlbumArtist(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_AlbumArtist(System.String)
    private func _n_put_AlbumArtist(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_AlbumArtist(pThis, value))
        }
    }
    public func put_AlbumArtist(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_AlbumArtist(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Composers()
    private func _n_get_Composers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Composers(pThis, __presult))
        }
    }
    public func get_Composers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Composers(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Conductors()
    private func _n_get_Conductors(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Conductors(pThis, __presult))
        }
    }
    public func get_Conductors() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Conductors(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.String get_Subtitle()
    private func _n_get_Subtitle(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subtitle(pThis, __presult))
        }
    }
    public func get_Subtitle() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Subtitle(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Subtitle(System.String)
    private func _n_put_Subtitle(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subtitle(pThis, value))
        }
    }
    public func put_Subtitle(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Subtitle(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Producers()
    private func _n_get_Producers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Producers(pThis, __presult))
        }
    }
    public func get_Producers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Producers(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.String get_Publisher()
    private func _n_get_Publisher(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Publisher(pThis, __presult))
        }
    }
    public func get_Publisher() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Publisher(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Publisher(System.String)
    private func _n_put_Publisher(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Publisher(pThis, value))
        }
    }
    public func put_Publisher(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Publisher(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Writers()
    private func _n_get_Writers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Writers(pThis, __presult))
        }
    }
    public func get_Writers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Writers(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Year()
    private func _n_get_Year(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Year(pThis, __presult))
        }
    }
    public func get_Year() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Year(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Year(System.UInt32)
    private func _n_put_Year(_ value : UINT32) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIMusicProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Year(pThis, value))
        }
    }
    public func put_Year(value : Swift.UInt32) throws -> Void {
        try self._n_put_Year(value);
    }
    public var Album : Swift.String {
        get throws {
            return try get_Album();
        }
    }
    public var AlbumArtist : Swift.String {
        get throws {
            return try get_AlbumArtist();
        }
    }
    public var Artist : Swift.String {
        get throws {
            return try get_Artist();
        }
    }
    public var Bitrate : Swift.UInt32 {
        get throws {
            return try get_Bitrate();
        }
    }
    public var Composers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Composers();
        }
    }
    public var Conductors : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Conductors();
        }
    }
    public var Duration : Windows.Foundation.TimeSpan {
        get throws {
            return try get_Duration();
        }
    }
    public var Genre : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Genre();
        }
    }
    public var Producers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Producers();
        }
    }
    public var Publisher : Swift.String {
        get throws {
            return try get_Publisher();
        }
    }
    public var Rating : Swift.UInt32 {
        get throws {
            return try get_Rating();
        }
    }
    public var Subtitle : Swift.String {
        get throws {
            return try get_Subtitle();
        }
    }
    public var Title : Swift.String {
        get throws {
            return try get_Title();
        }
    }
    public var TrackNumber : Swift.UInt32 {
        get throws {
            return try get_TrackNumber();
        }
    }
    public var Writers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Writers();
        }
    }
    public var Year : Swift.UInt32 {
        get throws {
            return try get_Year();
        }
    }
} // IMusicProperties


// type: Windows.Storage.FileProperties.IStorageItemContentProperties
// interface type
open class IStorageItemContentProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x05294bad, Data2: 0xbc38, Data3 : 0x48bf, Data4 : (0x85, 0xd7, 0x77, 0x0e, 0x0e, 0x2a, 0xe0, 0xba)) }
    // Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.MusicProperties> GetMusicPropertiesAsync()
    private func _n_GetMusicPropertiesAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMusicPropertiesAsync(pThis, __presult))
        }
    }
    public func GetMusicPropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties>> = nil;
        try self._n_GetMusicPropertiesAsync(&__result);
        return ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties(consuming: __result);
    }
    public func GetMusicProperties() async throws -> Optional<Windows.Storage.FileProperties.IMusicProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetMusicPropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.VideoProperties> GetVideoPropertiesAsync()
    private func _n_GetVideoPropertiesAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetVideoPropertiesAsync(pThis, __presult))
        }
    }
    public func GetVideoPropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties>> = nil;
        try self._n_GetVideoPropertiesAsync(&__result);
        return ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties(consuming: __result);
    }
    public func GetVideoProperties() async throws -> Optional<Windows.Storage.FileProperties.IVideoProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetVideoPropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.ImageProperties> GetImagePropertiesAsync()
    private func _n_GetImagePropertiesAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetImagePropertiesAsync(pThis, __presult))
        }
    }
    public func GetImagePropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties>> = nil;
        try self._n_GetImagePropertiesAsync(&__result);
        return ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties(consuming: __result);
    }
    public func GetImageProperties() async throws -> Optional<Windows.Storage.FileProperties.IImageProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetImagePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperation<Windows.Storage.FileProperties.DocumentProperties> GetDocumentPropertiesAsync()
    private func _n_GetDocumentPropertiesAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDocumentPropertiesAsync(pThis, __presult))
        }
    }
    public func GetDocumentPropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties>> = nil;
        try self._n_GetDocumentPropertiesAsync(&__result);
        return ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties(consuming: __result);
    }
    public func GetDocumentProperties() async throws -> Optional<Windows.Storage.FileProperties.IDocumentProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetDocumentPropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
} // IStorageItemContentProperties


// type: Windows.Storage.FileProperties.IStorageItemExtraProperties
// interface type
open class IStorageItemExtraProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc54361b2, Data2: 0x54cd, Data3 : 0x432b, Data4 : (0xbd, 0xbc, 0x4b, 0x19, 0xc4, 0xb4, 0x70, 0xd7)) }
    // Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IMap<System.String,System.Object>> RetrievePropertiesAsync(Windows.Foundation.Collections.IIterable<System.String>)
    private func _n_RetrievePropertiesAsync(_ propertiesToRetrieve : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IIterable_1_HSTRING>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RetrievePropertiesAsync(pThis, propertiesToRetrieve, __presult))
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable>> = nil;
        try self._n_RetrievePropertiesAsync(RawPointer(propertiesToRetrieve), &__result);
        return ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable(consuming: __result);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncAction SavePropertiesAsync(Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<System.String,System.Object>>)
    private func _n_SavePropertiesAsync(_ propertiesToSave : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIAsyncAction>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SavePropertiesAsync(pThis, propertiesToSave, __presult))
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIAsyncAction>> = nil;
        try self._n_SavePropertiesAsync(RawPointer(propertiesToSave), &__result);
        return Windows.Foundation.IAsyncAction(consuming: __result);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncAction SavePropertiesAsync()
    private func _n_SavePropertiesAsyncOverloadDefault(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIAsyncAction>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIStorageItemExtraProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SavePropertiesAsyncOverloadDefault(pThis, __presult))
        }
    }
    public func SavePropertiesAsyncOverloadDefault() throws -> Optional<Windows.Foundation.IAsyncAction> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIAsyncAction>> = nil;
        try self._n_SavePropertiesAsyncOverloadDefault(&__result);
        return Windows.Foundation.IAsyncAction(consuming: __result);
    }
    public func SavePropertiesAsyncOverloadDefault() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsyncOverloadDefault()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
} // IStorageItemExtraProperties


// type: Windows.Storage.FileProperties.IThumbnailProperties
// interface type
open class IThumbnailProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x693dd42f, Data2: 0xdbe7, Data3 : 0x49b5, Data4 : (0xb3, 0xb3, 0x28, 0x93, 0xac, 0x5d, 0x34, 0x23)) }
    // [IsSpecialName] System.UInt32 get_OriginalWidth()
    private func _n_get_OriginalWidth(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_OriginalWidth(pThis, __presult))
        }
    }
    public func get_OriginalWidth() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_OriginalWidth(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt32 get_OriginalHeight()
    private func _n_get_OriginalHeight(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_OriginalHeight(pThis, __presult))
        }
    }
    public func get_OriginalHeight() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_OriginalHeight(&__result);
        return __result;
    }
    // [IsSpecialName] bool get_ReturnedSmallerCachedSize()
    private func _n_get_ReturnedSmallerCachedSize(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ReturnedSmallerCachedSize(pThis, __presult))
        }
    }
    public func get_ReturnedSmallerCachedSize() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_ReturnedSmallerCachedSize(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Storage.FileProperties.ThumbnailType get_Type()
    private func _n_get_Type(_ __presult: UnsafeMutablePointer<_q_CWindows_CStorage_CFileProperties_CThumbnailType>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIThumbnailProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Type(pThis, __presult))
        }
    }
    public func get_Type() throws -> Windows.Storage.FileProperties.ThumbnailType {
        var __result : _q_CWindows_CStorage_CFileProperties_CThumbnailType = _q_CWindows_CStorage_CFileProperties_CThumbnailType_Image;
        try self._n_get_Type(&__result);
        return __result;
    }
    public var OriginalHeight : Swift.UInt32 {
        get throws {
            return try get_OriginalHeight();
        }
    }
    public var OriginalWidth : Swift.UInt32 {
        get throws {
            return try get_OriginalWidth();
        }
    }
    public var ReturnedSmallerCachedSize : boolean {
        get throws {
            return try get_ReturnedSmallerCachedSize();
        }
    }
    public var Type_ : Windows.Storage.FileProperties.ThumbnailType {
        get throws {
            return try get_Type();
        }
    }
} // IThumbnailProperties


// type: Windows.Storage.FileProperties.IVideoProperties
// interface type
open class IVideoProperties
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x719ae507, Data2: 0x68de, Data3 : 0x4db8, Data4 : (0x97, 0xde, 0x49, 0x99, 0x8c, 0x05, 0x9f, 0x2f)) }
    // [IsSpecialName] System.UInt32 get_Rating()
    private func _n_get_Rating(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Rating(pThis, __presult))
        }
    }
    public func get_Rating() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Rating(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Rating(System.UInt32)
    private func _n_put_Rating(_ value : UINT32) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Rating(pThis, value))
        }
    }
    public func put_Rating(value : Swift.UInt32) throws -> Void {
        try self._n_put_Rating(value);
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Keywords()
    private func _n_get_Keywords(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Keywords(pThis, __presult))
        }
    }
    public func get_Keywords() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Keywords(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Width()
    private func _n_get_Width(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Width(pThis, __presult))
        }
    }
    public func get_Width() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Width(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt32 get_Height()
    private func _n_get_Height(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Height(pThis, __presult))
        }
    }
    public func get_Height() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Height(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.TimeSpan get_Duration()
    private func _n_get_Duration(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CTimeSpan>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, __presult))
        }
    }
    public func get_Duration() throws -> Windows.Foundation.TimeSpan {
        var __result : _q_CWindows_CFoundation_CTimeSpan = _q_CWindows_CFoundation_CTimeSpan(Duration: 0);
        try self._n_get_Duration(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.IReference<System.Double> get_Latitude()
    private func _n_get_Latitude(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Latitude(pThis, __presult))
        }
    }
    public func get_Latitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>> = nil;
        try self._n_get_Latitude(&__result);
        return ClosedGenerics.IReference_1_DOUBLE(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<System.Double> get_Longitude()
    private func _n_get_Longitude(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Longitude(pThis, __presult))
        }
    }
    public func get_Longitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1_DOUBLE>> = nil;
        try self._n_get_Longitude(&__result);
        return ClosedGenerics.IReference_1_DOUBLE(consuming: __result);
    }
    // [IsSpecialName] System.String get_Title()
    private func _n_get_Title(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, __presult))
        }
    }
    public func get_Title() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Title(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Title(System.String)
    private func _n_put_Title(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, value))
        }
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Title(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] System.String get_Subtitle()
    private func _n_get_Subtitle(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subtitle(pThis, __presult))
        }
    }
    public func get_Subtitle() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Subtitle(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Subtitle(System.String)
    private func _n_put_Subtitle(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subtitle(pThis, value))
        }
    }
    public func put_Subtitle(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Subtitle(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Producers()
    private func _n_get_Producers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Producers(pThis, __presult))
        }
    }
    public func get_Producers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Producers(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.String get_Publisher()
    private func _n_get_Publisher(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Publisher(pThis, __presult))
        }
    }
    public func get_Publisher() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Publisher(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Publisher(System.String)
    private func _n_put_Publisher(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Publisher(pThis, value))
        }
    }
    public func put_Publisher(value : Swift.String) throws -> Void {
        let __hstr_value = try HString(value);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Publisher(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Writers()
    private func _n_get_Writers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Writers(pThis, __presult))
        }
    }
    public func get_Writers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Writers(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Year()
    private func _n_get_Year(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Year(pThis, __presult))
        }
    }
    public func get_Year() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Year(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Year(System.UInt32)
    private func _n_put_Year(_ value : UINT32) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Year(pThis, value))
        }
    }
    public func put_Year(value : Swift.UInt32) throws -> Void {
        try self._n_put_Year(value);
    }
    // [IsSpecialName] System.UInt32 get_Bitrate()
    private func _n_get_Bitrate(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bitrate(pThis, __presult))
        }
    }
    public func get_Bitrate() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Bitrate(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVector<System.String> get_Directors()
    private func _n_get_Directors(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>>>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Directors(pThis, __presult))
        }
    }
    public func get_Directors() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVector_1_HSTRING>> = nil;
        try self._n_get_Directors(&__result);
        return ClosedGenerics.IVector_1_HSTRING(consuming: __result);
    }
    // [IsSpecialName] Windows.Storage.FileProperties.VideoOrientation get_Orientation()
    private func _n_get_Orientation(_ __presult: UnsafeMutablePointer<_q_CWindows_CStorage_CFileProperties_CVideoOrientation>?) throws {
        return try perform(as: _q_CWindows_CStorage_CFileProperties_CIVideoProperties.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orientation(pThis, __presult))
        }
    }
    public func get_Orientation() throws -> Windows.Storage.FileProperties.VideoOrientation {
        var __result : _q_CWindows_CStorage_CFileProperties_CVideoOrientation = _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Normal;
        try self._n_get_Orientation(&__result);
        return __result;
    }
    public var Bitrate : Swift.UInt32 {
        get throws {
            return try get_Bitrate();
        }
    }
    public var Directors : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Directors();
        }
    }
    public var Duration : Windows.Foundation.TimeSpan {
        get throws {
            return try get_Duration();
        }
    }
    public var Height : Swift.UInt32 {
        get throws {
            return try get_Height();
        }
    }
    public var Keywords : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Keywords();
        }
    }
    public var Latitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
            return try get_Latitude();
        }
    }
    public var Longitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
            return try get_Longitude();
        }
    }
    public var Orientation : Windows.Storage.FileProperties.VideoOrientation {
        get throws {
            return try get_Orientation();
        }
    }
    public var Producers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Producers();
        }
    }
    public var Publisher : Swift.String {
        get throws {
            return try get_Publisher();
        }
    }
    public var Rating : Swift.UInt32 {
        get throws {
            return try get_Rating();
        }
    }
    public var Subtitle : Swift.String {
        get throws {
            return try get_Subtitle();
        }
    }
    public var Title : Swift.String {
        get throws {
            return try get_Title();
        }
    }
    public var Width : Swift.UInt32 {
        get throws {
            return try get_Width();
        }
    }
    public var Writers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
            return try get_Writers();
        }
    }
    public var Year : Swift.UInt32 {
        get throws {
            return try get_Year();
        }
    }
} // IVideoProperties


// type: Windows.Storage.FileProperties.ImageProperties
// runtime class
public class ImageProperties
    :
    WinRT.Object
{
    private var _self : Windows.Storage.FileProperties.IImageProperties;
    public init(plok: Windows.Storage.FileProperties.IImageProperties?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.FileProperties.IImageProperties { return _self; }
    public func get_Rating() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Rating();
    }
    public func put_Rating(value : Swift.UInt32) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.put_Rating(value: value);
    }
    public func get_Keywords() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Keywords();
    }
    public func get_DateTaken() throws -> Windows.Foundation.DateTime {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_DateTaken();
    }
    public func put_DateTaken(value : Windows.Foundation.DateTime) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.put_DateTaken(value: value);
    }
    public func get_Width() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Width();
    }
    public func get_Height() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Height();
    }
    public func get_Title() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Title();
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.put_Title(value: value);
    }
    public func get_Latitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Latitude();
    }
    public func get_Longitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Longitude();
    }
    public func get_CameraManufacturer() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_CameraManufacturer();
    }
    public func put_CameraManufacturer(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.put_CameraManufacturer(value: value);
    }
    public func get_CameraModel() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_CameraModel();
    }
    public func put_CameraModel(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.put_CameraModel(value: value);
    }
    public func get_Orientation() throws -> Windows.Storage.FileProperties.PhotoOrientation {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_Orientation();
    }
    public func get_PeopleNames() throws -> Optional<ClosedGenerics.IVectorView_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.get_PeopleNames();
    }
    public var CameraManufacturer : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.CameraManufacturer;
        }
    }
    public var CameraModel : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.CameraModel;
        }
    }
    public var DateTaken : Windows.Foundation.DateTime {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.DateTaken;
        }
    }
    public var Height : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Height;
        }
    }
    public var Keywords : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Keywords;
        }
    }
    public var Latitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Latitude;
        }
    }
    public var Longitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Longitude;
        }
    }
    public var Orientation : Windows.Storage.FileProperties.PhotoOrientation {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Orientation;
        }
    }
    public var PeopleNames : Optional<ClosedGenerics.IVectorView_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.PeopleNames;
        }
    }
    public var Rating : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Rating;
        }
    }
    public var Title : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Title;
        }
    }
    public var Width : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IImageProperties = try _self.QueryInterface();
        return try _ifc.Width;
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsync(propertiesToSave: propertiesToSave);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync() throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsyncOverloadDefault();
    }
    public func SaveProperties() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
}

// type: Windows.Storage.FileProperties.MusicProperties
// runtime class
public class MusicProperties
    :
    WinRT.Object
{
    private var _self : Windows.Storage.FileProperties.IMusicProperties;
    public init(plok: Windows.Storage.FileProperties.IMusicProperties?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.FileProperties.IMusicProperties { return _self; }
    public func get_Album() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Album();
    }
    public func put_Album(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Album(value: value);
    }
    public func get_Artist() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Artist();
    }
    public func put_Artist(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Artist(value: value);
    }
    public func get_Genre() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Genre();
    }
    public func get_TrackNumber() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_TrackNumber();
    }
    public func put_TrackNumber(value : Swift.UInt32) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_TrackNumber(value: value);
    }
    public func get_Title() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Title();
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Title(value: value);
    }
    public func get_Rating() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Rating();
    }
    public func put_Rating(value : Swift.UInt32) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Rating(value: value);
    }
    public func get_Duration() throws -> Windows.Foundation.TimeSpan {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Duration();
    }
    public func get_Bitrate() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Bitrate();
    }
    public func get_AlbumArtist() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_AlbumArtist();
    }
    public func put_AlbumArtist(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_AlbumArtist(value: value);
    }
    public func get_Composers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Composers();
    }
    public func get_Conductors() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Conductors();
    }
    public func get_Subtitle() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Subtitle();
    }
    public func put_Subtitle(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Subtitle(value: value);
    }
    public func get_Producers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Producers();
    }
    public func get_Publisher() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Publisher();
    }
    public func put_Publisher(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Publisher(value: value);
    }
    public func get_Writers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Writers();
    }
    public func get_Year() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.get_Year();
    }
    public func put_Year(value : Swift.UInt32) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.put_Year(value: value);
    }
    public var Album : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Album;
        }
    }
    public var AlbumArtist : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.AlbumArtist;
        }
    }
    public var Artist : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Artist;
        }
    }
    public var Bitrate : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Bitrate;
        }
    }
    public var Composers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Composers;
        }
    }
    public var Conductors : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Conductors;
        }
    }
    public var Duration : Windows.Foundation.TimeSpan {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Duration;
        }
    }
    public var Genre : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Genre;
        }
    }
    public var Producers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Producers;
        }
    }
    public var Publisher : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Publisher;
        }
    }
    public var Rating : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Rating;
        }
    }
    public var Subtitle : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Subtitle;
        }
    }
    public var Title : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Title;
        }
    }
    public var TrackNumber : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.TrackNumber;
        }
    }
    public var Writers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Writers;
        }
    }
    public var Year : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IMusicProperties = try _self.QueryInterface();
        return try _ifc.Year;
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsync(propertiesToSave: propertiesToSave);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync() throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsyncOverloadDefault();
    }
    public func SaveProperties() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
}

// type: Windows.Storage.FileProperties.PhotoOrientation
// enum type
public typealias PhotoOrientation = _q_CWindows_CStorage_CFileProperties_CPhotoOrientation;

// type: Windows.Storage.FileProperties.PropertyPrefetchOptions
// enum type
public typealias PropertyPrefetchOptions = _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions;

// type: Windows.Storage.FileProperties.StorageItemContentProperties
// runtime class
public class StorageItemContentProperties
    :
    WinRT.Object
{
    private var _self : Windows.Storage.FileProperties.IStorageItemContentProperties;
    public init(plok: Windows.Storage.FileProperties.IStorageItemContentProperties?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.FileProperties.IStorageItemContentProperties { return _self; }
    public func GetMusicPropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CMusicProperties> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemContentProperties = try _self.QueryInterface();
        return try _ifc.GetMusicPropertiesAsync();
    }
    public func GetMusicProperties() async throws -> Optional<Windows.Storage.FileProperties.MusicProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Storage.FileProperties.MusicProperties(plok: self.GetMusicPropertiesAsync()!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetVideoPropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CVideoProperties> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemContentProperties = try _self.QueryInterface();
        return try _ifc.GetVideoPropertiesAsync();
    }
    public func GetVideoProperties() async throws -> Optional<Windows.Storage.FileProperties.VideoProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Storage.FileProperties.VideoProperties(plok: self.GetVideoPropertiesAsync()!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetImagePropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CImageProperties> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemContentProperties = try _self.QueryInterface();
        return try _ifc.GetImagePropertiesAsync();
    }
    public func GetImageProperties() async throws -> Optional<Windows.Storage.FileProperties.ImageProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Storage.FileProperties.ImageProperties(plok: self.GetImagePropertiesAsync()!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetDocumentPropertiesAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CFileProperties_CDocumentProperties> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemContentProperties = try _self.QueryInterface();
        return try _ifc.GetDocumentPropertiesAsync();
    }
    public func GetDocumentProperties() async throws -> Optional<Windows.Storage.FileProperties.DocumentProperties> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Storage.FileProperties.DocumentProperties(plok: self.GetDocumentPropertiesAsync()!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsync(propertiesToSave: propertiesToSave);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync() throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsyncOverloadDefault();
    }
    public func SaveProperties() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
}

// type: Windows.Storage.FileProperties.StorageItemThumbnail
// runtime class
public class StorageItemThumbnail
    :
    WinRT.Object
{
    private var _self : Windows.Storage.Streams.IRandomAccessStreamWithContentType;
    public init(plok: Windows.Storage.Streams.IRandomAccessStreamWithContentType?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.Streams.IRandomAccessStreamWithContentType { return _self; }
    public func get_ContentType() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.Streams.IContentTypeProvider = try _self.QueryInterface();
        return try _ifc.get_ContentType();
    }
    public var ContentType : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.Streams.IContentTypeProvider = try _self.QueryInterface();
        return try _ifc.ContentType;
        }
    }
    public func get_Size() throws -> Swift.UInt64 {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.get_Size();
    }
    public func put_Size(value : Swift.UInt64) throws -> Void {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.put_Size(value: value);
    }
    public func GetInputStreamAt(position : Swift.UInt64) throws -> Optional<Windows.Storage.Streams.IInputStream> {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.GetInputStreamAt(position: position);
    }
    public func GetOutputStreamAt(position : Swift.UInt64) throws -> Optional<Windows.Storage.Streams.IOutputStream> {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.GetOutputStreamAt(position: position);
    }
    public func get_Position() throws -> Swift.UInt64 {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.get_Position();
    }
    public func Seek(position : Swift.UInt64) throws -> Void {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.Seek(position: position);
    }
    public func CloneStream() throws -> Optional<Windows.Storage.Streams.IRandomAccessStream> {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.CloneStream();
    }
    public func get_CanRead() throws -> boolean {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.get_CanRead();
    }
    public func get_CanWrite() throws -> boolean {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.get_CanWrite();
    }
    public var CanRead : boolean {
        get throws {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.CanRead;
        }
    }
    public var CanWrite : boolean {
        get throws {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.CanWrite;
        }
    }
    public var Position : Swift.UInt64 {
        get throws {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.Position;
        }
    }
    public var Size : Swift.UInt64 {
        get throws {
        let _ifc : Windows.Storage.Streams.IRandomAccessStream = try _self.QueryInterface();
        return try _ifc.Size;
        }
    }
    public func WriteAsync(buffer : Optional<Windows.Storage.Streams.IBuffer>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT32_UINT32> {
        let _ifc : Windows.Storage.Streams.IOutputStream = try _self.QueryInterface();
        return try _ifc.WriteAsync(buffer: buffer);
    }
    public func Write(buffer : Optional<Windows.Storage.Streams.IBuffer>) async throws -> Swift.UInt32 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteAsync(buffer: buffer)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func FlushAsync() throws -> Optional<ClosedGenerics.IAsyncOperation_1_boolean> {
        let _ifc : Windows.Storage.Streams.IOutputStream = try _self.QueryInterface();
        return try _ifc.FlushAsync();
    }
    public func Flush() async throws -> boolean {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.FlushAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ReadAsync(buffer : Optional<Windows.Storage.Streams.IBuffer>, count : Swift.UInt32, options : Windows.Storage.Streams.InputStreamOptions) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT32> {
        let _ifc : Windows.Storage.Streams.IInputStream = try _self.QueryInterface();
        return try _ifc.ReadAsync(buffer: buffer, count: count, options: options);
    }
    public func Read(buffer : Optional<Windows.Storage.Streams.IBuffer>, count : Swift.UInt32, options : Windows.Storage.Streams.InputStreamOptions) async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsync(buffer: buffer, count: count, options: options)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func get_OriginalWidth() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.get_OriginalWidth();
    }
    public func get_OriginalHeight() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.get_OriginalHeight();
    }
    public func get_ReturnedSmallerCachedSize() throws -> boolean {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.get_ReturnedSmallerCachedSize();
    }
    public func get_Type() throws -> Windows.Storage.FileProperties.ThumbnailType {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.get_Type();
    }
    public var OriginalHeight : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.OriginalHeight;
        }
    }
    public var OriginalWidth : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.OriginalWidth;
        }
    }
    public var ReturnedSmallerCachedSize : boolean {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.ReturnedSmallerCachedSize;
        }
    }
    public var Type_ : Windows.Storage.FileProperties.ThumbnailType {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IThumbnailProperties = try _self.QueryInterface();
        return try _ifc.Type_;
        }
    }
}

// type: Windows.Storage.FileProperties.ThumbnailMode
// enum type
public typealias ThumbnailMode = _q_CWindows_CStorage_CFileProperties_CThumbnailMode;

// type: Windows.Storage.FileProperties.ThumbnailOptions
// enum type
public typealias ThumbnailOptions = _q_CWindows_CStorage_CFileProperties_CThumbnailOptions;

// type: Windows.Storage.FileProperties.ThumbnailType
// enum type
public typealias ThumbnailType = _q_CWindows_CStorage_CFileProperties_CThumbnailType;

// type: Windows.Storage.FileProperties.VideoOrientation
// enum type
public typealias VideoOrientation = _q_CWindows_CStorage_CFileProperties_CVideoOrientation;

// type: Windows.Storage.FileProperties.VideoProperties
// runtime class
public class VideoProperties
    :
    WinRT.Object
{
    private var _self : Windows.Storage.FileProperties.IVideoProperties;
    public init(plok: Windows.Storage.FileProperties.IVideoProperties?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Storage.FileProperties.IVideoProperties { return _self; }
    public func get_Rating() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Rating();
    }
    public func put_Rating(value : Swift.UInt32) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.put_Rating(value: value);
    }
    public func get_Keywords() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Keywords();
    }
    public func get_Width() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Width();
    }
    public func get_Height() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Height();
    }
    public func get_Duration() throws -> Windows.Foundation.TimeSpan {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Duration();
    }
    public func get_Latitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Latitude();
    }
    public func get_Longitude() throws -> Optional<ClosedGenerics.IReference_1_DOUBLE> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Longitude();
    }
    public func get_Title() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Title();
    }
    public func put_Title(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.put_Title(value: value);
    }
    public func get_Subtitle() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Subtitle();
    }
    public func put_Subtitle(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.put_Subtitle(value: value);
    }
    public func get_Producers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Producers();
    }
    public func get_Publisher() throws -> Optional<Swift.String> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Publisher();
    }
    public func put_Publisher(value : Swift.String) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.put_Publisher(value: value);
    }
    public func get_Writers() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Writers();
    }
    public func get_Year() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Year();
    }
    public func put_Year(value : Swift.UInt32) throws -> Void {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.put_Year(value: value);
    }
    public func get_Bitrate() throws -> Swift.UInt32 {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Bitrate();
    }
    public func get_Directors() throws -> Optional<ClosedGenerics.IVector_1_HSTRING> {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Directors();
    }
    public func get_Orientation() throws -> Windows.Storage.FileProperties.VideoOrientation {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.get_Orientation();
    }
    public var Bitrate : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Bitrate;
        }
    }
    public var Directors : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Directors;
        }
    }
    public var Duration : Windows.Foundation.TimeSpan {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Duration;
        }
    }
    public var Height : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Height;
        }
    }
    public var Keywords : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Keywords;
        }
    }
    public var Latitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Latitude;
        }
    }
    public var Longitude : Optional<ClosedGenerics.IReference_1_DOUBLE> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Longitude;
        }
    }
    public var Orientation : Windows.Storage.FileProperties.VideoOrientation {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Orientation;
        }
    }
    public var Producers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Producers;
        }
    }
    public var Publisher : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Publisher;
        }
    }
    public var Rating : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Rating;
        }
    }
    public var Subtitle : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Subtitle;
        }
    }
    public var Title : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Title;
        }
    }
    public var Width : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Width;
        }
    }
    public var Writers : Optional<ClosedGenerics.IVector_1_HSTRING> {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Writers;
        }
    }
    public var Year : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Storage.FileProperties.IVideoProperties = try _self.QueryInterface();
        return try _ifc.Year;
        }
    }
    public func RetrievePropertiesAsync(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) throws -> Optional<ClosedGenerics.IAsyncOperation_1__cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve);
    }
    public func RetrieveProperties(propertiesToRetrieve : Optional<ClosedGenerics.IIterable_1_HSTRING>) async throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.RetrievePropertiesAsync(propertiesToRetrieve: propertiesToRetrieve)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsync(propertiesToSave: propertiesToSave);
    }
    public func SaveProperties(propertiesToSave : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_IInspectable>) async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync(propertiesToSave: propertiesToSave)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SavePropertiesAsync() throws -> Optional<Windows.Foundation.IAsyncAction> {
        let _ifc : Windows.Storage.FileProperties.IStorageItemExtraProperties = try _self.QueryInterface();
        return try _ifc.SavePropertiesAsyncOverloadDefault();
    }
    public func SaveProperties() async throws -> Void {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SavePropertiesAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
}

}
extension Windows.Storage.FileProperties.PhotoOrientation {
    public static var Unspecified : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Unspecified;
        }
    }
    public static var Normal : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Normal;
        }
    }
    public static var FlipHorizontal : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_FlipHorizontal;
        }
    }
    public static var Rotate180 : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Rotate180;
        }
    }
    public static var FlipVertical : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_FlipVertical;
        }
    }
    public static var Transpose : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Transpose;
        }
    }
    public static var Rotate270 : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Rotate270;
        }
    }
    public static var Transverse : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Transverse;
        }
    }
    public static var Rotate90 : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPhotoOrientation_Rotate90;
        }
    }
}
extension Windows.Storage.FileProperties.PropertyPrefetchOptions {
    public static var None : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_None;
        }
    }
    public static var MusicProperties : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_MusicProperties;
        }
    }
    public static var VideoProperties : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_VideoProperties;
        }
    }
    public static var ImageProperties : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_ImageProperties;
        }
    }
    public static var DocumentProperties : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_DocumentProperties;
        }
    }
    public static var BasicProperties : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CPropertyPrefetchOptions_BasicProperties;
        }
    }
}
extension Windows.Storage.FileProperties.ThumbnailMode {
    public static var PicturesView : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailMode_PicturesView;
        }
    }
    public static var VideosView : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailMode_VideosView;
        }
    }
    public static var MusicView : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailMode_MusicView;
        }
    }
    public static var DocumentsView : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailMode_DocumentsView;
        }
    }
    public static var ListView : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailMode_ListView;
        }
    }
    public static var SingleItem : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailMode_SingleItem;
        }
    }
}
extension Windows.Storage.FileProperties.ThumbnailOptions {
    public static var None : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_None;
        }
    }
    public static var ReturnOnlyIfCached : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_ReturnOnlyIfCached;
        }
    }
    public static var ResizeThumbnail : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_ResizeThumbnail;
        }
    }
    public static var UseCurrentScale : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailOptions_UseCurrentScale;
        }
    }
}
extension Windows.Storage.FileProperties.ThumbnailType {
    public static var Image : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailType_Image;
        }
    }
    public static var Icon : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CThumbnailType_Icon;
        }
    }
}
extension Windows.Storage.FileProperties.VideoOrientation {
    public static var Normal : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Normal;
        }
    }
    public static var Rotate90 : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Rotate90;
        }
    }
    public static var Rotate180 : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Rotate180;
        }
    }
    public static var Rotate270 : Self {
        get {
            return _q_CWindows_CStorage_CFileProperties_CVideoOrientation_Rotate270;
        }
    }
}
