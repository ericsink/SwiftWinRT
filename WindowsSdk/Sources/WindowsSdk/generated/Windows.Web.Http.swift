// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.Web.Http {
// type: Windows.Web.Http.HttpBufferContent
// runtime class
public class HttpBufferContent
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpContent;
    public init(plok: Windows.Web.Http.IHttpContent?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpContent { return _self; }
    public init(content : Optional<Windows.Storage.Streams.IBuffer>) throws {
        let _af : IHttpBufferContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpBufferContent");
        _self = try _af.CreateFromBuffer(content: content)!;
        try super.init(plok: _self.QueryInterface())
    }
    public init(content : Optional<Windows.Storage.Streams.IBuffer>, offset : Swift.UInt32, count : Swift.UInt32) throws {
        let _af : IHttpBufferContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpBufferContent");
        _self = try _af.CreateFromBufferWithOffset(content: content, offset: offset, count: count)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.get_Headers());
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.BufferAllAsync();
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsBufferAsync();
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsInputStreamAsync();
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsStringAsync();
    }
    public func ReadAsString() async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
            var _tmp_out_length: Swift.UInt64 = 0;
        return try _ifc.TryComputeLength(length: &_tmp_out_length);
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.WriteToStreamAsync(outputStream: outputStream);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.Headers);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpClient
// runtime class
public class HttpClient
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpClient;
    public init(plok: Windows.Web.Http.IHttpClient?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpClient { return _self; }
    public init() throws {
        _self = try RoActivateInstance("Windows.Web.Http.HttpClient")
        try super.init(plok: _self.QueryInterface())
    }
    public init(filter : Optional<Windows.Web.Http.Filters.IHttpFilter>) throws {
        let _af : IHttpClientFactory = try RoGetActivationFactory("Windows.Web.Http.HttpClient");
        _self = try _af.Create(filter: filter)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func DeleteAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.DeleteAsync(uri: uri!.Interface());
    }
    public func Delete(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.DeleteAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.GetAsync(uri: uri!.Interface());
    }
    public func Get(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.GetAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetAsync(uri : Optional<Windows.Foundation.Uri>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.GetWithOptionAsync(uri: uri!.Interface(), completionOption: completionOption);
    }
    public func Get(uri : Optional<Windows.Foundation.Uri>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.GetAsync(uri: uri, completionOption: completionOption)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetBufferAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.GetBufferAsync(uri: uri!.Interface());
    }
    public func GetBuffer(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetBufferAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetInputStreamAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.GetInputStreamAsync(uri: uri!.Interface());
    }
    public func GetInputStream(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetInputStreamAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func GetStringAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.GetStringAsync(uri: uri!.Interface());
    }
    public func GetString(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetStringAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func PostAsync(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.PostAsync(uri: uri!.Interface(), content: content);
    }
    public func Post(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.PostAsync(uri: uri, content: content)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func PutAsync(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.PutAsync(uri: uri!.Interface(), content: content);
    }
    public func Put(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.PutAsync(uri: uri, content: content)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SendRequestAsync(request : Optional<Windows.Web.Http.HttpRequestMessage>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.SendRequestAsync(request: request!.Interface());
    }
    public func SendRequest(request : Optional<Windows.Web.Http.HttpRequestMessage>) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.SendRequestAsync(request: request)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func SendRequestAsync(request : Optional<Windows.Web.Http.HttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try _ifc.SendRequestWithOptionAsync(request: request!.Interface(), completionOption: completionOption);
    }
    public func SendRequest(request : Optional<Windows.Web.Http.HttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpResponseMessage(plok: self.SendRequestAsync(request: request, completionOption: completionOption)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func get_DefaultRequestHeaders() throws -> Optional<Windows.Web.Http.Headers.HttpRequestHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpRequestHeaderCollection(plok: _ifc.get_DefaultRequestHeaders());
    }
    public var DefaultRequestHeaders : Optional<Windows.Web.Http.Headers.HttpRequestHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpClient = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpRequestHeaderCollection(plok: _ifc.DefaultRequestHeaders);
        }
    }
    public func TryDeleteAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryDeleteAsync(uri: uri!.Interface());
    }
    public func TryDelete(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TryDeleteAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryGetAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryGetAsync(uri: uri!.Interface());
    }
    public func TryGet(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TryGetAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryGetAsync(uri : Optional<Windows.Foundation.Uri>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryGetAsync2(uri: uri!.Interface(), completionOption: completionOption);
    }
    public func TryGet(uri : Optional<Windows.Foundation.Uri>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TryGetAsync(uri: uri, completionOption: completionOption)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryGetBufferAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryGetBufferAsync(uri: uri!.Interface());
    }
    public func TryGetBuffer(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpGetBufferResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpGetBufferResult(plok: self.TryGetBufferAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryGetInputStreamAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryGetInputStreamAsync(uri: uri!.Interface());
    }
    public func TryGetInputStream(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpGetInputStreamResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpGetInputStreamResult(plok: self.TryGetInputStreamAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryGetStringAsync(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryGetStringAsync(uri: uri!.Interface());
    }
    public func TryGetString(uri : Optional<Windows.Foundation.Uri>) async throws -> Optional<Windows.Web.Http.HttpGetStringResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpGetStringResult(plok: self.TryGetStringAsync(uri: uri)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryPostAsync(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryPostAsync(uri: uri!.Interface(), content: content);
    }
    public func TryPost(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TryPostAsync(uri: uri, content: content)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryPutAsync(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TryPutAsync(uri: uri!.Interface(), content: content);
    }
    public func TryPut(uri : Optional<Windows.Foundation.Uri>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TryPutAsync(uri: uri, content: content)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TrySendRequestAsync(request : Optional<Windows.Web.Http.HttpRequestMessage>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TrySendRequestAsync(request: request!.Interface());
    }
    public func TrySendRequest(request : Optional<Windows.Web.Http.HttpRequestMessage>) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TrySendRequestAsync(request: request)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TrySendRequestAsync(request : Optional<Windows.Web.Http.HttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        let _ifc : Windows.Web.Http.IHttpClient2 = try _self.QueryInterface();
        return try _ifc.TrySendRequestAsync2(request: request!.Interface(), completionOption: completionOption);
    }
    public func TrySendRequest(request : Optional<Windows.Web.Http.HttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.HttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: Windows.Web.Http.HttpRequestResult(plok: self.TrySendRequestAsync(request: request, completionOption: completionOption)!.get()))
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpCompletionOption
// enum type
public typealias HttpCompletionOption = _q_CWindows_CWeb_CHttp_CHttpCompletionOption;

// type: Windows.Web.Http.HttpCookie
// runtime class
public class HttpCookie
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpCookie;
    public init(plok: Windows.Web.Http.IHttpCookie?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpCookie { return _self; }
    public init(name : Swift.String, domain : Swift.String, path : Swift.String) throws {
        let _af : IHttpCookieFactory = try RoGetActivationFactory("Windows.Web.Http.HttpCookie");
        _self = try _af.Create(name: name, domain: domain, path: path)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Name() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_Name();
    }
    public func get_Domain() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_Domain();
    }
    public func get_Path() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_Path();
    }
    public func get_Expires() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_Expires();
    }
    public func put_Expires(value : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.put_Expires(value: value);
    }
    public func get_HttpOnly() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_HttpOnly();
    }
    public func put_HttpOnly(value : boolean) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.put_HttpOnly(value: value);
    }
    public func get_Secure() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_Secure();
    }
    public func put_Secure(value : boolean) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.put_Secure(value: value);
    }
    public func get_Value() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.get_Value();
    }
    public func put_Value(value : Swift.String) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.put_Value(value: value);
    }
    public var Domain : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.Domain;
        }
    }
    public var Expires : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.Expires;
        }
    }
    public var HttpOnly : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.HttpOnly;
        }
    }
    public var Name : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.Name;
        }
    }
    public var Path : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.Path;
        }
    }
    public var Secure : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.Secure;
        }
    }
    public var Value : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpCookie = try _self.QueryInterface();
        return try _ifc.Value;
        }
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpCookieCollection
// runtime class
public class HttpCookieCollection
    :
    WinRT.Object
{
    private var _self : ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie;
    public init(plok: ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie { return _self; }
    // method not needed: GetAt
    // method not needed: get_Size
    // method not needed: IndexOf
    // method not needed: GetMany
    // method not needed: First
}

// type: Windows.Web.Http.HttpCookieManager
// runtime class
public class HttpCookieManager
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpCookieManager;
    public init(plok: Windows.Web.Http.IHttpCookieManager?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpCookieManager { return _self; }
    public func SetCookie(cookie : Optional<Windows.Web.Http.HttpCookie>) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpCookieManager = try _self.QueryInterface();
        return try _ifc.SetCookie(cookie: cookie!.Interface());
    }
    public func SetCookie(cookie : Optional<Windows.Web.Http.HttpCookie>, thirdParty : boolean) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpCookieManager = try _self.QueryInterface();
        return try _ifc.SetCookieWithThirdParty(cookie: cookie!.Interface(), thirdParty: thirdParty);
    }
    public func DeleteCookie(cookie : Optional<Windows.Web.Http.HttpCookie>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpCookieManager = try _self.QueryInterface();
        return try _ifc.DeleteCookie(cookie: cookie!.Interface());
    }
    public func GetCookies(uri : Optional<Windows.Foundation.Uri>) throws -> Optional<Windows.Web.Http.HttpCookieCollection> {
        let _ifc : Windows.Web.Http.IHttpCookieManager = try _self.QueryInterface();
        return try Windows.Web.Http.HttpCookieCollection(plok: _ifc.GetCookies(uri: uri!.Interface()));
    }
}

// type: Windows.Web.Http.HttpFormUrlEncodedContent
// runtime class
public class HttpFormUrlEncodedContent
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpContent;
    public init(plok: Windows.Web.Http.IHttpContent?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpContent { return _self; }
    public init(content : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING>) throws {
        let _af : IHttpFormUrlEncodedContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpFormUrlEncodedContent");
        _self = try _af.Create(content: content)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.get_Headers());
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.BufferAllAsync();
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsBufferAsync();
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsInputStreamAsync();
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsStringAsync();
    }
    public func ReadAsString() async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
            var _tmp_out_length: Swift.UInt64 = 0;
        return try _ifc.TryComputeLength(length: &_tmp_out_length);
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.WriteToStreamAsync(outputStream: outputStream);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.Headers);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpGetBufferResult
// runtime class
public class HttpGetBufferResult
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpGetBufferResult;
    public init(plok: Windows.Web.Http.IHttpGetBufferResult?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpGetBufferResult { return _self; }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try _ifc.get_ExtendedError();
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_RequestMessage());
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.get_ResponseMessage());
    }
    public func get_Succeeded() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try _ifc.get_Succeeded();
    }
    public func get_Value() throws -> Optional<Windows.Storage.Streams.IBuffer> {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try _ifc.get_Value();
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try _ifc.ExtendedError;
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.RequestMessage);
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.HttpResponseMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.ResponseMessage);
        }
    }
    public var Succeeded : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try _ifc.Succeeded;
        }
    }
    public var Value : Optional<Windows.Storage.Streams.IBuffer> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetBufferResult = try _self.QueryInterface();
        return try _ifc.Value;
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpGetInputStreamResult
// runtime class
public class HttpGetInputStreamResult
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpGetInputStreamResult;
    public init(plok: Windows.Web.Http.IHttpGetInputStreamResult?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpGetInputStreamResult { return _self; }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try _ifc.get_ExtendedError();
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_RequestMessage());
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.get_ResponseMessage());
    }
    public func get_Succeeded() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try _ifc.get_Succeeded();
    }
    public func get_Value() throws -> Optional<Windows.Storage.Streams.IInputStream> {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try _ifc.get_Value();
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try _ifc.ExtendedError;
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.RequestMessage);
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.HttpResponseMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.ResponseMessage);
        }
    }
    public var Succeeded : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try _ifc.Succeeded;
        }
    }
    public var Value : Optional<Windows.Storage.Streams.IInputStream> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetInputStreamResult = try _self.QueryInterface();
        return try _ifc.Value;
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpGetStringResult
// runtime class
public class HttpGetStringResult
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpGetStringResult;
    public init(plok: Windows.Web.Http.IHttpGetStringResult?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpGetStringResult { return _self; }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try _ifc.get_ExtendedError();
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_RequestMessage());
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.get_ResponseMessage());
    }
    public func get_Succeeded() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try _ifc.get_Succeeded();
    }
    public func get_Value() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try _ifc.get_Value();
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try _ifc.ExtendedError;
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.RequestMessage);
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.HttpResponseMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.ResponseMessage);
        }
    }
    public var Succeeded : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try _ifc.Succeeded;
        }
    }
    public var Value : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpGetStringResult = try _self.QueryInterface();
        return try _ifc.Value;
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpMethod
// runtime class
public class HttpMethod
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpMethod;
    public init(plok: Windows.Web.Http.IHttpMethod?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpMethod { return _self; }
    public init(method : Swift.String) throws {
        let _af : IHttpMethodFactory = try RoGetActivationFactory("Windows.Web.Http.HttpMethod");
        _self = try _af.Create(method: method)!;
        try super.init(plok: _self.QueryInterface())
    }
    private struct _IHttpMethodStatics {
        static var x : IHttpMethodStatics =
            try! RoGetActivationFactory("Windows.Web.Http.HttpMethod")
    }
    public static var HttpMethodStatics : IHttpMethodStatics {
        _IHttpMethodStatics.x
    }
    public static func get_Delete() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Delete());
    }
    public static func get_Get() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Get());
    }
    public static func get_Head() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Head());
    }
    public static func get_Options() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Options());
    }
    public static func get_Patch() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Patch());
    }
    public static func get_Post() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Post());
    }
    public static func get_Put() throws -> Optional<Windows.Web.Http.HttpMethod> {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.get_Put());
    }
    public static var Delete : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Delete);
        }
    }
    public static var Get : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Get);
        }
    }
    public static var Head : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Head);
        }
    }
    public static var Options : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Options);
        }
    }
    public static var Patch : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Patch);
        }
    }
    public static var Post : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Post);
        }
    }
    public static var Put : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        return try Windows.Web.Http.HttpMethod(plok: HttpMethodStatics.Put);
        }
    }
    public func get_Method() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpMethod = try _self.QueryInterface();
        return try _ifc.get_Method();
    }
    public var Method : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpMethod = try _self.QueryInterface();
        return try _ifc.Method;
        }
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpMultipartContent
// runtime class
public class HttpMultipartContent
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpContent;
    public init(plok: Windows.Web.Http.IHttpContent?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpContent { return _self; }
    public init() throws {
        _self = try RoActivateInstance("Windows.Web.Http.HttpMultipartContent")
        try super.init(plok: _self.QueryInterface())
    }
    public init(subtype : Swift.String) throws {
        let _af : IHttpMultipartContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpMultipartContent");
        _self = try _af.CreateWithSubtype(subtype: subtype)!;
        try super.init(plok: _self.QueryInterface())
    }
    public init(subtype : Swift.String, boundary : Swift.String) throws {
        let _af : IHttpMultipartContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpMultipartContent");
        _self = try _af.CreateWithSubtypeAndBoundary(subtype: subtype, boundary: boundary)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func Add(content : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpMultipartContent = try _self.QueryInterface();
        return try _ifc.Add(content: content);
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.get_Headers());
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.BufferAllAsync();
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsBufferAsync();
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsInputStreamAsync();
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsStringAsync();
    }
    public func ReadAsString() async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
            var _tmp_out_length: Swift.UInt64 = 0;
        return try _ifc.TryComputeLength(length: &_tmp_out_length);
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.WriteToStreamAsync(outputStream: outputStream);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.Headers);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    // method not needed: First
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpMultipartFormDataContent
// runtime class
public class HttpMultipartFormDataContent
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpContent;
    public init(plok: Windows.Web.Http.IHttpContent?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpContent { return _self; }
    public init(boundary : Swift.String) throws {
        let _af : IHttpMultipartFormDataContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpMultipartFormDataContent");
        _self = try _af.CreateWithBoundary(boundary: boundary)!;
        try super.init(plok: _self.QueryInterface())
    }
    public init() throws {
        _self = try RoActivateInstance("Windows.Web.Http.HttpMultipartFormDataContent")
        try super.init(plok: _self.QueryInterface())
    }
    public func Add(content : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpMultipartFormDataContent = try _self.QueryInterface();
        return try _ifc.Add(content: content);
    }
    public func Add(content : Optional<Windows.Web.Http.IHttpContent>, name : Swift.String) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpMultipartFormDataContent = try _self.QueryInterface();
        return try _ifc.AddWithName(content: content, name: name);
    }
    public func Add(content : Optional<Windows.Web.Http.IHttpContent>, name : Swift.String, fileName : Swift.String) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpMultipartFormDataContent = try _self.QueryInterface();
        return try _ifc.AddWithNameAndFileName(content: content, name: name, fileName: fileName);
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.get_Headers());
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.BufferAllAsync();
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsBufferAsync();
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsInputStreamAsync();
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsStringAsync();
    }
    public func ReadAsString() async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
            var _tmp_out_length: Swift.UInt64 = 0;
        return try _ifc.TryComputeLength(length: &_tmp_out_length);
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.WriteToStreamAsync(outputStream: outputStream);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.Headers);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    // method not needed: First
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpProgress
// struct type
public typealias HttpProgress = _q_CWindows_CWeb_CHttp_CHttpProgress;

// type: Windows.Web.Http.HttpProgressStage
// enum type
public typealias HttpProgressStage = _q_CWindows_CWeb_CHttp_CHttpProgressStage;

// type: Windows.Web.Http.HttpRequestMessage
// runtime class
public class HttpRequestMessage
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpRequestMessage;
    public init(plok: Windows.Web.Http.IHttpRequestMessage?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpRequestMessage { return _self; }
    public init(method : Optional<Windows.Web.Http.HttpMethod>, uri : Optional<Windows.Foundation.Uri>) throws {
        let _af : IHttpRequestMessageFactory = try RoGetActivationFactory("Windows.Web.Http.HttpRequestMessage");
        _self = try _af.Create(method: method!.Interface(), uri: uri!.Interface())!;
        try super.init(plok: _self.QueryInterface())
    }
    public init() throws {
        _self = try RoActivateInstance("Windows.Web.Http.HttpRequestMessage")
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Content() throws -> Optional<Windows.Web.Http.IHttpContent> {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.get_Content();
    }
    public func put_Content(value : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.put_Content(value: value);
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpRequestHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpRequestHeaderCollection(plok: _ifc.get_Headers());
    }
    public func get_Method() throws -> Optional<Windows.Web.Http.HttpMethod> {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpMethod(plok: _ifc.get_Method());
    }
    public func put_Method(value : Optional<Windows.Web.Http.HttpMethod>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.put_Method(value: value!.Interface());
    }
    public func get_Properties() throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.get_Properties();
    }
    public func get_RequestUri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_RequestUri());
    }
    public func put_RequestUri(value : Optional<Windows.Foundation.Uri>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.put_RequestUri(value: value!.Interface());
    }
    public func get_TransportInformation() throws -> Optional<Windows.Web.Http.HttpTransportInformation> {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpTransportInformation(plok: _ifc.get_TransportInformation());
    }
    public var Content : Optional<Windows.Web.Http.IHttpContent> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.Content;
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpRequestHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpRequestHeaderCollection(plok: _ifc.Headers);
        }
    }
    public var Method : Optional<Windows.Web.Http.HttpMethod> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpMethod(plok: _ifc.Method);
        }
    }
    public var Properties : Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try _ifc.Properties;
        }
    }
    public var RequestUri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.RequestUri);
        }
    }
    public var TransportInformation : Optional<Windows.Web.Http.HttpTransportInformation> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpTransportInformation(plok: _ifc.TransportInformation);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpRequestResult
// runtime class
public class HttpRequestResult
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpRequestResult;
    public init(plok: Windows.Web.Http.IHttpRequestResult?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpRequestResult { return _self; }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try _ifc.get_ExtendedError();
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_RequestMessage());
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.get_ResponseMessage());
    }
    public func get_Succeeded() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try _ifc.get_Succeeded();
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try _ifc.ExtendedError;
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.RequestMessage);
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.HttpResponseMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.ResponseMessage);
        }
    }
    public var Succeeded : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpRequestResult = try _self.QueryInterface();
        return try _ifc.Succeeded;
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpResponseMessage
// runtime class
public class HttpResponseMessage
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpResponseMessage;
    public init(plok: Windows.Web.Http.IHttpResponseMessage?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpResponseMessage { return _self; }
    public init() throws {
        _self = try RoActivateInstance("Windows.Web.Http.HttpResponseMessage")
        try super.init(plok: _self.QueryInterface())
    }
    public init(statusCode : Windows.Web.Http.HttpStatusCode) throws {
        let _af : IHttpResponseMessageFactory = try RoGetActivationFactory("Windows.Web.Http.HttpResponseMessage");
        _self = try _af.Create(statusCode: statusCode)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Content() throws -> Optional<Windows.Web.Http.IHttpContent> {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.get_Content();
    }
    public func put_Content(value : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.put_Content(value: value);
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpResponseHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpResponseHeaderCollection(plok: _ifc.get_Headers());
    }
    public func get_IsSuccessStatusCode() throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.get_IsSuccessStatusCode();
    }
    public func get_ReasonPhrase() throws -> Optional<Swift.String> {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.get_ReasonPhrase();
    }
    public func put_ReasonPhrase(value : Swift.String) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.put_ReasonPhrase(value: value);
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_RequestMessage());
    }
    public func put_RequestMessage(value : Optional<Windows.Web.Http.HttpRequestMessage>) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.put_RequestMessage(value: value!.Interface());
    }
    public func get_Source() throws -> Windows.Web.Http.HttpResponseMessageSource {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.get_Source();
    }
    public func put_Source(value : Windows.Web.Http.HttpResponseMessageSource) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.put_Source(value: value);
    }
    public func get_StatusCode() throws -> Windows.Web.Http.HttpStatusCode {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.get_StatusCode();
    }
    public func put_StatusCode(value : Windows.Web.Http.HttpStatusCode) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.put_StatusCode(value: value);
    }
    public func get_Version() throws -> Windows.Web.Http.HttpVersion {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.get_Version();
    }
    public func put_Version(value : Windows.Web.Http.HttpVersion) throws -> Void {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.put_Version(value: value);
    }
    public func EnsureSuccessStatusCode() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.EnsureSuccessStatusCode());
    }
    public var Content : Optional<Windows.Web.Http.IHttpContent> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.Content;
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpResponseHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpResponseHeaderCollection(plok: _ifc.Headers);
        }
    }
    public var IsSuccessStatusCode : boolean {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.IsSuccessStatusCode;
        }
    }
    public var ReasonPhrase : Optional<Swift.String> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.ReasonPhrase;
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.RequestMessage);
        }
    }
    public var Source : Windows.Web.Http.HttpResponseMessageSource {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.Source;
        }
    }
    public var StatusCode : Windows.Web.Http.HttpStatusCode {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.StatusCode;
        }
    }
    public var Version : Windows.Web.Http.HttpVersion {
        get throws {
        let _ifc : Windows.Web.Http.IHttpResponseMessage = try _self.QueryInterface();
        return try _ifc.Version;
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpResponseMessageSource
// enum type
public typealias HttpResponseMessageSource = _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource;

// type: Windows.Web.Http.HttpStatusCode
// enum type
public typealias HttpStatusCode = _q_CWindows_CWeb_CHttp_CHttpStatusCode;

// type: Windows.Web.Http.HttpStreamContent
// runtime class
public class HttpStreamContent
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpContent;
    public init(plok: Windows.Web.Http.IHttpContent?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpContent { return _self; }
    public init(content : Optional<Windows.Storage.Streams.IInputStream>) throws {
        let _af : IHttpStreamContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpStreamContent");
        _self = try _af.CreateFromInputStream(content: content)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.get_Headers());
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.BufferAllAsync();
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsBufferAsync();
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsInputStreamAsync();
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsStringAsync();
    }
    public func ReadAsString() async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
            var _tmp_out_length: Swift.UInt64 = 0;
        return try _ifc.TryComputeLength(length: &_tmp_out_length);
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.WriteToStreamAsync(outputStream: outputStream);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.Headers);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpStringContent
// runtime class
public class HttpStringContent
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpContent;
    public init(plok: Windows.Web.Http.IHttpContent?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpContent { return _self; }
    public init(content : Swift.String) throws {
        let _af : IHttpStringContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpStringContent");
        _self = try _af.CreateFromString(content: content)!;
        try super.init(plok: _self.QueryInterface())
    }
    public init(content : Swift.String, encoding : Windows.Storage.Streams.UnicodeEncoding) throws {
        let _af : IHttpStringContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpStringContent");
        _self = try _af.CreateFromStringWithEncoding(content: content, encoding: encoding)!;
        try super.init(plok: _self.QueryInterface())
    }
    public init(content : Swift.String, encoding : Windows.Storage.Streams.UnicodeEncoding, mediaType : Swift.String) throws {
        let _af : IHttpStringContentFactory = try RoGetActivationFactory("Windows.Web.Http.HttpStringContent");
        _self = try _af.CreateFromStringWithEncodingAndMediaType(content: content, encoding: encoding, mediaType: mediaType)!;
        try super.init(plok: _self.QueryInterface())
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.get_Headers());
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.BufferAllAsync();
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsBufferAsync();
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsInputStreamAsync();
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.ReadAsStringAsync();
    }
    public func ReadAsString() async throws -> Optional<Swift.String> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
            var _tmp_out_length: Swift.UInt64 = 0;
        return try _ifc.TryComputeLength(length: &_tmp_out_length);
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try _ifc.WriteToStreamAsync(outputStream: outputStream);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.HttpContentHeaderCollection> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpContent = try _self.QueryInterface();
        return try Windows.Web.Http.Headers.HttpContentHeaderCollection(plok: _ifc.Headers);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpTransportInformation
// runtime class
public class HttpTransportInformation
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.IHttpTransportInformation;
    public init(plok: Windows.Web.Http.IHttpTransportInformation?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.IHttpTransportInformation { return _self; }
    public func get_ServerCertificate() throws -> Optional<Windows.Security.Cryptography.Certificates.Certificate> {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try Windows.Security.Cryptography.Certificates.Certificate(plok: _ifc.get_ServerCertificate());
    }
    public func get_ServerCertificateErrorSeverity() throws -> Windows.Networking.Sockets.SocketSslErrorSeverity {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try _ifc.get_ServerCertificateErrorSeverity();
    }
    public func get_ServerCertificateErrors() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult> {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try _ifc.get_ServerCertificateErrors();
    }
    public func get_ServerIntermediateCertificates() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate> {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try _ifc.get_ServerIntermediateCertificates();
    }
    public var ServerCertificate : Optional<Windows.Security.Cryptography.Certificates.Certificate> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try Windows.Security.Cryptography.Certificates.Certificate(plok: _ifc.ServerCertificate);
        }
    }
    public var ServerCertificateErrorSeverity : Windows.Networking.Sockets.SocketSslErrorSeverity {
        get throws {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try _ifc.ServerCertificateErrorSeverity;
        }
    }
    public var ServerCertificateErrors : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try _ifc.ServerCertificateErrors;
        }
    }
    public var ServerIntermediateCertificates : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate> {
        get throws {
        let _ifc : Windows.Web.Http.IHttpTransportInformation = try _self.QueryInterface();
        return try _ifc.ServerIntermediateCertificates;
        }
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Web.Http.HttpVersion
// enum type
public typealias HttpVersion = _q_CWindows_CWeb_CHttp_CHttpVersion;

// type: Windows.Web.Http.IHttpBufferContentFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpBufferContentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbc20c193, Data2: 0xc41f, Data3 : 0x4ff7, Data4 : (0x91, 0x23, 0x64, 0x35, 0x73, 0x6e, 0xad, 0xc2)) }
    // Windows.Web.Http.HttpBufferContent CreateFromBuffer(Windows.Storage.Streams.IBuffer)
    private func _n_CreateFromBuffer(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromBuffer(pThis, content, __presult))
        }
    }
    public func CreateFromBuffer(content : Optional<Windows.Storage.Streams.IBuffer>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateFromBuffer(RawPointer(content), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
    }
    // Windows.Web.Http.HttpBufferContent CreateFromBufferWithOffset(Windows.Storage.Streams.IBuffer, System.UInt32, System.UInt32)
    private func _n_CreateFromBufferWithOffset(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>>, _ offset : UINT32, _ count : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpBufferContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromBufferWithOffset(pThis, content, offset, count, __presult))
        }
    }
    public func CreateFromBufferWithOffset(content : Optional<Windows.Storage.Streams.IBuffer>, offset : Swift.UInt32, count : Swift.UInt32) throws -> Optional<Windows.Web.Http.IHttpContent> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateFromBufferWithOffset(RawPointer(content), offset, count, &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
    }
} // IHttpBufferContentFactory


// type: Windows.Web.Http.IHttpClient
// interface type
open class IHttpClient
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7fda1151, Data2: 0x3574, Data3 : 0x4880, Data4 : (0xa8, 0xba, 0xe6, 0xb1, 0xe0, 0x06, 0x1f, 0x3d)) }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> DeleteAsync(Windows.Foundation.Uri)
    private func _n_DeleteAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.DeleteAsync(pThis, uri, __presult))
        }
    }
    public func DeleteAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_DeleteAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func Delete(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.DeleteAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> GetAsync(Windows.Foundation.Uri)
    private func _n_GetAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAsync(pThis, uri, __presult))
        }
    }
    public func GetAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_GetAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func Get(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> GetAsync(Windows.Foundation.Uri, Windows.Web.Http.HttpCompletionOption)
    private func _n_GetWithOptionAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ completionOption : _q_CWindows_CWeb_CHttp_CHttpCompletionOption, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetWithOptionAsync(pThis, uri, completionOption, __presult))
        }
    }
    public func GetWithOptionAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_GetWithOptionAsync(RawPointer(uri), completionOption, &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func GetWithOption(uri : Optional<Windows.Foundation.IUriRuntimeClass>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetWithOptionAsync(uri: uri, completionOption: completionOption)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,Windows.Web.Http.HttpProgress> GetBufferAsync(Windows.Foundation.Uri)
    private func _n_GetBufferAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetBufferAsync(pThis, uri, __presult))
        }
    }
    public func GetBufferAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_GetBufferAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func GetBuffer(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetBufferAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,Windows.Web.Http.HttpProgress> GetInputStreamAsync(Windows.Foundation.Uri)
    private func _n_GetInputStreamAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetInputStreamAsync(pThis, uri, __presult))
        }
    }
    public func GetInputStreamAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_GetInputStreamAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func GetInputStream(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetInputStreamAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<System.String,Windows.Web.Http.HttpProgress> GetStringAsync(Windows.Foundation.Uri)
    private func _n_GetStringAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetStringAsync(pThis, uri, __presult))
        }
    }
    public func GetStringAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_GetStringAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func GetString(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Swift.String {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.GetStringAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> PostAsync(Windows.Foundation.Uri, Windows.Web.Http.IHttpContent)
    private func _n_PostAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.PostAsync(pThis, uri, content, __presult))
        }
    }
    public func PostAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_PostAsync(RawPointer(uri), RawPointer(content), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func Post(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.PostAsync(uri: uri, content: content)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> PutAsync(Windows.Foundation.Uri, Windows.Web.Http.IHttpContent)
    private func _n_PutAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.PutAsync(pThis, uri, content, __presult))
        }
    }
    public func PutAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_PutAsync(RawPointer(uri), RawPointer(content), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func Put(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.PutAsync(uri: uri, content: content)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> SendRequestAsync(Windows.Web.Http.HttpRequestMessage)
    private func _n_SendRequestAsync(_ request : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SendRequestAsync(pThis, request, __presult))
        }
    }
    public func SendRequestAsync(request : Optional<Windows.Web.Http.IHttpRequestMessage>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_SendRequestAsync(RawPointer(request), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func SendRequest(request : Optional<Windows.Web.Http.IHttpRequestMessage>) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SendRequestAsync(request: request)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress> SendRequestAsync(Windows.Web.Http.HttpRequestMessage, Windows.Web.Http.HttpCompletionOption)
    private func _n_SendRequestWithOptionAsync(_ request : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>, _ completionOption : _q_CWindows_CWeb_CHttp_CHttpCompletionOption, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SendRequestWithOptionAsync(pThis, request, completionOption, __presult))
        }
    }
    public func SendRequestWithOptionAsync(request : Optional<Windows.Web.Http.IHttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_SendRequestWithOptionAsync(RawPointer(request), completionOption, &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func SendRequestWithOption(request : Optional<Windows.Web.Http.IHttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.SendRequestWithOptionAsync(request: request, completionOption: completionOption)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // [IsSpecialName] Windows.Web.Http.Headers.HttpRequestHeaderCollection get_DefaultRequestHeaders()
    private func _n_get_DefaultRequestHeaders(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DefaultRequestHeaders(pThis, __presult))
        }
    }
    public func get_DefaultRequestHeaders() throws -> Optional<Windows.Web.Http.Headers.IHttpRequestHeaderCollection> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection>> = nil;
        try self._n_get_DefaultRequestHeaders(&__result);
        return Windows.Web.Http.Headers.IHttpRequestHeaderCollection(consuming: __result);
    }
    public var DefaultRequestHeaders : Optional<Windows.Web.Http.Headers.IHttpRequestHeaderCollection> {
        get throws {
            return try get_DefaultRequestHeaders();
        }
    }
} // IHttpClient


// type: Windows.Web.Http.IHttpClient2
// interface type
open class IHttpClient2
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcdd83348, Data2: 0xe8b7, Data3 : 0x4cec, Data4 : (0xb1, 0xb0, 0xdc, 0x45, 0x5f, 0xe7, 0x2c, 0x92)) }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TryDeleteAsync(Windows.Foundation.Uri)
    private func _n_TryDeleteAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryDeleteAsync(pThis, uri, __presult))
        }
    }
    public func TryDeleteAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryDeleteAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryDelete(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryDeleteAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TryGetAsync(Windows.Foundation.Uri)
    private func _n_TryGetAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryGetAsync(pThis, uri, __presult))
        }
    }
    public func TryGetAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryGetAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryGet(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryGetAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TryGetAsync(Windows.Foundation.Uri, Windows.Web.Http.HttpCompletionOption)
    private func _n_TryGetAsync2(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ completionOption : _q_CWindows_CWeb_CHttp_CHttpCompletionOption, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryGetAsync2(pThis, uri, completionOption, __presult))
        }
    }
    public func TryGetAsync2(uri : Optional<Windows.Foundation.IUriRuntimeClass>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryGetAsync2(RawPointer(uri), completionOption, &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryGetAsync2(uri : Optional<Windows.Foundation.IUriRuntimeClass>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryGetAsync2(uri: uri, completionOption: completionOption)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpGetBufferResult,Windows.Web.Http.HttpProgress> TryGetBufferAsync(Windows.Foundation.Uri)
    private func _n_TryGetBufferAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryGetBufferAsync(pThis, uri, __presult))
        }
    }
    public func TryGetBufferAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryGetBufferAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetBufferResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryGetBuffer(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpGetBufferResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryGetBufferAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpGetInputStreamResult,Windows.Web.Http.HttpProgress> TryGetInputStreamAsync(Windows.Foundation.Uri)
    private func _n_TryGetInputStreamAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryGetInputStreamAsync(pThis, uri, __presult))
        }
    }
    public func TryGetInputStreamAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryGetInputStreamAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetInputStreamResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryGetInputStream(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpGetInputStreamResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryGetInputStreamAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpGetStringResult,Windows.Web.Http.HttpProgress> TryGetStringAsync(Windows.Foundation.Uri)
    private func _n_TryGetStringAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryGetStringAsync(pThis, uri, __presult))
        }
    }
    public func TryGetStringAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryGetStringAsync(RawPointer(uri), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpGetStringResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryGetString(uri : Optional<Windows.Foundation.IUriRuntimeClass>) async throws -> Optional<Windows.Web.Http.IHttpGetStringResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryGetStringAsync(uri: uri)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TryPostAsync(Windows.Foundation.Uri, Windows.Web.Http.IHttpContent)
    private func _n_TryPostAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryPostAsync(pThis, uri, content, __presult))
        }
    }
    public func TryPostAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryPostAsync(RawPointer(uri), RawPointer(content), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryPost(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryPostAsync(uri: uri, content: content)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TryPutAsync(Windows.Foundation.Uri, Windows.Web.Http.IHttpContent)
    private func _n_TryPutAsync(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryPutAsync(pThis, uri, content, __presult))
        }
    }
    public func TryPutAsync(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TryPutAsync(RawPointer(uri), RawPointer(content), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TryPut(uri : Optional<Windows.Foundation.IUriRuntimeClass>, content : Optional<Windows.Web.Http.IHttpContent>) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TryPutAsync(uri: uri, content: content)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TrySendRequestAsync(Windows.Web.Http.HttpRequestMessage)
    private func _n_TrySendRequestAsync(_ request : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TrySendRequestAsync(pThis, request, __presult))
        }
    }
    public func TrySendRequestAsync(request : Optional<Windows.Web.Http.IHttpRequestMessage>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TrySendRequestAsync(RawPointer(request), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TrySendRequest(request : Optional<Windows.Web.Http.IHttpRequestMessage>) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TrySendRequestAsync(request: request)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpRequestResult,Windows.Web.Http.HttpProgress> TrySendRequestAsync(Windows.Web.Http.HttpRequestMessage, Windows.Web.Http.HttpCompletionOption)
    private func _n_TrySendRequestAsync2(_ request : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>, _ completionOption : _q_CWindows_CWeb_CHttp_CHttpCompletionOption, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClient2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TrySendRequestAsync2(pThis, request, completionOption, __presult))
        }
    }
    public func TrySendRequestAsync2(request : Optional<Windows.Web.Http.IHttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress>> = nil;
        try self._n_TrySendRequestAsync2(RawPointer(request), completionOption, &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpRequestResult__q_CWindows_CWeb_CHttp_CHttpProgress(consuming: __result);
    }
    public func TrySendRequestAsync2(request : Optional<Windows.Web.Http.IHttpRequestMessage>, completionOption : Windows.Web.Http.HttpCompletionOption) async throws -> Optional<Windows.Web.Http.IHttpRequestResult> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.TrySendRequestAsync2(request: request, completionOption: completionOption)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
} // IHttpClient2


// type: Windows.Web.Http.IHttpClientFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpClientFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc30c4eca, Data2: 0xe3fa, Data3 : 0x4f99, Data4 : (0xaf, 0xb4, 0x63, 0xcc, 0x65, 0x00, 0x94, 0x62)) }
    // Windows.Web.Http.HttpClient Create(Windows.Web.Http.Filters.IHttpFilter)
    private func _n_Create(_ filter : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpClient>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpClientFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, filter, __presult))
        }
    }
    public func Create(filter : Optional<Windows.Web.Http.Filters.IHttpFilter>) throws -> Optional<Windows.Web.Http.IHttpClient> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpClient>> = nil;
        try self._n_Create(RawPointer(filter), &__result);
        return Windows.Web.Http.IHttpClient(consuming: __result);
    }
} // IHttpClientFactory


// type: Windows.Web.Http.IHttpContent
// interface type
open class IHttpContent
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6b14a441, Data2: 0xfba7, Data3 : 0x4bd2, Data4 : (0xaf, 0x0a, 0x83, 0x9d, 0xe7, 0xc2, 0x95, 0xda)) }
    // [IsSpecialName] Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers()
    private func _n_get_Headers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Headers(pThis, __presult))
        }
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.IHttpContentHeaderCollection> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection>> = nil;
        try self._n_get_Headers(&__result);
        return Windows.Web.Http.Headers.IHttpContentHeaderCollection(consuming: __result);
    }
    // Windows.Foundation.IAsyncOperationWithProgress<System.UInt64,System.UInt64> BufferAllAsync()
    private func _n_BufferAllAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.BufferAllAsync(pThis, __presult))
        }
    }
    public func BufferAllAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64>> = nil;
        try self._n_BufferAllAsync(&__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64(consuming: __result);
    }
    public func BufferAll() async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.BufferAllAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,System.UInt64> ReadAsBufferAsync()
    private func _n_ReadAsBufferAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReadAsBufferAsync(pThis, __presult))
        }
    }
    public func ReadAsBufferAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64>> = nil;
        try self._n_ReadAsBufferAsync(&__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIBuffer_UINT64(consuming: __result);
    }
    public func ReadAsBuffer() async throws -> Optional<Windows.Storage.Streams.IBuffer> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsBufferAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,System.UInt64> ReadAsInputStreamAsync()
    private func _n_ReadAsInputStreamAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReadAsInputStreamAsync(pThis, __presult))
        }
    }
    public func ReadAsInputStreamAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64>> = nil;
        try self._n_ReadAsInputStreamAsync(&__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CStorage_CStreams_CIInputStream_UINT64(consuming: __result);
    }
    public func ReadAsInputStream() async throws -> Optional<Windows.Storage.Streams.IInputStream> {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsInputStreamAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // Windows.Foundation.IAsyncOperationWithProgress<System.String,System.UInt64> ReadAsStringAsync()
    private func _n_ReadAsStringAsync(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReadAsStringAsync(pThis, __presult))
        }
    }
    public func ReadAsStringAsync() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64>> = nil;
        try self._n_ReadAsStringAsync(&__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2_HSTRING_UINT64(consuming: __result);
    }
    public func ReadAsString() async throws -> Swift.String {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.ReadAsStringAsync()!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    // bool TryComputeLength(ref System.UInt64)
    private func _n_TryComputeLength(_ length : UnsafeMutablePointer<UINT64>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryComputeLength(pThis, length, __presult))
        }
    }
    public func TryComputeLength(length : inout Swift.UInt64) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_length: UINT64 = 0;
        try self._n_TryComputeLength(&_tmp_out_length, &__result);
            length = _tmp_out_length;
        return __result;
    }
    // Windows.Foundation.IAsyncOperationWithProgress<System.UInt64,System.UInt64> WriteToStreamAsync(Windows.Storage.Streams.IOutputStream)
    private func _n_WriteToStreamAsync(_ outputStream : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIOutputStream>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.WriteToStreamAsync(pThis, outputStream, __presult))
        }
    }
    public func WriteToStreamAsync(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) throws -> Optional<ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_UINT64_UINT64>> = nil;
        try self._n_WriteToStreamAsync(RawPointer(outputStream), &__result);
        return ClosedGenerics.IAsyncOperationWithProgress_2_UINT64_UINT64(consuming: __result);
    }
    public func WriteToStream(outputStream : Optional<Windows.Storage.Streams.IOutputStream>) async throws -> Swift.UInt64 {
        return try await withUnsafeThrowingContinuation { continuation in
            do {
                return try continuation.resume(returning: self.WriteToStreamAsync(outputStream: outputStream)!.get())
            } catch let error {
                return continuation.resume(throwing: error)
            }
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.IHttpContentHeaderCollection> {
        get throws {
            return try get_Headers();
        }
    }
} // IHttpContent


// type: Windows.Web.Http.IHttpCookie
// interface type
open class IHttpCookie
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x1f5488e2, Data2: 0xcc2d, Data3 : 0x4779, Data4 : (0x86, 0xa7, 0x88, 0xf1, 0x06, 0x87, 0xd2, 0x49)) }
    // [IsSpecialName] System.String get_Name()
    private func _n_get_Name(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, __presult))
        }
    }
    public func get_Name() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Name(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] System.String get_Domain()
    private func _n_get_Domain(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Domain(pThis, __presult))
        }
    }
    public func get_Domain() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Domain(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] System.String get_Path()
    private func _n_get_Path(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Path(pThis, __presult))
        }
    }
    public func get_Path() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Path(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_Expires()
    private func _n_get_Expires(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Expires(pThis, __presult))
        }
    }
    public func get_Expires() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_Expires(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] void put_Expires(Windows.Foundation.IReference<Windows.Foundation.DateTime>)
    private func _n_put_Expires(_ value : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Expires(pThis, value))
        }
    }
    public func put_Expires(value : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime>) throws -> Void {
        try self._n_put_Expires(RawPointer(value));
    }
    // [IsSpecialName] bool get_HttpOnly()
    private func _n_get_HttpOnly(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_HttpOnly(pThis, __presult))
        }
    }
    public func get_HttpOnly() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_HttpOnly(&__result);
        return __result;
    }
    // [IsSpecialName] void put_HttpOnly(bool)
    private func _n_put_HttpOnly(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_HttpOnly(pThis, value))
        }
    }
    public func put_HttpOnly(value : boolean) throws -> Void {
        try self._n_put_HttpOnly(value);
    }
    // [IsSpecialName] bool get_Secure()
    private func _n_get_Secure(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Secure(pThis, __presult))
        }
    }
    public func get_Secure() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Secure(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Secure(bool)
    private func _n_put_Secure(_ value : boolean) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Secure(pThis, value))
        }
    }
    public func put_Secure(value : boolean) throws -> Void {
        try self._n_put_Secure(value);
    }
    // [IsSpecialName] System.String get_Value()
    private func _n_get_Value(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, __presult))
        }
    }
    public func get_Value() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Value(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_Value(System.String)
    private func _n_put_Value(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookie.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, value))
        }
    }
    public func put_Value(value : Optional<Swift.String>) throws -> Void {
        let __hstr_value = try HString(value!);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_Value(__hstr_value.Raw());
        }
    }
    public var Domain : Swift.String {
        get throws {
            return try get_Domain();
        }
    }
    public var Expires : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_Expires();
        }
    }
    public var HttpOnly : boolean {
        get throws {
            return try get_HttpOnly();
        }
    }
    public var Name : Swift.String {
        get throws {
            return try get_Name();
        }
    }
    public var Path : Swift.String {
        get throws {
            return try get_Path();
        }
    }
    public var Secure : boolean {
        get throws {
            return try get_Secure();
        }
    }
    public var Value : Swift.String {
        get throws {
            return try get_Value();
        }
    }
} // IHttpCookie


// type: Windows.Web.Http.IHttpCookieFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpCookieFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6a0585a9, Data2: 0x931c, Data3 : 0x4cd1, Data4 : (0xa9, 0x6d, 0xc2, 0x17, 0x01, 0x78, 0x5c, 0x5f)) }
    // Windows.Web.Http.HttpCookie Create(System.String, System.String, System.String)
    private func _n_Create(_ name : Optional<HSTRING>, _ domain : Optional<HSTRING>, _ path : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpCookie>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookieFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, name, domain, path, __presult))
        }
    }
    public func Create(name : Optional<Swift.String>, domain : Optional<Swift.String>, path : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpCookie> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        let __hstr_domain = try HString(domain!);
        return try withExtendedLifetime(__hstr_domain) {
        let __hstr_path = try HString(path!);
        return try withExtendedLifetime(__hstr_path) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpCookie>> = nil;
        try self._n_Create(__hstr_name.Raw(), __hstr_domain.Raw(), __hstr_path.Raw(), &__result);
        return Windows.Web.Http.IHttpCookie(consuming: __result);
        }
        }
        }
    }
} // IHttpCookieFactory


// type: Windows.Web.Http.IHttpCookieManager
// interface type
open class IHttpCookieManager
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7a431780, Data2: 0xcd4f, Data3 : 0x4e57, Data4 : (0xa8, 0x4a, 0x5b, 0x0a, 0x53, 0xd6, 0xbb, 0x96)) }
    // bool SetCookie(Windows.Web.Http.HttpCookie)
    private func _n_SetCookie(_ cookie : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpCookie>>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookieManager.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetCookie(pThis, cookie, __presult))
        }
    }
    public func SetCookie(cookie : Optional<Windows.Web.Http.IHttpCookie>) throws -> boolean {
        var __result : boolean = 0;
        try self._n_SetCookie(RawPointer(cookie), &__result);
        return __result;
    }
    // bool SetCookie(Windows.Web.Http.HttpCookie, bool)
    private func _n_SetCookieWithThirdParty(_ cookie : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpCookie>>, _ thirdParty : boolean, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookieManager.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetCookieWithThirdParty(pThis, cookie, thirdParty, __presult))
        }
    }
    public func SetCookieWithThirdParty(cookie : Optional<Windows.Web.Http.IHttpCookie>, thirdParty : boolean) throws -> boolean {
        var __result : boolean = 0;
        try self._n_SetCookieWithThirdParty(RawPointer(cookie), thirdParty, &__result);
        return __result;
    }
    // void DeleteCookie(Windows.Web.Http.HttpCookie)
    private func _n_DeleteCookie(_ cookie : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpCookie>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookieManager.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.DeleteCookie(pThis, cookie))
        }
    }
    public func DeleteCookie(cookie : Optional<Windows.Web.Http.IHttpCookie>) throws -> Void {
        try self._n_DeleteCookie(RawPointer(cookie));
    }
    // Windows.Web.Http.HttpCookieCollection GetCookies(Windows.Foundation.Uri)
    private func _n_GetCookies(_ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpCookieManager.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetCookies(pThis, uri, __presult))
        }
    }
    public func GetCookies(uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie>> = nil;
        try self._n_GetCookies(RawPointer(uri), &__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CHttpCookie(consuming: __result);
    }
} // IHttpCookieManager


// type: Windows.Web.Http.IHttpFormUrlEncodedContentFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpFormUrlEncodedContentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x43f0138c, Data2: 0x2f73, Data3 : 0x4302, Data4 : (0xb5, 0xf3, 0xea, 0xe9, 0x23, 0x8a, 0x5e, 0x01)) }
    // Windows.Web.Http.HttpFormUrlEncodedContent Create(Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<System.String,System.String>>)
    private func _n_Create(_ content : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpFormUrlEncodedContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, content, __presult))
        }
    }
    public func Create(content : Optional<ClosedGenerics.IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING_HSTRING>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_Create(RawPointer(content), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
    }
} // IHttpFormUrlEncodedContentFactory


// type: Windows.Web.Http.IHttpGetBufferResult
// interface type
open class IHttpGetBufferResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x53d08e7c, Data2: 0xe209, Data3 : 0x404e, Data4 : (0x9a, 0x49, 0x74, 0x2d, 0x82, 0x36, 0xfd, 0x3a)) }
    // [IsSpecialName] Windows.Foundation.HResult get_ExtendedError()
    private func _n_get_ExtendedError(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CHResult>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, __presult))
        }
    }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        var __result : _q_CWindows_CFoundation_CHResult = _q_CWindows_CFoundation_CHResult(Value: 0);
        try self._n_get_ExtendedError(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_RequestMessage()
    private func _n_get_RequestMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestMessage(pThis, __presult))
        }
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_RequestMessage(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessage get_ResponseMessage()
    private func _n_get_ResponseMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResponseMessage(pThis, __presult))
        }
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_get_ResponseMessage(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    // [IsSpecialName] bool get_Succeeded()
    private func _n_get_Succeeded(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Succeeded(pThis, __presult))
        }
    }
    public func get_Succeeded() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Succeeded(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Storage.Streams.IBuffer get_Value()
    private func _n_get_Value(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetBufferResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, __presult))
        }
    }
    public func get_Value() throws -> Optional<Windows.Storage.Streams.IBuffer> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIBuffer>> = nil;
        try self._n_get_Value(&__result);
        return Windows.Storage.Streams.IBuffer(consuming: __result);
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
            return try get_ExtendedError();
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_RequestMessage();
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.IHttpResponseMessage> {
        get throws {
            return try get_ResponseMessage();
        }
    }
    public var Succeeded : boolean {
        get throws {
            return try get_Succeeded();
        }
    }
    public var Value : Optional<Windows.Storage.Streams.IBuffer> {
        get throws {
            return try get_Value();
        }
    }
} // IHttpGetBufferResult


// type: Windows.Web.Http.IHttpGetInputStreamResult
// interface type
open class IHttpGetInputStreamResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd5d63463, Data2: 0x13aa, Data3 : 0x4ee0, Data4 : (0xbe, 0x95, 0xa0, 0xc3, 0x9f, 0xe9, 0x12, 0x03)) }
    // [IsSpecialName] Windows.Foundation.HResult get_ExtendedError()
    private func _n_get_ExtendedError(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CHResult>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, __presult))
        }
    }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        var __result : _q_CWindows_CFoundation_CHResult = _q_CWindows_CFoundation_CHResult(Value: 0);
        try self._n_get_ExtendedError(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_RequestMessage()
    private func _n_get_RequestMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestMessage(pThis, __presult))
        }
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_RequestMessage(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessage get_ResponseMessage()
    private func _n_get_ResponseMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResponseMessage(pThis, __presult))
        }
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_get_ResponseMessage(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    // [IsSpecialName] bool get_Succeeded()
    private func _n_get_Succeeded(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Succeeded(pThis, __presult))
        }
    }
    public func get_Succeeded() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Succeeded(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Storage.Streams.IInputStream get_Value()
    private func _n_get_Value(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetInputStreamResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, __presult))
        }
    }
    public func get_Value() throws -> Optional<Windows.Storage.Streams.IInputStream> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>> = nil;
        try self._n_get_Value(&__result);
        return Windows.Storage.Streams.IInputStream(consuming: __result);
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
            return try get_ExtendedError();
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_RequestMessage();
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.IHttpResponseMessage> {
        get throws {
            return try get_ResponseMessage();
        }
    }
    public var Succeeded : boolean {
        get throws {
            return try get_Succeeded();
        }
    }
    public var Value : Optional<Windows.Storage.Streams.IInputStream> {
        get throws {
            return try get_Value();
        }
    }
} // IHttpGetInputStreamResult


// type: Windows.Web.Http.IHttpGetStringResult
// interface type
open class IHttpGetStringResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9bac466d, Data2: 0x8509, Data3 : 0x4775, Data4 : (0xb1, 0x6d, 0x89, 0x53, 0xf4, 0x7a, 0x7f, 0x5f)) }
    // [IsSpecialName] Windows.Foundation.HResult get_ExtendedError()
    private func _n_get_ExtendedError(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CHResult>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetStringResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, __presult))
        }
    }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        var __result : _q_CWindows_CFoundation_CHResult = _q_CWindows_CFoundation_CHResult(Value: 0);
        try self._n_get_ExtendedError(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_RequestMessage()
    private func _n_get_RequestMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetStringResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestMessage(pThis, __presult))
        }
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_RequestMessage(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessage get_ResponseMessage()
    private func _n_get_ResponseMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetStringResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResponseMessage(pThis, __presult))
        }
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_get_ResponseMessage(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    // [IsSpecialName] bool get_Succeeded()
    private func _n_get_Succeeded(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetStringResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Succeeded(pThis, __presult))
        }
    }
    public func get_Succeeded() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Succeeded(&__result);
        return __result;
    }
    // [IsSpecialName] System.String get_Value()
    private func _n_get_Value(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpGetStringResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, __presult))
        }
    }
    public func get_Value() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Value(&__result);
        return Swift.String(from: __result);
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
            return try get_ExtendedError();
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_RequestMessage();
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.IHttpResponseMessage> {
        get throws {
            return try get_ResponseMessage();
        }
    }
    public var Succeeded : boolean {
        get throws {
            return try get_Succeeded();
        }
    }
    public var Value : Swift.String {
        get throws {
            return try get_Value();
        }
    }
} // IHttpGetStringResult


// type: Windows.Web.Http.IHttpMethod
// interface type
open class IHttpMethod
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x728d4022, Data2: 0x700d, Data3 : 0x4fe0, Data4 : (0xaf, 0xa5, 0x40, 0x29, 0x9c, 0x58, 0xdb, 0xfd)) }
    // [IsSpecialName] System.String get_Method()
    private func _n_get_Method(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethod.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Method(pThis, __presult))
        }
    }
    public func get_Method() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_Method(&__result);
        return Swift.String(from: __result);
    }
    public var Method : Swift.String {
        get throws {
            return try get_Method();
        }
    }
} // IHttpMethod


// type: Windows.Web.Http.IHttpMethodFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpMethodFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3c51d10d, Data2: 0x36d7, Data3 : 0x40f8, Data4 : (0xa8, 0x6d, 0xe7, 0x59, 0xca, 0xf2, 0xf8, 0x3f)) }
    // Windows.Web.Http.HttpMethod Create(System.String)
    private func _n_Create(_ method : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, method, __presult))
        }
    }
    public func Create(method : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpMethod> {
        let __hstr_method = try HString(method!);
        return try withExtendedLifetime(__hstr_method) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_Create(__hstr_method.Raw(), &__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
        }
    }
} // IHttpMethodFactory


// type: Windows.Web.Http.IHttpMethodStatics
// interface type
open class IHttpMethodStatics
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x64d171f0, Data2: 0xd99a, Data3 : 0x4153, Data4 : (0x8d, 0xc6, 0xd6, 0x8c, 0xc4, 0xcc, 0xe3, 0x17)) }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Delete()
    private func _n_get_Delete(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Delete(pThis, __presult))
        }
    }
    public func get_Delete() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Delete(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Get()
    private func _n_get_Get(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Get(pThis, __presult))
        }
    }
    public func get_Get() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Get(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Head()
    private func _n_get_Head(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Head(pThis, __presult))
        }
    }
    public func get_Head() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Head(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Options()
    private func _n_get_Options(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Options(pThis, __presult))
        }
    }
    public func get_Options() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Options(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Patch()
    private func _n_get_Patch(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Patch(pThis, __presult))
        }
    }
    public func get_Patch() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Patch(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Post()
    private func _n_get_Post(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Post(pThis, __presult))
        }
    }
    public func get_Post() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Post(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Put()
    private func _n_get_Put(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMethodStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Put(pThis, __presult))
        }
    }
    public func get_Put() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Put(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    public var Delete : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Delete();
        }
    }
    public var Get : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Get();
        }
    }
    public var Head : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Head();
        }
    }
    public var Options : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Options();
        }
    }
    public var Patch : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Patch();
        }
    }
    public var Post : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Post();
        }
    }
    public var Put : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Put();
        }
    }
} // IHttpMethodStatics


// type: Windows.Web.Http.IHttpMultipartContent
// interface type
open class IHttpMultipartContent
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xdf916aff, Data2: 0x9926, Data3 : 0x4ac9, Data4 : (0xaa, 0xf1, 0xe0, 0xd0, 0x4e, 0xf0, 0x9b, 0xb9)) }
    // void Add(Windows.Web.Http.IHttpContent)
    private func _n_Add(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Add(pThis, content))
        }
    }
    public func Add(content : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        try self._n_Add(RawPointer(content));
    }
} // IHttpMultipartContent


// type: Windows.Web.Http.IHttpMultipartContentFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpMultipartContentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7eb42e62, Data2: 0x0222, Data3 : 0x4f20, Data4 : (0xb3, 0x72, 0x47, 0xd5, 0xdb, 0x5d, 0x33, 0xb4)) }
    // Windows.Web.Http.HttpMultipartContent CreateWithSubtype(System.String)
    private func _n_CreateWithSubtype(_ subtype : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithSubtype(pThis, subtype, __presult))
        }
    }
    public func CreateWithSubtype(subtype : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        let __hstr_subtype = try HString(subtype!);
        return try withExtendedLifetime(__hstr_subtype) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateWithSubtype(__hstr_subtype.Raw(), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
        }
    }
    // Windows.Web.Http.HttpMultipartContent CreateWithSubtypeAndBoundary(System.String, System.String)
    private func _n_CreateWithSubtypeAndBoundary(_ subtype : Optional<HSTRING>, _ boundary : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithSubtypeAndBoundary(pThis, subtype, boundary, __presult))
        }
    }
    public func CreateWithSubtypeAndBoundary(subtype : Optional<Swift.String>, boundary : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        let __hstr_subtype = try HString(subtype!);
        return try withExtendedLifetime(__hstr_subtype) {
        let __hstr_boundary = try HString(boundary!);
        return try withExtendedLifetime(__hstr_boundary) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateWithSubtypeAndBoundary(__hstr_subtype.Raw(), __hstr_boundary.Raw(), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
        }
        }
    }
} // IHttpMultipartContentFactory


// type: Windows.Web.Http.IHttpMultipartFormDataContent
// interface type
open class IHttpMultipartFormDataContent
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x64d337e2, Data2: 0xe967, Data3 : 0x4624, Data4 : (0xb6, 0xd1, 0xcf, 0x74, 0x60, 0x4a, 0x4a, 0x42)) }
    // void Add(Windows.Web.Http.IHttpContent)
    private func _n_Add(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Add(pThis, content))
        }
    }
    public func Add(content : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        try self._n_Add(RawPointer(content));
    }
    // void Add(Windows.Web.Http.IHttpContent, System.String)
    private func _n_AddWithName(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>, _ name : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.AddWithName(pThis, content, name))
        }
    }
    public func AddWithName(content : Optional<Windows.Web.Http.IHttpContent>, name : Optional<Swift.String>) throws -> Void {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        try self._n_AddWithName(RawPointer(content), __hstr_name.Raw());
        }
    }
    // void Add(Windows.Web.Http.IHttpContent, System.String, System.String)
    private func _n_AddWithNameAndFileName(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>, _ name : Optional<HSTRING>, _ fileName : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContent.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.AddWithNameAndFileName(pThis, content, name, fileName))
        }
    }
    public func AddWithNameAndFileName(content : Optional<Windows.Web.Http.IHttpContent>, name : Optional<Swift.String>, fileName : Optional<Swift.String>) throws -> Void {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        let __hstr_fileName = try HString(fileName!);
        return try withExtendedLifetime(__hstr_fileName) {
        try self._n_AddWithNameAndFileName(RawPointer(content), __hstr_name.Raw(), __hstr_fileName.Raw());
        }
        }
    }
} // IHttpMultipartFormDataContent


// type: Windows.Web.Http.IHttpMultipartFormDataContentFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpMultipartFormDataContentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa04d7311, Data2: 0x5017, Data3 : 0x4622, Data4 : (0x93, 0xa8, 0x49, 0xb2, 0x4a, 0x4f, 0xcb, 0xfc)) }
    // Windows.Web.Http.HttpMultipartFormDataContent CreateWithBoundary(System.String)
    private func _n_CreateWithBoundary(_ boundary : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpMultipartFormDataContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithBoundary(pThis, boundary, __presult))
        }
    }
    public func CreateWithBoundary(boundary : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        let __hstr_boundary = try HString(boundary!);
        return try withExtendedLifetime(__hstr_boundary) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateWithBoundary(__hstr_boundary.Raw(), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
        }
    }
} // IHttpMultipartFormDataContentFactory


// type: Windows.Web.Http.IHttpRequestMessage
// interface type
open class IHttpRequestMessage
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf5762b3c, Data2: 0x74d4, Data3 : 0x4811, Data4 : (0xb5, 0xdc, 0x9f, 0x8b, 0x4e, 0x2f, 0x9a, 0xbf)) }
    // [IsSpecialName] Windows.Web.Http.IHttpContent get_Content()
    private func _n_get_Content(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Content(pThis, __presult))
        }
    }
    public func get_Content() throws -> Optional<Windows.Web.Http.IHttpContent> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_get_Content(&__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
    }
    // [IsSpecialName] void put_Content(Windows.Web.Http.IHttpContent)
    private func _n_put_Content(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Content(pThis, value))
        }
    }
    public func put_Content(value : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        try self._n_put_Content(RawPointer(value));
    }
    // [IsSpecialName] Windows.Web.Http.Headers.HttpRequestHeaderCollection get_Headers()
    private func _n_get_Headers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Headers(pThis, __presult))
        }
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.IHttpRequestHeaderCollection> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection>> = nil;
        try self._n_get_Headers(&__result);
        return Windows.Web.Http.Headers.IHttpRequestHeaderCollection(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpMethod get_Method()
    private func _n_get_Method(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Method(pThis, __presult))
        }
    }
    public func get_Method() throws -> Optional<Windows.Web.Http.IHttpMethod> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>> = nil;
        try self._n_get_Method(&__result);
        return Windows.Web.Http.IHttpMethod(consuming: __result);
    }
    // [IsSpecialName] void put_Method(Windows.Web.Http.HttpMethod)
    private func _n_put_Method(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Method(pThis, value))
        }
    }
    public func put_Method(value : Optional<Windows.Web.Http.IHttpMethod>) throws -> Void {
        try self._n_put_Method(RawPointer(value));
    }
    // [IsSpecialName] Windows.Foundation.Collections.IMap<System.String,System.Object> get_Properties()
    private func _n_get_Properties(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Properties(pThis, __presult))
        }
    }
    public func get_Properties() throws -> Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IMap_2_HSTRING_IInspectable>> = nil;
        try self._n_get_Properties(&__result);
        return ClosedGenerics.IMap_2_HSTRING_IInspectable(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Uri get_RequestUri()
    private func _n_get_RequestUri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestUri(pThis, __presult))
        }
    }
    public func get_RequestUri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_RequestUri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] void put_RequestUri(Windows.Foundation.Uri)
    private func _n_put_RequestUri(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_RequestUri(pThis, value))
        }
    }
    public func put_RequestUri(value : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Void {
        try self._n_put_RequestUri(RawPointer(value));
    }
    // [IsSpecialName] Windows.Web.Http.HttpTransportInformation get_TransportInformation()
    private func _n_get_TransportInformation(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpTransportInformation>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_TransportInformation(pThis, __presult))
        }
    }
    public func get_TransportInformation() throws -> Optional<Windows.Web.Http.IHttpTransportInformation> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpTransportInformation>> = nil;
        try self._n_get_TransportInformation(&__result);
        return Windows.Web.Http.IHttpTransportInformation(consuming: __result);
    }
    public var Content : Optional<Windows.Web.Http.IHttpContent> {
        get throws {
            return try get_Content();
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.IHttpRequestHeaderCollection> {
        get throws {
            return try get_Headers();
        }
    }
    public var Method : Optional<Windows.Web.Http.IHttpMethod> {
        get throws {
            return try get_Method();
        }
    }
    public var Properties : Optional<ClosedGenerics.IMap_2_HSTRING_IInspectable> {
        get throws {
            return try get_Properties();
        }
    }
    public var RequestUri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_RequestUri();
        }
    }
    public var TransportInformation : Optional<Windows.Web.Http.IHttpTransportInformation> {
        get throws {
            return try get_TransportInformation();
        }
    }
} // IHttpRequestMessage


// type: Windows.Web.Http.IHttpRequestMessageFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpRequestMessageFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x5bac994e, Data2: 0x3886, Data3 : 0x412e, Data4 : (0xae, 0xc3, 0x52, 0xec, 0x7f, 0x25, 0x61, 0x6f)) }
    // Windows.Web.Http.HttpRequestMessage Create(Windows.Web.Http.HttpMethod, Windows.Foundation.Uri)
    private func _n_Create(_ method : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpMethod>>, _ uri : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestMessageFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, method, uri, __presult))
        }
    }
    public func Create(method : Optional<Windows.Web.Http.IHttpMethod>, uri : Optional<Windows.Foundation.IUriRuntimeClass>) throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_Create(RawPointer(method), RawPointer(uri), &__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
} // IHttpRequestMessageFactory


// type: Windows.Web.Http.IHttpRequestResult
// interface type
open class IHttpRequestResult
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6acf4da8, Data2: 0xb5eb, Data3 : 0x4a35, Data4 : (0xa9, 0x02, 0x42, 0x17, 0xfb, 0xe8, 0x20, 0xc5)) }
    // [IsSpecialName] Windows.Foundation.HResult get_ExtendedError()
    private func _n_get_ExtendedError(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CHResult>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, __presult))
        }
    }
    public func get_ExtendedError() throws -> Windows.Foundation.HResult {
        var __result : _q_CWindows_CFoundation_CHResult = _q_CWindows_CFoundation_CHResult(Value: 0);
        try self._n_get_ExtendedError(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_RequestMessage()
    private func _n_get_RequestMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestMessage(pThis, __presult))
        }
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_RequestMessage(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessage get_ResponseMessage()
    private func _n_get_ResponseMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResponseMessage(pThis, __presult))
        }
    }
    public func get_ResponseMessage() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_get_ResponseMessage(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    // [IsSpecialName] bool get_Succeeded()
    private func _n_get_Succeeded(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpRequestResult.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Succeeded(pThis, __presult))
        }
    }
    public func get_Succeeded() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_Succeeded(&__result);
        return __result;
    }
    public var ExtendedError : Windows.Foundation.HResult {
        get throws {
            return try get_ExtendedError();
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_RequestMessage();
        }
    }
    public var ResponseMessage : Optional<Windows.Web.Http.IHttpResponseMessage> {
        get throws {
            return try get_ResponseMessage();
        }
    }
    public var Succeeded : boolean {
        get throws {
            return try get_Succeeded();
        }
    }
} // IHttpRequestResult


// type: Windows.Web.Http.IHttpResponseMessage
// interface type
open class IHttpResponseMessage
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xfee200fb, Data2: 0x8664, Data3 : 0x44e0, Data4 : (0x95, 0xd9, 0x42, 0x69, 0x61, 0x99, 0xbf, 0xfc)) }
    // [IsSpecialName] Windows.Web.Http.IHttpContent get_Content()
    private func _n_get_Content(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Content(pThis, __presult))
        }
    }
    public func get_Content() throws -> Optional<Windows.Web.Http.IHttpContent> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_get_Content(&__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
    }
    // [IsSpecialName] void put_Content(Windows.Web.Http.IHttpContent)
    private func _n_put_Content(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Content(pThis, value))
        }
    }
    public func put_Content(value : Optional<Windows.Web.Http.IHttpContent>) throws -> Void {
        try self._n_put_Content(RawPointer(value));
    }
    // [IsSpecialName] Windows.Web.Http.Headers.HttpResponseHeaderCollection get_Headers()
    private func _n_get_Headers(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Headers(pThis, __presult))
        }
    }
    public func get_Headers() throws -> Optional<Windows.Web.Http.Headers.IHttpResponseHeaderCollection> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection>> = nil;
        try self._n_get_Headers(&__result);
        return Windows.Web.Http.Headers.IHttpResponseHeaderCollection(consuming: __result);
    }
    // [IsSpecialName] bool get_IsSuccessStatusCode()
    private func _n_get_IsSuccessStatusCode(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsSuccessStatusCode(pThis, __presult))
        }
    }
    public func get_IsSuccessStatusCode() throws -> boolean {
        var __result : boolean = 0;
        try self._n_get_IsSuccessStatusCode(&__result);
        return __result;
    }
    // [IsSpecialName] System.String get_ReasonPhrase()
    private func _n_get_ReasonPhrase(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ReasonPhrase(pThis, __presult))
        }
    }
    public func get_ReasonPhrase() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_get_ReasonPhrase(&__result);
        return Swift.String(from: __result);
    }
    // [IsSpecialName] void put_ReasonPhrase(System.String)
    private func _n_put_ReasonPhrase(_ value : Optional<HSTRING>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_ReasonPhrase(pThis, value))
        }
    }
    public func put_ReasonPhrase(value : Optional<Swift.String>) throws -> Void {
        let __hstr_value = try HString(value!);
        return try withExtendedLifetime(__hstr_value) {
        try self._n_put_ReasonPhrase(__hstr_value.Raw());
        }
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_RequestMessage()
    private func _n_get_RequestMessage(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestMessage(pThis, __presult))
        }
    }
    public func get_RequestMessage() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_RequestMessage(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] void put_RequestMessage(Windows.Web.Http.HttpRequestMessage)
    private func _n_put_RequestMessage(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_RequestMessage(pThis, value))
        }
    }
    public func put_RequestMessage(value : Optional<Windows.Web.Http.IHttpRequestMessage>) throws -> Void {
        try self._n_put_RequestMessage(RawPointer(value));
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessageSource get_Source()
    private func _n_get_Source(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHttpResponseMessageSource>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Source(pThis, __presult))
        }
    }
    public func get_Source() throws -> Windows.Web.Http.HttpResponseMessageSource {
        var __result : _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource = _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_None;
        try self._n_get_Source(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Source(Windows.Web.Http.HttpResponseMessageSource)
    private func _n_put_Source(_ value : _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Source(pThis, value))
        }
    }
    public func put_Source(value : Windows.Web.Http.HttpResponseMessageSource) throws -> Void {
        try self._n_put_Source(value);
    }
    // [IsSpecialName] Windows.Web.Http.HttpStatusCode get_StatusCode()
    private func _n_get_StatusCode(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHttpStatusCode>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_StatusCode(pThis, __presult))
        }
    }
    public func get_StatusCode() throws -> Windows.Web.Http.HttpStatusCode {
        var __result : _q_CWindows_CWeb_CHttp_CHttpStatusCode = _q_CWindows_CWeb_CHttp_CHttpStatusCode_None;
        try self._n_get_StatusCode(&__result);
        return __result;
    }
    // [IsSpecialName] void put_StatusCode(Windows.Web.Http.HttpStatusCode)
    private func _n_put_StatusCode(_ value : _q_CWindows_CWeb_CHttp_CHttpStatusCode) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_StatusCode(pThis, value))
        }
    }
    public func put_StatusCode(value : Windows.Web.Http.HttpStatusCode) throws -> Void {
        try self._n_put_StatusCode(value);
    }
    // [IsSpecialName] Windows.Web.Http.HttpVersion get_Version()
    private func _n_get_Version(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CHttpVersion>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Version(pThis, __presult))
        }
    }
    public func get_Version() throws -> Windows.Web.Http.HttpVersion {
        var __result : _q_CWindows_CWeb_CHttp_CHttpVersion = _q_CWindows_CWeb_CHttp_CHttpVersion_None;
        try self._n_get_Version(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Version(Windows.Web.Http.HttpVersion)
    private func _n_put_Version(_ value : _q_CWindows_CWeb_CHttp_CHttpVersion) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Version(pThis, value))
        }
    }
    public func put_Version(value : Windows.Web.Http.HttpVersion) throws -> Void {
        try self._n_put_Version(value);
    }
    // Windows.Web.Http.HttpResponseMessage EnsureSuccessStatusCode()
    private func _n_EnsureSuccessStatusCode(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessage.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.EnsureSuccessStatusCode(pThis, __presult))
        }
    }
    public func EnsureSuccessStatusCode() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_EnsureSuccessStatusCode(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    public var Content : Optional<Windows.Web.Http.IHttpContent> {
        get throws {
            return try get_Content();
        }
    }
    public var Headers : Optional<Windows.Web.Http.Headers.IHttpResponseHeaderCollection> {
        get throws {
            return try get_Headers();
        }
    }
    public var IsSuccessStatusCode : boolean {
        get throws {
            return try get_IsSuccessStatusCode();
        }
    }
    public var ReasonPhrase : Swift.String {
        get throws {
            return try get_ReasonPhrase();
        }
    }
    public var RequestMessage : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_RequestMessage();
        }
    }
    public var Source : Windows.Web.Http.HttpResponseMessageSource {
        get throws {
            return try get_Source();
        }
    }
    public var StatusCode : Windows.Web.Http.HttpStatusCode {
        get throws {
            return try get_StatusCode();
        }
    }
    public var Version : Windows.Web.Http.HttpVersion {
        get throws {
            return try get_Version();
        }
    }
} // IHttpResponseMessage


// type: Windows.Web.Http.IHttpResponseMessageFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpResponseMessageFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x52a8af99, Data2: 0xf095, Data3 : 0x43da, Data4 : (0xb6, 0x0f, 0x7c, 0xfc, 0x2b, 0xc7, 0xea, 0x2f)) }
    // Windows.Web.Http.HttpResponseMessage Create(Windows.Web.Http.HttpStatusCode)
    private func _n_Create(_ statusCode : _q_CWindows_CWeb_CHttp_CHttpStatusCode, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, statusCode, __presult))
        }
    }
    public func Create(statusCode : Windows.Web.Http.HttpStatusCode) throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_Create(statusCode, &__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
} // IHttpResponseMessageFactory


// type: Windows.Web.Http.IHttpStreamContentFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpStreamContentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf3e64d9d, Data2: 0xf725, Data3 : 0x407e, Data4 : (0x94, 0x2f, 0x0e, 0xda, 0x18, 0x98, 0x09, 0xf4)) }
    // Windows.Web.Http.HttpStreamContent CreateFromInputStream(Windows.Storage.Streams.IInputStream)
    private func _n_CreateFromInputStream(_ content : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CStreams_CIInputStream>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpStreamContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromInputStream(pThis, content, __presult))
        }
    }
    public func CreateFromInputStream(content : Optional<Windows.Storage.Streams.IInputStream>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateFromInputStream(RawPointer(content), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
    }
} // IHttpStreamContentFactory


// type: Windows.Web.Http.IHttpStringContentFactory
// interface type
// ACTIVATION INTERFACE
open class IHttpStringContentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x46649d5b, Data2: 0x2e93, Data3 : 0x48eb, Data4 : (0x8e, 0x61, 0x19, 0x67, 0x78, 0x78, 0xe5, 0x7f)) }
    // Windows.Web.Http.HttpStringContent CreateFromString(System.String)
    private func _n_CreateFromString(_ content : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpStringContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromString(pThis, content, __presult))
        }
    }
    public func CreateFromString(content : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        let __hstr_content = try HString(content!);
        return try withExtendedLifetime(__hstr_content) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateFromString(__hstr_content.Raw(), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
        }
    }
    // Windows.Web.Http.HttpStringContent CreateFromStringWithEncoding(System.String, Windows.Storage.Streams.UnicodeEncoding)
    private func _n_CreateFromStringWithEncoding(_ content : Optional<HSTRING>, _ encoding : _q_CWindows_CStorage_CStreams_CUnicodeEncoding, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpStringContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromStringWithEncoding(pThis, content, encoding, __presult))
        }
    }
    public func CreateFromStringWithEncoding(content : Optional<Swift.String>, encoding : Windows.Storage.Streams.UnicodeEncoding) throws -> Optional<Windows.Web.Http.IHttpContent> {
        let __hstr_content = try HString(content!);
        return try withExtendedLifetime(__hstr_content) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateFromStringWithEncoding(__hstr_content.Raw(), encoding, &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
        }
    }
    // Windows.Web.Http.HttpStringContent CreateFromStringWithEncodingAndMediaType(System.String, Windows.Storage.Streams.UnicodeEncoding, System.String)
    private func _n_CreateFromStringWithEncodingAndMediaType(_ content : Optional<HSTRING>, _ encoding : _q_CWindows_CStorage_CStreams_CUnicodeEncoding, _ mediaType : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpStringContentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromStringWithEncodingAndMediaType(pThis, content, encoding, mediaType, __presult))
        }
    }
    public func CreateFromStringWithEncodingAndMediaType(content : Optional<Swift.String>, encoding : Windows.Storage.Streams.UnicodeEncoding, mediaType : Optional<Swift.String>) throws -> Optional<Windows.Web.Http.IHttpContent> {
        let __hstr_content = try HString(content!);
        return try withExtendedLifetime(__hstr_content) {
        let __hstr_mediaType = try HString(mediaType!);
        return try withExtendedLifetime(__hstr_mediaType) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpContent>> = nil;
        try self._n_CreateFromStringWithEncodingAndMediaType(__hstr_content.Raw(), encoding, __hstr_mediaType.Raw(), &__result);
        return Windows.Web.Http.IHttpContent(consuming: __result);
        }
        }
    }
} // IHttpStringContentFactory


// type: Windows.Web.Http.IHttpTransportInformation
// interface type
open class IHttpTransportInformation
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x70127198, Data2: 0xc6a7, Data3 : 0x4ed0, Data4 : (0x83, 0x3a, 0x83, 0xfd, 0x8b, 0x8f, 0x17, 0x8d)) }
    // [IsSpecialName] Windows.Security.Cryptography.Certificates.Certificate get_ServerCertificate()
    private func _n_get_ServerCertificate(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpTransportInformation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ServerCertificate(pThis, __presult))
        }
    }
    public func get_ServerCertificate() throws -> Optional<Windows.Security.Cryptography.Certificates.ICertificate> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CSecurity_CCryptography_CCertificates_CICertificate>> = nil;
        try self._n_get_ServerCertificate(&__result);
        return Windows.Security.Cryptography.Certificates.ICertificate(consuming: __result);
    }
    // [IsSpecialName] Windows.Networking.Sockets.SocketSslErrorSeverity get_ServerCertificateErrorSeverity()
    private func _n_get_ServerCertificateErrorSeverity(_ __presult: UnsafeMutablePointer<_q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpTransportInformation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ServerCertificateErrorSeverity(pThis, __presult))
        }
    }
    public func get_ServerCertificateErrorSeverity() throws -> Windows.Networking.Sockets.SocketSslErrorSeverity {
        var __result : _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity = _q_CWindows_CNetworking_CSockets_CSocketSslErrorSeverity_None;
        try self._n_get_ServerCertificateErrorSeverity(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVectorView<Windows.Security.Cryptography.Certificates.ChainValidationResult> get_ServerCertificateErrors()
    private func _n_get_ServerCertificateErrors(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpTransportInformation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ServerCertificateErrors(pThis, __presult))
        }
    }
    public func get_ServerCertificateErrors() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult>> = nil;
        try self._n_get_ServerCertificateErrors(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVectorView<Windows.Security.Cryptography.Certificates.Certificate> get_ServerIntermediateCertificates()
    private func _n_get_ServerIntermediateCertificates(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CIHttpTransportInformation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ServerIntermediateCertificates(pThis, __presult))
        }
    }
    public func get_ServerIntermediateCertificates() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate>> = nil;
        try self._n_get_ServerIntermediateCertificates(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate(consuming: __result);
    }
    public var ServerCertificate : Optional<Windows.Security.Cryptography.Certificates.ICertificate> {
        get throws {
            return try get_ServerCertificate();
        }
    }
    public var ServerCertificateErrorSeverity : Windows.Networking.Sockets.SocketSslErrorSeverity {
        get throws {
            return try get_ServerCertificateErrorSeverity();
        }
    }
    public var ServerCertificateErrors : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CChainValidationResult> {
        get throws {
            return try get_ServerCertificateErrors();
        }
    }
    public var ServerIntermediateCertificates : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CSecurity_CCryptography_CCertificates_CCertificate> {
        get throws {
            return try get_ServerIntermediateCertificates();
        }
    }
} // IHttpTransportInformation


}
extension Windows.Web.Http.HttpCompletionOption {
    public static var ResponseContentRead : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpCompletionOption_ResponseContentRead;
        }
    }
    public static var ResponseHeadersRead : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpCompletionOption_ResponseHeadersRead;
        }
    }
}
extension Windows.Web.Http.HttpProgressStage {
    public static var None : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_None;
        }
    }
    public static var DetectingProxy : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_DetectingProxy;
        }
    }
    public static var ResolvingName : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_ResolvingName;
        }
    }
    public static var ConnectingToServer : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_ConnectingToServer;
        }
    }
    public static var NegotiatingSsl : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_NegotiatingSsl;
        }
    }
    public static var SendingHeaders : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingHeaders;
        }
    }
    public static var SendingContent : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingContent;
        }
    }
    public static var WaitingForResponse : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_WaitingForResponse;
        }
    }
    public static var ReceivingHeaders : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingHeaders;
        }
    }
    public static var ReceivingContent : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingContent;
        }
    }
}
extension Windows.Web.Http.HttpResponseMessageSource {
    public static var None : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_None;
        }
    }
    public static var Cache : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_Cache;
        }
    }
    public static var Network : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpResponseMessageSource_Network;
        }
    }
}
extension Windows.Web.Http.HttpStatusCode {
    public static var None : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_None;
        }
    }
    public static var Continue : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Continue;
        }
    }
    public static var SwitchingProtocols : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_SwitchingProtocols;
        }
    }
    public static var Processing : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Processing;
        }
    }
    public static var Ok : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Ok;
        }
    }
    public static var Created : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Created;
        }
    }
    public static var Accepted : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Accepted;
        }
    }
    public static var NonAuthoritativeInformation : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NonAuthoritativeInformation;
        }
    }
    public static var NoContent : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NoContent;
        }
    }
    public static var ResetContent : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_ResetContent;
        }
    }
    public static var PartialContent : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_PartialContent;
        }
    }
    public static var MultiStatus : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultiStatus;
        }
    }
    public static var AlreadyReported : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_AlreadyReported;
        }
    }
    public static var IMUsed : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_IMUsed;
        }
    }
    public static var MultipleChoices : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultipleChoices;
        }
    }
    public static var MovedPermanently : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_MovedPermanently;
        }
    }
    public static var Found : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Found;
        }
    }
    public static var SeeOther : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_SeeOther;
        }
    }
    public static var NotModified : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotModified;
        }
    }
    public static var UseProxy : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_UseProxy;
        }
    }
    public static var TemporaryRedirect : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_TemporaryRedirect;
        }
    }
    public static var PermanentRedirect : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_PermanentRedirect;
        }
    }
    public static var BadRequest : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadRequest;
        }
    }
    public static var Unauthorized : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Unauthorized;
        }
    }
    public static var PaymentRequired : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_PaymentRequired;
        }
    }
    public static var Forbidden : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Forbidden;
        }
    }
    public static var NotFound : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotFound;
        }
    }
    public static var MethodNotAllowed : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_MethodNotAllowed;
        }
    }
    public static var NotAcceptable : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotAcceptable;
        }
    }
    public static var ProxyAuthenticationRequired : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_ProxyAuthenticationRequired;
        }
    }
    public static var RequestTimeout : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestTimeout;
        }
    }
    public static var Conflict : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Conflict;
        }
    }
    public static var Gone : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Gone;
        }
    }
    public static var LengthRequired : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_LengthRequired;
        }
    }
    public static var PreconditionFailed : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionFailed;
        }
    }
    public static var RequestEntityTooLarge : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestEntityTooLarge;
        }
    }
    public static var RequestUriTooLong : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestUriTooLong;
        }
    }
    public static var UnsupportedMediaType : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnsupportedMediaType;
        }
    }
    public static var RequestedRangeNotSatisfiable : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestedRangeNotSatisfiable;
        }
    }
    public static var ExpectationFailed : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_ExpectationFailed;
        }
    }
    public static var UnprocessableEntity : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnprocessableEntity;
        }
    }
    public static var Locked : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_Locked;
        }
    }
    public static var FailedDependency : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_FailedDependency;
        }
    }
    public static var UpgradeRequired : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_UpgradeRequired;
        }
    }
    public static var PreconditionRequired : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionRequired;
        }
    }
    public static var TooManyRequests : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_TooManyRequests;
        }
    }
    public static var RequestHeaderFieldsTooLarge : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestHeaderFieldsTooLarge;
        }
    }
    public static var InternalServerError : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_InternalServerError;
        }
    }
    public static var NotImplemented : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotImplemented;
        }
    }
    public static var BadGateway : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadGateway;
        }
    }
    public static var ServiceUnavailable : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_ServiceUnavailable;
        }
    }
    public static var GatewayTimeout : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_GatewayTimeout;
        }
    }
    public static var HttpVersionNotSupported : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_HttpVersionNotSupported;
        }
    }
    public static var VariantAlsoNegotiates : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_VariantAlsoNegotiates;
        }
    }
    public static var InsufficientStorage : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_InsufficientStorage;
        }
    }
    public static var LoopDetected : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_LoopDetected;
        }
    }
    public static var NotExtended : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotExtended;
        }
    }
    public static var NetworkAuthenticationRequired : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpStatusCode_NetworkAuthenticationRequired;
        }
    }
}
extension Windows.Web.Http.HttpVersion {
    public static var None : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpVersion_None;
        }
    }
    public static var Http10 : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpVersion_Http10;
        }
    }
    public static var Http11 : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpVersion_Http11;
        }
    }
    public static var Http20 : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CHttpVersion_Http20;
        }
    }
}
