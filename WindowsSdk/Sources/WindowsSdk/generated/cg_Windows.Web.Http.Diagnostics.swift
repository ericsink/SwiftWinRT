// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf8e10321, Data2: 0x47bd, Data3 : 0x526a, Data4 : (0xa9, 0xb2, 0x3b, 0xf1, 0x2f, 0x72, 0x5f, 0x8b)) }
    // [IsSpecialName] void Invoke(Windows.Web.Http.Diagnostics.HttpDiagnosticProvider, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs
// impl delegate type
open class impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs>>) in
        guard let self = impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs.from_impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Web.Http.Diagnostics.HttpDiagnosticProvider(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider(sender)), args: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs? {
        return pUnk?.bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2eef1846, Data2: 0x8176, Data3 : 0x52af, Data4 : (0x8d, 0x2b, 0xe0, 0xc9, 0x32, 0x51, 0x2e, 0x9f)) }
    // [IsSpecialName] void Invoke(Windows.Web.Http.Diagnostics.HttpDiagnosticProvider, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs
// impl delegate type
open class impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs>>) in
        guard let self = impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs.from_impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Web.Http.Diagnostics.HttpDiagnosticProvider(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider(sender)), args: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs? {
        return pUnk?.bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2281ad23, Data2: 0x9c8d, Data3 : 0x5d82, Data4 : (0x9b, 0x20, 0xbc, 0xf1, 0x57, 0xb0, 0x4f, 0xd9)) }
    // [IsSpecialName] void Invoke(Windows.Web.Http.Diagnostics.HttpDiagnosticProvider, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs
// impl delegate type
open class impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs>>) in
        guard let self = impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs.from_impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Web.Http.Diagnostics.HttpDiagnosticProvider(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider(sender)), args: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs? {
        return pUnk?.bindMemory(to: impl_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, args : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe9af27d3, Data2: 0x80e8, Data3 : 0x5aff, Data4 : (0xa7, 0xe5, 0x1b, 0x22, 0x17, 0x87, 0xf0, 0x96)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation
}
