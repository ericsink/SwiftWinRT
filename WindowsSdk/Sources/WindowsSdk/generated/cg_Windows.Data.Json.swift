// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed interface type
public class IVector_1__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd44662bc, Data2: 0xdce3, Data3 : 0x59a8, Data4 : (0x92, 0x72, 0x4b, 0x21, 0x0f, 0x33, 0x90, 0x8b)) }
    // Windows.Data.Json.IJsonValue GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Data.Json.IJsonValue> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Data.Json.IJsonValue> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CData_CJson_CIJsonValue> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CData_CJson_CIJsonValue(consuming: __result);
    }
    // bool IndexOf(Windows.Data.Json.IJsonValue, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Data.Json.IJsonValue>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Data.Json.IJsonValue)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Data.Json.IJsonValue)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Data.Json.IJsonValue)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Data.Json.IJsonValue[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Data.Json.IJsonValue[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IVectorView_1__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcffabb0f, Data2: 0x6bc4, Data3 : 0x5ff6, Data4 : (0x9b, 0x9e, 0x7a, 0x9d, 0xf6, 0xc6, 0x87, 0xc8)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IIterable_1__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xcb0492b6, Data2: 0x4113, Data3 : 0x55cf, Data4 : (0xb2, 0xc5, 0x99, 0xeb, 0x42, 0x8b, 0xa4, 0x93)) }
// method not needed: First
} // IIterable_1__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IIterator_1__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x189eb512, Data2: 0x5a20, Data3 : 0x5ec6, Data4 : (0x98, 0x66, 0x60, 0xaf, 0x96, 0xf0, 0xd2, 0x3b)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc9d9a725, Data2: 0x786b, Data3 : 0x5113, Data4 : (0xb4, 0xb7, 0x9b, 0x61, 0x76, 0x4c, 0x22, 0x0b)) }
// method not needed: Lookup
// method not needed: get_Size
// method not needed: HasKey
// method not needed: GetView
// method not needed: Insert
// method not needed: Remove
// method not needed: Clear
} // IMap_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xeecd690c, Data2: 0x1ff3, Data3 : 0x529f, Data4 : (0x92, 0x3f, 0x9b, 0x1c, 0x31, 0xfd, 0x3d, 0x0f)) }
// method not needed: Lookup
// method not needed: get_Size
// method not needed: HasKey
// method not needed: Split
} // IMapView_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xdfabb6e1, Data2: 0x0411, Data3 : 0x5a8f, Data4 : (0xaa, 0x87, 0x35, 0x4e, 0x71, 0x10, 0xf0, 0x99)) }
// method not needed: First
} // IIterable_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf948eac5, Data2: 0x33eb, Data3 : 0x50f5, Data4 : (0xb5, 0xaf, 0xe7, 0xce, 0xcf, 0x0e, 0x45, 0x01)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__cg_CWindows_CFoundation_CCollections_IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
// closed interface type
public class IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x4deecc89, Data2: 0xb0b8, Data3 : 0x5ee8, Data4 : (0xa5, 0x1d, 0x1c, 0x25, 0xad, 0x9a, 0x5b, 0x01)) }
// method not needed: get_Key
// method not needed: get_Value
} // IKeyValuePair_2_HSTRING__q_CWindows_CData_CJson_CIJsonValue
}
