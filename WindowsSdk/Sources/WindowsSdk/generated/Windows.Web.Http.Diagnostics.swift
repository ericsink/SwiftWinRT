// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.Web.Http.Diagnostics {
// type: Windows.Web.Http.Diagnostics.HttpDiagnosticProvider
// runtime class
public class HttpDiagnosticProvider
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider;
    public init(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider { return _self; }
    private struct _IHttpDiagnosticProviderStatics {
        static var x : IHttpDiagnosticProviderStatics =
            try! RoGetActivationFactory("Windows.Web.Http.Diagnostics.HttpDiagnosticProvider")
    }
    public static var HttpDiagnosticProviderStatics : IHttpDiagnosticProviderStatics {
        _IHttpDiagnosticProviderStatics.x
    }
    public static func CreateFromProcessDiagnosticInfo(processDiagnosticInfo : Optional<Windows.System.Diagnostics.ProcessDiagnosticInfo>) throws -> Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider> {
        return try Windows.Web.Http.Diagnostics.HttpDiagnosticProvider(plok: HttpDiagnosticProviderStatics.CreateFromProcessDiagnosticInfo(processDiagnosticInfo: processDiagnosticInfo!.Interface()));
    }
    public func Start() throws -> Void {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.Start();
    }
    public func Stop() throws -> Void {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.Stop();
    }
    public func add_RequestSent(handler : @escaping (Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>) throws -> Void) throws -> Windows.Foundation.EventRegistrationToken {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.add_RequestSent(handler: ClosedGenerics.TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs(cb: handler).Interface());
    }
    public func remove_RequestSent(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.remove_RequestSent(token: token);
    }
    public func add_ResponseReceived(handler : @escaping (Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Void) throws -> Windows.Foundation.EventRegistrationToken {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.add_ResponseReceived(handler: ClosedGenerics.TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs(cb: handler).Interface());
    }
    public func remove_ResponseReceived(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.remove_ResponseReceived(token: token);
    }
    public func add_RequestResponseCompleted(handler : @escaping (Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider>, Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Void) throws -> Windows.Foundation.EventRegistrationToken {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.add_RequestResponseCompleted(handler: ClosedGenerics.TypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs(cb: handler).Interface());
    }
    public func remove_RequestResponseCompleted(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider = try _self.QueryInterface();
        return try _ifc.remove_RequestResponseCompleted(token: token);
    }
}

// type: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs
// runtime class
public class HttpDiagnosticProviderRequestResponseCompletedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs;
    public init(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs { return _self; }
    public func get_ActivityId() throws -> GUID {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_ActivityId();
    }
    public func get_Timestamps() throws -> Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps(plok: _ifc.get_Timestamps());
    }
    public func get_RequestedUri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_RequestedUri());
    }
    public func get_ProcessId() throws -> Swift.UInt32 {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_ProcessId();
    }
    public func get_ThreadId() throws -> Swift.UInt32 {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_ThreadId();
    }
    public func get_Initiator() throws -> Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_Initiator();
    }
    public func get_SourceLocations() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.get_SourceLocations();
    }
    public var ActivityId : GUID {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.ActivityId;
        }
    }
    public var Initiator : Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.Initiator;
        }
    }
    public var ProcessId : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.ProcessId;
        }
    }
    public var RequestedUri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.RequestedUri);
        }
    }
    public var SourceLocations : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.SourceLocations;
        }
    }
    public var ThreadId : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try _ifc.ThreadId;
        }
    }
    public var Timestamps : Optional<Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps(plok: _ifc.Timestamps);
        }
    }
}

// type: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps
// runtime class
public class HttpDiagnosticProviderRequestResponseTimestamps
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps;
    public init(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps { return _self; }
    public func get_CacheCheckedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_CacheCheckedTimestamp();
    }
    public func get_ConnectionInitiatedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_ConnectionInitiatedTimestamp();
    }
    public func get_NameResolvedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_NameResolvedTimestamp();
    }
    public func get_SslNegotiatedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_SslNegotiatedTimestamp();
    }
    public func get_ConnectionCompletedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_ConnectionCompletedTimestamp();
    }
    public func get_RequestSentTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_RequestSentTimestamp();
    }
    public func get_RequestCompletedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_RequestCompletedTimestamp();
    }
    public func get_ResponseReceivedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_ResponseReceivedTimestamp();
    }
    public func get_ResponseCompletedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.get_ResponseCompletedTimestamp();
    }
    public var CacheCheckedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.CacheCheckedTimestamp;
        }
    }
    public var ConnectionCompletedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.ConnectionCompletedTimestamp;
        }
    }
    public var ConnectionInitiatedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.ConnectionInitiatedTimestamp;
        }
    }
    public var NameResolvedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.NameResolvedTimestamp;
        }
    }
    public var RequestCompletedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.RequestCompletedTimestamp;
        }
    }
    public var RequestSentTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.RequestSentTimestamp;
        }
    }
    public var ResponseCompletedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.ResponseCompletedTimestamp;
        }
    }
    public var ResponseReceivedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.ResponseReceivedTimestamp;
        }
    }
    public var SslNegotiatedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps = try _self.QueryInterface();
        return try _ifc.SslNegotiatedTimestamp;
        }
    }
}

// type: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs
// runtime class
public class HttpDiagnosticProviderRequestSentEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs;
    public init(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs { return _self; }
    public func get_Timestamp() throws -> Windows.Foundation.DateTime {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.get_Timestamp();
    }
    public func get_ActivityId() throws -> GUID {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.get_ActivityId();
    }
    public func get_Message() throws -> Optional<Windows.Web.Http.HttpRequestMessage> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.get_Message());
    }
    public func get_ProcessId() throws -> Swift.UInt32 {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.get_ProcessId();
    }
    public func get_ThreadId() throws -> Swift.UInt32 {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.get_ThreadId();
    }
    public func get_Initiator() throws -> Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.get_Initiator();
    }
    public func get_SourceLocations() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.get_SourceLocations();
    }
    public var ActivityId : GUID {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.ActivityId;
        }
    }
    public var Initiator : Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.Initiator;
        }
    }
    public var Message : Optional<Windows.Web.Http.HttpRequestMessage> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpRequestMessage(plok: _ifc.Message);
        }
    }
    public var ProcessId : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.ProcessId;
        }
    }
    public var SourceLocations : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.SourceLocations;
        }
    }
    public var ThreadId : Swift.UInt32 {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.ThreadId;
        }
    }
    public var Timestamp : Windows.Foundation.DateTime {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs = try _self.QueryInterface();
        return try _ifc.Timestamp;
        }
    }
}

// type: Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs
// runtime class
public class HttpDiagnosticProviderResponseReceivedEventArgs
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs;
    public init(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs { return _self; }
    public func get_Timestamp() throws -> Windows.Foundation.DateTime {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs = try _self.QueryInterface();
        return try _ifc.get_Timestamp();
    }
    public func get_ActivityId() throws -> GUID {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs = try _self.QueryInterface();
        return try _ifc.get_ActivityId();
    }
    public func get_Message() throws -> Optional<Windows.Web.Http.HttpResponseMessage> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.get_Message());
    }
    public var ActivityId : GUID {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs = try _self.QueryInterface();
        return try _ifc.ActivityId;
        }
    }
    public var Message : Optional<Windows.Web.Http.HttpResponseMessage> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs = try _self.QueryInterface();
        return try Windows.Web.Http.HttpResponseMessage(plok: _ifc.Message);
        }
    }
    public var Timestamp : Windows.Foundation.DateTime {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs = try _self.QueryInterface();
        return try _ifc.Timestamp;
        }
    }
}

// type: Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator
// enum type
public typealias HttpDiagnosticRequestInitiator = _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator;

// type: Windows.Web.Http.Diagnostics.HttpDiagnosticSourceLocation
// runtime class
public class HttpDiagnosticSourceLocation
    :
    WinRT.Object
{
    private var _self : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation;
    public init(plok: Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation { return _self; }
    public func get_SourceUri() throws -> Optional<Windows.Foundation.Uri> {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.get_SourceUri());
    }
    public func get_LineNumber() throws -> Swift.UInt64 {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation = try _self.QueryInterface();
        return try _ifc.get_LineNumber();
    }
    public func get_ColumnNumber() throws -> Swift.UInt64 {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation = try _self.QueryInterface();
        return try _ifc.get_ColumnNumber();
    }
    public var ColumnNumber : Swift.UInt64 {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation = try _self.QueryInterface();
        return try _ifc.ColumnNumber;
        }
    }
    public var LineNumber : Swift.UInt64 {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation = try _self.QueryInterface();
        return try _ifc.LineNumber;
        }
    }
    public var SourceUri : Optional<Windows.Foundation.Uri> {
        get throws {
        let _ifc : Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation = try _self.QueryInterface();
        return try Windows.Foundation.Uri(plok: _ifc.SourceUri);
        }
    }
}

// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider
// interface type
open class IHttpDiagnosticProvider
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbd811501, Data2: 0xa056, Data3 : 0x4d39, Data4 : (0xb1, 0x74, 0x83, 0x3b, 0x7b, 0x03, 0xb0, 0x2c)) }
    // void Start()
    private func _n_Start() throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Start(pThis))
        }
    }
    public func Start() throws -> Void {
        try self._n_Start();
    }
    // void Stop()
    private func _n_Stop() throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Stop(pThis))
        }
    }
    public func Stop() throws -> Void {
        try self._n_Stop();
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_RequestSent(Windows.Foundation.TypedEventHandler<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider,Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>)
    private func _n_add_RequestSent(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_RequestSent(pThis, handler, __presult))
        }
    }
    public func add_RequestSent(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestSentEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_RequestSent(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_RequestSent(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_RequestSent(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_RequestSent(pThis, token))
        }
    }
    public func remove_RequestSent(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_RequestSent(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_ResponseReceived(Windows.Foundation.TypedEventHandler<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider,Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>)
    private func _n_add_ResponseReceived(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_ResponseReceived(pThis, handler, __presult))
        }
    }
    public func add_ResponseReceived(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderResponseReceivedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_ResponseReceived(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_ResponseReceived(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_ResponseReceived(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ResponseReceived(pThis, token))
        }
    }
    public func remove_ResponseReceived(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_ResponseReceived(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_RequestResponseCompleted(Windows.Foundation.TypedEventHandler<Windows.Web.Http.Diagnostics.HttpDiagnosticProvider,Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>)
    private func _n_add_RequestResponseCompleted(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_RequestResponseCompleted(pThis, handler, __presult))
        }
    }
    public func add_RequestResponseCompleted(handler : Optional<ClosedGenerics.ITypedEventHandler_2__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProvider__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticProviderRequestResponseCompletedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_RequestResponseCompleted(RawPointer(handler), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_RequestResponseCompleted(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_RequestResponseCompleted(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_RequestResponseCompleted(pThis, token))
        }
    }
    public func remove_RequestResponseCompleted(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_RequestResponseCompleted(token);
    }
} // IHttpDiagnosticProvider


// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs
// interface type
open class IHttpDiagnosticProviderRequestResponseCompletedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x735f98ee, Data2: 0x94f6, Data3 : 0x4532, Data4 : (0xb2, 0x6e, 0x61, 0xe1, 0xb1, 0xe4, 0xef, 0xd4)) }
    // [IsSpecialName] System.Guid get_ActivityId()
    private func _n_get_ActivityId(_ __presult: UnsafeMutablePointer<GUID>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ActivityId(pThis, __presult))
        }
    }
    public func get_ActivityId() throws -> GUID {
        var __result : GUID = CWinRT.GUID(Data1: 0x00000000, Data2: 0x0000, Data3 : 0x0000, Data4 : (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        try self._n_get_ActivityId(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps get_Timestamps()
    private func _n_get_Timestamps(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Timestamps(pThis, __presult))
        }
    }
    public func get_Timestamps() throws -> Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps>> = nil;
        try self._n_get_Timestamps(&__result);
        return Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.Uri get_RequestedUri()
    private func _n_get_RequestedUri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestedUri(pThis, __presult))
        }
    }
    public func get_RequestedUri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_RequestedUri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_ProcessId()
    private func _n_get_ProcessId(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProcessId(pThis, __presult))
        }
    }
    public func get_ProcessId() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_ProcessId(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt32 get_ThreadId()
    private func _n_get_ThreadId(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ThreadId(pThis, __presult))
        }
    }
    public func get_ThreadId() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_ThreadId(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator get_Initiator()
    private func _n_get_Initiator(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Initiator(pThis, __presult))
        }
    }
    public func get_Initiator() throws -> Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        var __result : _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator = _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_ParsedElement;
        try self._n_get_Initiator(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVectorView<Windows.Web.Http.Diagnostics.HttpDiagnosticSourceLocation> get_SourceLocations()
    private func _n_get_SourceLocations(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SourceLocations(pThis, __presult))
        }
    }
    public func get_SourceLocations() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation>> = nil;
        try self._n_get_SourceLocations(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation(consuming: __result);
    }
    public var ActivityId : GUID {
        get throws {
            return try get_ActivityId();
        }
    }
    public var Initiator : Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        get throws {
            return try get_Initiator();
        }
    }
    public var ProcessId : Swift.UInt32 {
        get throws {
            return try get_ProcessId();
        }
    }
    public var RequestedUri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_RequestedUri();
        }
    }
    public var SourceLocations : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        get throws {
            return try get_SourceLocations();
        }
    }
    public var ThreadId : Swift.UInt32 {
        get throws {
            return try get_ThreadId();
        }
    }
    public var Timestamps : Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps> {
        get throws {
            return try get_Timestamps();
        }
    }
} // IHttpDiagnosticProviderRequestResponseCompletedEventArgs


// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps
// interface type
open class IHttpDiagnosticProviderRequestResponseTimestamps
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe0afde10, Data2: 0x55cf, Data3 : 0x4c01, Data4 : (0x91, 0xd4, 0xa2, 0x05, 0x57, 0xd8, 0x49, 0xf0)) }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_CacheCheckedTimestamp()
    private func _n_get_CacheCheckedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CacheCheckedTimestamp(pThis, __presult))
        }
    }
    public func get_CacheCheckedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_CacheCheckedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_ConnectionInitiatedTimestamp()
    private func _n_get_ConnectionInitiatedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ConnectionInitiatedTimestamp(pThis, __presult))
        }
    }
    public func get_ConnectionInitiatedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_ConnectionInitiatedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_NameResolvedTimestamp()
    private func _n_get_NameResolvedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_NameResolvedTimestamp(pThis, __presult))
        }
    }
    public func get_NameResolvedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_NameResolvedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_SslNegotiatedTimestamp()
    private func _n_get_SslNegotiatedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SslNegotiatedTimestamp(pThis, __presult))
        }
    }
    public func get_SslNegotiatedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_SslNegotiatedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_ConnectionCompletedTimestamp()
    private func _n_get_ConnectionCompletedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ConnectionCompletedTimestamp(pThis, __presult))
        }
    }
    public func get_ConnectionCompletedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_ConnectionCompletedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_RequestSentTimestamp()
    private func _n_get_RequestSentTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestSentTimestamp(pThis, __presult))
        }
    }
    public func get_RequestSentTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_RequestSentTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_RequestCompletedTimestamp()
    private func _n_get_RequestCompletedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestCompletedTimestamp(pThis, __presult))
        }
    }
    public func get_RequestCompletedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_RequestCompletedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_ResponseReceivedTimestamp()
    private func _n_get_ResponseReceivedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResponseReceivedTimestamp(pThis, __presult))
        }
    }
    public func get_ResponseReceivedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_ResponseReceivedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    // [IsSpecialName] Windows.Foundation.IReference<Windows.Foundation.DateTime> get_ResponseCompletedTimestamp()
    private func _n_get_ResponseCompletedTimestamp(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResponseCompletedTimestamp(pThis, __presult))
        }
    }
    public func get_ResponseCompletedTimestamp() throws -> Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IReference_1__q_CWindows_CFoundation_CDateTime>> = nil;
        try self._n_get_ResponseCompletedTimestamp(&__result);
        return ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime(consuming: __result);
    }
    public var CacheCheckedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_CacheCheckedTimestamp();
        }
    }
    public var ConnectionCompletedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_ConnectionCompletedTimestamp();
        }
    }
    public var ConnectionInitiatedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_ConnectionInitiatedTimestamp();
        }
    }
    public var NameResolvedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_NameResolvedTimestamp();
        }
    }
    public var RequestCompletedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_RequestCompletedTimestamp();
        }
    }
    public var RequestSentTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_RequestSentTimestamp();
        }
    }
    public var ResponseCompletedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_ResponseCompletedTimestamp();
        }
    }
    public var ResponseReceivedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_ResponseReceivedTimestamp();
        }
    }
    public var SslNegotiatedTimestamp : Optional<ClosedGenerics.IReference_1__q_CWindows_CFoundation_CDateTime> {
        get throws {
            return try get_SslNegotiatedTimestamp();
        }
    }
} // IHttpDiagnosticProviderRequestResponseTimestamps


// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs
// interface type
open class IHttpDiagnosticProviderRequestSentEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3f5196d0, Data2: 0x4c1f, Data3 : 0x4ebe, Data4 : (0xa5, 0x7a, 0x06, 0x93, 0x07, 0x71, 0xc5, 0x0d)) }
    // [IsSpecialName] Windows.Foundation.DateTime get_Timestamp()
    private func _n_get_Timestamp(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CDateTime>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Timestamp(pThis, __presult))
        }
    }
    public func get_Timestamp() throws -> Windows.Foundation.DateTime {
        var __result : _q_CWindows_CFoundation_CDateTime = _q_CWindows_CFoundation_CDateTime(UniversalTime: 0);
        try self._n_get_Timestamp(&__result);
        return __result;
    }
    // [IsSpecialName] System.Guid get_ActivityId()
    private func _n_get_ActivityId(_ __presult: UnsafeMutablePointer<GUID>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ActivityId(pThis, __presult))
        }
    }
    public func get_ActivityId() throws -> GUID {
        var __result : GUID = CWinRT.GUID(Data1: 0x00000000, Data2: 0x0000, Data3 : 0x0000, Data4 : (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        try self._n_get_ActivityId(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.HttpRequestMessage get_Message()
    private func _n_get_Message(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Message(pThis, __presult))
        }
    }
    public func get_Message() throws -> Optional<Windows.Web.Http.IHttpRequestMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpRequestMessage>> = nil;
        try self._n_get_Message(&__result);
        return Windows.Web.Http.IHttpRequestMessage(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_ProcessId()
    private func _n_get_ProcessId(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProcessId(pThis, __presult))
        }
    }
    public func get_ProcessId() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_ProcessId(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt32 get_ThreadId()
    private func _n_get_ThreadId(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ThreadId(pThis, __presult))
        }
    }
    public func get_ThreadId() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_ThreadId(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator get_Initiator()
    private func _n_get_Initiator(_ __presult: UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Initiator(pThis, __presult))
        }
    }
    public func get_Initiator() throws -> Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        var __result : _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator = _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_ParsedElement;
        try self._n_get_Initiator(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Foundation.Collections.IVectorView<Windows.Web.Http.Diagnostics.HttpDiagnosticSourceLocation> get_SourceLocations()
    private func _n_get_SourceLocations(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SourceLocations(pThis, __presult))
        }
    }
    public func get_SourceLocations() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation>> = nil;
        try self._n_get_SourceLocations(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation(consuming: __result);
    }
    public var ActivityId : GUID {
        get throws {
            return try get_ActivityId();
        }
    }
    public var Initiator : Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
        get throws {
            return try get_Initiator();
        }
    }
    public var Message : Optional<Windows.Web.Http.IHttpRequestMessage> {
        get throws {
            return try get_Message();
        }
    }
    public var ProcessId : Swift.UInt32 {
        get throws {
            return try get_ProcessId();
        }
    }
    public var SourceLocations : Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticSourceLocation> {
        get throws {
            return try get_SourceLocations();
        }
    }
    public var ThreadId : Swift.UInt32 {
        get throws {
            return try get_ThreadId();
        }
    }
    public var Timestamp : Windows.Foundation.DateTime {
        get throws {
            return try get_Timestamp();
        }
    }
} // IHttpDiagnosticProviderRequestSentEventArgs


// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs
// interface type
open class IHttpDiagnosticProviderResponseReceivedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa0a2566c, Data2: 0xab5f, Data3 : 0x4d66, Data4 : (0xbb, 0x2d, 0x08, 0x4c, 0xf4, 0x16, 0x35, 0xd0)) }
    // [IsSpecialName] Windows.Foundation.DateTime get_Timestamp()
    private func _n_get_Timestamp(_ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CDateTime>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Timestamp(pThis, __presult))
        }
    }
    public func get_Timestamp() throws -> Windows.Foundation.DateTime {
        var __result : _q_CWindows_CFoundation_CDateTime = _q_CWindows_CFoundation_CDateTime(UniversalTime: 0);
        try self._n_get_Timestamp(&__result);
        return __result;
    }
    // [IsSpecialName] System.Guid get_ActivityId()
    private func _n_get_ActivityId(_ __presult: UnsafeMutablePointer<GUID>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ActivityId(pThis, __presult))
        }
    }
    public func get_ActivityId() throws -> GUID {
        var __result : GUID = CWinRT.GUID(Data1: 0x00000000, Data2: 0x0000, Data3 : 0x0000, Data4 : (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        try self._n_get_ActivityId(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Web.Http.HttpResponseMessage get_Message()
    private func _n_get_Message(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Message(pThis, __presult))
        }
    }
    public func get_Message() throws -> Optional<Windows.Web.Http.IHttpResponseMessage> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CIHttpResponseMessage>> = nil;
        try self._n_get_Message(&__result);
        return Windows.Web.Http.IHttpResponseMessage(consuming: __result);
    }
    public var ActivityId : GUID {
        get throws {
            return try get_ActivityId();
        }
    }
    public var Message : Optional<Windows.Web.Http.IHttpResponseMessage> {
        get throws {
            return try get_Message();
        }
    }
    public var Timestamp : Windows.Foundation.DateTime {
        get throws {
            return try get_Timestamp();
        }
    }
} // IHttpDiagnosticProviderResponseReceivedEventArgs


// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderStatics
// interface type
open class IHttpDiagnosticProviderStatics
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x5b824ec1, Data2: 0x6a6c, Data3 : 0x47cc, Data4 : (0xaf, 0xec, 0x1e, 0x86, 0xbc, 0x26, 0x05, 0x3b)) }
    // Windows.Web.Http.Diagnostics.HttpDiagnosticProvider CreateFromProcessDiagnosticInfo(Windows.System.Diagnostics.ProcessDiagnosticInfo)
    private func _n_CreateFromProcessDiagnosticInfo(_ processDiagnosticInfo : Optional<UnsafeMutablePointer<_q_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromProcessDiagnosticInfo(pThis, processDiagnosticInfo, __presult))
        }
    }
    public func CreateFromProcessDiagnosticInfo(processDiagnosticInfo : Optional<Windows.System.Diagnostics.IProcessDiagnosticInfo>) throws -> Optional<Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider>> = nil;
        try self._n_CreateFromProcessDiagnosticInfo(RawPointer(processDiagnosticInfo), &__result);
        return Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider(consuming: __result);
    }
} // IHttpDiagnosticProviderStatics


// type: Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation
// interface type
open class IHttpDiagnosticSourceLocation
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x54a9d260, Data2: 0x8860, Data3 : 0x423f, Data4 : (0xb6, 0xfa, 0xd7, 0x77, 0x16, 0xf6, 0x47, 0xa7)) }
    // [IsSpecialName] Windows.Foundation.Uri get_SourceUri()
    private func _n_get_SourceUri(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>>>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SourceUri(pThis, __presult))
        }
    }
    public func get_SourceUri() throws -> Optional<Windows.Foundation.IUriRuntimeClass> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CFoundation_CIUriRuntimeClass>> = nil;
        try self._n_get_SourceUri(&__result);
        return Windows.Foundation.IUriRuntimeClass(consuming: __result);
    }
    // [IsSpecialName] System.UInt64 get_LineNumber()
    private func _n_get_LineNumber(_ __presult: UnsafeMutablePointer<UINT64>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LineNumber(pThis, __presult))
        }
    }
    public func get_LineNumber() throws -> Swift.UInt64 {
        var __result : UINT64 = 0;
        try self._n_get_LineNumber(&__result);
        return __result;
    }
    // [IsSpecialName] System.UInt64 get_ColumnNumber()
    private func _n_get_ColumnNumber(_ __presult: UnsafeMutablePointer<UINT64>?) throws {
        return try perform(as: _q_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ColumnNumber(pThis, __presult))
        }
    }
    public func get_ColumnNumber() throws -> Swift.UInt64 {
        var __result : UINT64 = 0;
        try self._n_get_ColumnNumber(&__result);
        return __result;
    }
    public var ColumnNumber : Swift.UInt64 {
        get throws {
            return try get_ColumnNumber();
        }
    }
    public var LineNumber : Swift.UInt64 {
        get throws {
            return try get_LineNumber();
        }
    }
    public var SourceUri : Optional<Windows.Foundation.IUriRuntimeClass> {
        get throws {
            return try get_SourceUri();
        }
    }
} // IHttpDiagnosticSourceLocation


}
extension Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator {
    public static var ParsedElement : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_ParsedElement;
        }
    }
    public static var Script : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Script;
        }
    }
    public static var Image : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Image;
        }
    }
    public static var Link : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Link;
        }
    }
    public static var Style : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Style;
        }
    }
    public static var XmlHttpRequest : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_XmlHttpRequest;
        }
    }
    public static var Media : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Media;
        }
    }
    public static var HtmlDownload : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_HtmlDownload;
        }
    }
    public static var Prefetch : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Prefetch;
        }
    }
    public static var Other : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Other;
        }
    }
    public static var CrossOriginPreFlight : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_CrossOriginPreFlight;
        }
    }
    public static var Fetch : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Fetch;
        }
    }
    public static var Beacon : Self {
        get {
            return _q_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Beacon;
        }
    }
}
