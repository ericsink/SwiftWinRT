// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xed56ab72, Data2: 0xebd3, Data3 : 0x52c8, Data4 : (0xb0, 0xac, 0x98, 0x7d, 0x30, 0x09, 0x03, 0x51)) }
    // [IsSpecialName] void Invoke(Windows.Storage.Provider.CachedFileUpdaterUI, Windows.Storage.Provider.FileUpdateRequestedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Storage.Provider.ICachedFileUpdaterUI>, args : Optional<Windows.Storage.Provider.IFileUpdateRequestedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI>>, _ args : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIFileUpdateRequestedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs.from_TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Storage.Provider.CachedFileUpdaterUI(plok: Windows.Storage.Provider.ICachedFileUpdaterUI(sender)), args: Windows.Storage.Provider.FileUpdateRequestedEventArgs(plok: Windows.Storage.Provider.IFileUpdateRequestedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, Optional<Windows.Storage.Provider.FileUpdateRequestedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, Optional<Windows.Storage.Provider.FileUpdateRequestedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, args : Optional<Windows.Storage.Provider.FileUpdateRequestedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, args : Optional<Windows.Storage.Provider.FileUpdateRequestedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI__q_CWindows_CStorage_CProvider_CFileUpdateRequestedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x45fdd443, Data2: 0xc0b9, Data3 : 0x57b0, Data4 : (0xa8, 0x4f, 0x7d, 0x87, 0x6e, 0xdc, 0x31, 0x49)) }
    // [IsSpecialName] void Invoke(Windows.Storage.Provider.CachedFileUpdaterUI, System.Object)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Windows.Storage.Provider.ICachedFileUpdaterUI>, args : Optional<WinRT.IInspectable>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable
// impl delegate type
open class TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectableVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CICachedFileUpdaterUI>>, _ args : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>) in
        guard let self = TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable.from_TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Windows.Storage.Provider.CachedFileUpdaterUI(plok: Windows.Storage.Provider.ICachedFileUpdaterUI(sender)), args: WinRT.Object(plok: WinRT.IInspectable(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, Optional<WinRT.Object>) throws -> Void>
    public init(cb : Optional<(Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, Optional<WinRT.Object>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, args : Optional<WinRT.Object>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_TypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Windows.Storage.Provider.CachedFileUpdaterUI>, args : Optional<WinRT.Object>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.GetInterface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CWindows_CStorage_CProvider_CCachedFileUpdaterUI_IInspectable {
        return _self
    }
}
// closed interface type
public class IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2b2a9a00, Data2: 0x9929, Data3 : 0x5154, Data4 : (0xa8, 0x97, 0x1e, 0x6c, 0xfd, 0x7c, 0xf2, 0x1a)) }
// method not needed: First
} // IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderError
// closed interface type
public class IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x638cc599, Data2: 0x72fe, Data3 : 0x54b2, Data4 : (0xbe, 0x50, 0x53, 0xf4, 0x46, 0xd8, 0xa5, 0x38)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderError
// closed interface type
public class IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x88932307, Data2: 0x2b4b, Data3 : 0x5235, Data4 : (0xab, 0x32, 0x6d, 0x32, 0x4a, 0x52, 0x37, 0x63)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderError
// closed interface type
public class IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf839fcff, Data2: 0x87df, Data3 : 0x53a7, Data4 : (0x94, 0xd4, 0xb5, 0x07, 0x10, 0x1e, 0x7e, 0x63)) }
    // Windows.Storage.Provider.StorageProviderItemPropertyDefinition GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Storage.Provider.IStorageProviderItemPropertyDefinition> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Storage.Provider.IStorageProviderItemPropertyDefinition(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Storage.Provider.StorageProviderItemPropertyDefinition> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition(consuming: __result);
    }
    // bool IndexOf(Windows.Storage.Provider.StorageProviderItemPropertyDefinition, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Storage.Provider.IStorageProviderItemPropertyDefinition>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Storage.Provider.StorageProviderItemPropertyDefinition)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Storage.Provider.IStorageProviderItemPropertyDefinition>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Storage.Provider.StorageProviderItemPropertyDefinition)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Storage.Provider.IStorageProviderItemPropertyDefinition>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Storage.Provider.StorageProviderItemPropertyDefinition)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Storage.Provider.IStorageProviderItemPropertyDefinition>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Storage.Provider.StorageProviderItemPropertyDefinition[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Storage.Provider.StorageProviderItemPropertyDefinition[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderItemPropertyDefinition>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition
// closed interface type
public class IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x327544ca, Data2: 0x45dc, Data3 : 0x5c83, Data4 : (0xb0, 0x54, 0x0a, 0x91, 0xe5, 0xfa, 0x0a, 0x29)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderItemPropertyDefinition
// closed interface type
public class IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9172e4ab, Data2: 0xa9ca, Data3 : 0x5cc4, Data4 : (0x93, 0x11, 0x36, 0x3f, 0x9f, 0x09, 0x7d, 0xa5)) }
    // Windows.Storage.Provider.StorageProviderFileTypeInfo GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Storage.Provider.IStorageProviderFileTypeInfo> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Storage.Provider.IStorageProviderFileTypeInfo(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Storage.Provider.StorageProviderFileTypeInfo> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo(consuming: __result);
    }
    // bool IndexOf(Windows.Storage.Provider.StorageProviderFileTypeInfo, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Storage.Provider.IStorageProviderFileTypeInfo>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Storage.Provider.StorageProviderFileTypeInfo)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Storage.Provider.IStorageProviderFileTypeInfo>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Storage.Provider.StorageProviderFileTypeInfo)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Storage.Provider.IStorageProviderFileTypeInfo>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Storage.Provider.StorageProviderFileTypeInfo)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Storage.Provider.IStorageProviderFileTypeInfo>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Storage.Provider.StorageProviderFileTypeInfo[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Storage.Provider.StorageProviderFileTypeInfo[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CIStorageProviderFileTypeInfo>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo
// closed interface type
public class IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8ac5508f, Data2: 0x9fc5, Data3 : 0x5ab4, Data4 : (0x99, 0x27, 0x9d, 0x7a, 0x25, 0xc1, 0xd0, 0xd2)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderFileTypeInfo
// closed interface type
public class IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8f0f439e, Data2: 0x87d0, Data3 : 0x531f, Data4 : (0x85, 0xb1, 0x54, 0xf4, 0x52, 0x8f, 0x29, 0xc3)) }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Provider.FileUpdateStatus>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.Provider.FileUpdateStatus> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus(consuming: __result);
    }
    // Windows.Storage.Provider.FileUpdateStatus GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<_q_CWindows_CStorage_CProvider_CFileUpdateStatus>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Windows.Storage.Provider.FileUpdateStatus {
        var __result : _q_CWindows_CStorage_CProvider_CFileUpdateStatus = _q_CWindows_CStorage_CProvider_CFileUpdateStatus_Incomplete;
        try self._n_GetResults(&__result);
        return __result;
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
// closed generic delegate type
public class IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xbb185a07, Data2: 0x0285, Data3 : 0x5f37, Data4 : (0x9c, 0x7d, 0x2f, 0xc6, 0xa3, 0xe0, 0xe6, 0xe5)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperation<Windows.Storage.Provider.FileUpdateStatus>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
// impl delegate type
open class AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatusVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus? {
        return pUnk?.bindMemory(to: AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus
{
    private var _self : ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus;
    public init(plok: ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus {
        return _self
    }
}
// closed interface type
public class IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x4584cb69, Data2: 0xee26, Data3 : 0x59e0, Data4 : (0xb0, 0x5d, 0xc9, 0xa7, 0x85, 0x1a, 0x73, 0x17)) }
// method not needed: First
} // IIterable_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty
// closed interface type
public class IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0c6dddde, Data2: 0x1aa3, Data3 : 0x54f5, Data4 : (0xb1, 0x39, 0xe4, 0xa2, 0x37, 0xdc, 0x1c, 0x5f)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__q_CWindows_CStorage_CProvider_CStorageProviderItemProperty
// closed interface type
public class IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x211521e5, Data2: 0x217c, Data3 : 0x5ff3, Data4 : (0xbf, 0x9e, 0x8d, 0xc4, 0xd6, 0x75, 0x17, 0x7f)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CStorage_CProvider_CStorageProviderSyncRootInfo
}
extension ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperation_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Windows.Storage.Provider.FileUpdateStatus {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationCompletedHandler_1__q_CWindows_CStorage_CProvider_CFileUpdateStatus =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
