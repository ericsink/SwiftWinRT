// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension ClosedGenerics {
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x44fa5a15, Data2: 0x1204, Data3 : 0x521c, Data4 : (0x85, 0xe5, 0x01, 0x25, 0x93, 0x01, 0xd5, 0x27)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.RetrievalProgress> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.RetrievalProgress> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // Windows.Web.Syndication.SyndicationItem GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Web.Syndication.ISyndicationItem> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Web.Syndication.ISyndicationItem(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb670d335, Data2: 0xe83b, Data3 : 0x58b1, Data4 : (0xad, 0x7b, 0x84, 0x03, 0x96, 0x08, 0x5c, 0x65)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.RetrievalProgress>, Windows.Web.Syndication.RetrievalProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9de7422b, Data2: 0x4bc3, Data3 : 0x5546, Data4 : (0x87, 0xb8, 0x2e, 0xeb, 0xfd, 0x60, 0xbe, 0x48)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.RetrievalProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe57d0717, Data2: 0x27c0, Data3 : 0x561e, Data4 : (0xb4, 0xb3, 0x72, 0xaa, 0x2b, 0x1e, 0x3f, 0xc9)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.TransferProgress>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.TransferProgress> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.TransferProgress>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.TransferProgress> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(consuming: __result);
    }
    // Windows.Web.Syndication.SyndicationItem GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Web.Syndication.ISyndicationItem> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Web.Syndication.ISyndicationItem(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x1ffb57b2, Data2: 0xd2de, Data3 : 0x5559, Data4 : (0x8d, 0xe2, 0x50, 0x10, 0x9c, 0x63, 0x53, 0x9b)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.TransferProgress>, Windows.Web.Syndication.TransferProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CTransferProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, progressInfo : Windows.Web.Syndication.TransferProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CTransferProgress) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Web.Syndication.TransferProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Web.Syndication.TransferProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, progressInfo : Windows.Web.Syndication.TransferProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, progressInfo : Windows.Web.Syndication.TransferProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8a796ea9, Data2: 0xff95, Data3 : 0x50ef, Data4 : (0x93, 0xea, 0x71, 0x1b, 0xf7, 0x94, 0x64, 0x73)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Syndication.SyndicationItem,Windows.Web.Syndication.TransferProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return _self
    }
}
// closed interface type
public class IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb7eb83f5, Data2: 0xa746, Data3 : 0x50f2, Data4 : (0xb9, 0x1f, 0x31, 0x80, 0x31, 0x61, 0xcc, 0xc7)) }
// method not needed: put_Progress
// method not needed: get_Progress
// method not needed: put_Completed
// method not needed: get_Completed
// method not needed: GetResults
} // IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress
// closed generic delegate type
public class IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc1610085, Data2: 0x94d0, Data3 : 0x5706, Data4 : (0x9a, 0xc6, 0x10, 0x17, 0x9d, 0x7d, 0xeb, 0x92)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncActionWithProgress<Windows.Web.Syndication.TransferProgress>, Windows.Web.Syndication.TransferProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CTransferProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, progressInfo : Windows.Web.Syndication.TransferProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
// impl delegate type
open class AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CTransferProgress) in
        guard let self = AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.from_AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Web.Syndication.TransferProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Web.Syndication.TransferProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress? {
        return pUnk?.bindMemory(to: AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, progressInfo : Windows.Web.Syndication.TransferProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private var _self : ClosedGenerics.IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress;
    public init(plok: ClosedGenerics.IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, progressInfo : Windows.Web.Syndication.TransferProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncActionProgressHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf1c031c8, Data2: 0x90bf, Data3 : 0x5cae, Data4 : (0xad, 0xf6, 0x15, 0x5b, 0x4a, 0xed, 0xfb, 0x60)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncActionWithProgress<Windows.Web.Syndication.TransferProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
// impl delegate type
open class AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.from_AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress? {
        return pUnk?.bindMemory(to: AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress
{
    private var _self : ClosedGenerics.IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress;
    public init(plok: ClosedGenerics.IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncActionWithProgress_1__q_CWindows_CWeb_CSyndication_CTransferProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncActionWithProgressCompletedHandler_1__q_CWindows_CWeb_CSyndication_CTransferProgress {
        return _self
    }
}
// closed interface type
public class IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x92eaf151, Data2: 0x415e, Data3 : 0x5f87, Data4 : (0x80, 0x95, 0x78, 0x16, 0x23, 0xc8, 0x89, 0x98)) }
    // [IsSpecialName] void put_Progress(Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Syndication.SyndicationFeed,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Progress(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Progress(pThis, handler))
        }
    }
    public func put_Progress(handler : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Progress(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Syndication.SyndicationFeed,Windows.Web.Syndication.RetrievalProgress> get_Progress()
    private func _n_get_Progress(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Progress(pThis, __presult))
        }
    }
    public func get_Progress() throws -> Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Progress(&__result);
        return ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // [IsSpecialName] void put_Completed(Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Syndication.SyndicationFeed,Windows.Web.Syndication.RetrievalProgress>)
    private func _n_put_Completed(_ handler : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Completed(pThis, handler))
        }
    }
    public func put_Completed(handler : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>) throws -> Void {
        try self._n_put_Completed(RawPointer(handler));
    }
    // [IsSpecialName] Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Syndication.SyndicationFeed,Windows.Web.Syndication.RetrievalProgress> get_Completed()
    private func _n_get_Completed(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Completed(pThis, __presult))
        }
    }
    public func get_Completed() throws -> Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>> = nil;
        try self._n_get_Completed(&__result);
        return ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(consuming: __result);
    }
    // Windows.Web.Syndication.SyndicationFeed GetResults()
    private func _n_GetResults(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationFeed>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetResults(pThis, __presult))
        }
    }
    public func GetResults() throws -> Optional<Windows.Web.Syndication.ISyndicationFeed> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationFeed>> = nil;
        try self._n_GetResults(&__result);
        return Windows.Web.Syndication.ISyndicationFeed(consuming: __result);
    }
    public var Progress : Optional<ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Progress();
        }
    }
    public var Completed : Optional<ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress> {
        get throws {
            return try get_Completed();
        }
    }
} // IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// closed generic delegate type
public class IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x1017bbe0, Data2: 0x9d10, Data3 : 0x543e, Data4 : (0x8f, 0x03, 0x88, 0x51, 0x22, 0xa0, 0x82, 0xf3)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Syndication.SyndicationFeed,Windows.Web.Syndication.RetrievalProgress>, Windows.Web.Syndication.RetrievalProgress)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, progressInfo))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), progressInfo);
    }
} // IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ progressInfo : _q_CWindows_CWeb_CSyndication_CRetrievalProgress) in
        guard let self = AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), progressInfo: progressInfo)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Web.Syndication.RetrievalProgress) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, progressInfo)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, progressInfo : Windows.Web.Syndication.RetrievalProgress) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, progressInfo: progressInfo);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed generic delegate type
public class IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0e3d7f70, Data2: 0x4e8c, Data3 : 0x5260, Data4 : (0xa7, 0xe5, 0x78, 0x6e, 0x05, 0xbd, 0xed, 0x99)) }
    // [IsSpecialName] void Invoke(Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Syndication.SyndicationFeed,Windows.Web.Syndication.RetrievalProgress>, Windows.Foundation.AsyncStatus)
    private func _n_Invoke(_ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) throws {
        return try perform(as: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, asyncInfo, asyncStatus))
        }
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        try self._n_Invoke(RawPointer(asyncInfo), asyncStatus);
    }
} // IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
// impl delegate type
open class AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private static var vtable: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgressVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ asyncInfo : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>>, _ asyncStatus : _q_CWindows_CFoundation_CAsyncStatus) in
        guard let self = AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(asyncInfo), asyncStatus: asyncStatus)
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void>
    public init(cb : Optional<(Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, Windows.Foundation.AsyncStatus) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(_ pUnk: UnsafeMutableRawPointer?) -> AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress? {
        return pUnk?.bindMemory(to: AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        if let cb = _cb {
            return try cb(asyncInfo, asyncStatus)
        }
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class wrap_AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress
{
    private var _self : ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress;
    public init(plok: ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress?) throws {
        _self = plok!
    }
    public func Invoke(asyncInfo : Optional<ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress>, asyncStatus : Windows.Foundation.AsyncStatus) throws -> Void {
        return try _self.Invoke(asyncInfo: asyncInfo, asyncStatus: asyncStatus);
    }
    public func Interface() -> ClosedGenerics.IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        return _self
    }
}
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa1ac007c, Data2: 0x9d94, Data3 : 0x552e, Data4 : (0x84, 0x0e, 0x13, 0x9f, 0x10, 0x9a, 0x9b, 0x88)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory
// closed interface type
public class IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2fe84e7b, Data2: 0x2350, Data3 : 0x5941, Data4 : (0x94, 0xb5, 0xa6, 0x46, 0x77, 0xb5, 0x85, 0xd1)) }
    // Windows.Web.Syndication.SyndicationAttribute GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Web.Syndication.ISyndicationAttribute> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Web.Syndication.ISyndicationAttribute(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Web.Syndication.SyndicationAttribute> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute(consuming: __result);
    }
    // bool IndexOf(Windows.Web.Syndication.SyndicationAttribute, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Web.Syndication.ISyndicationAttribute>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Web.Syndication.SyndicationAttribute)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationAttribute>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Web.Syndication.SyndicationAttribute)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationAttribute>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Web.Syndication.SyndicationAttribute)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Web.Syndication.ISyndicationAttribute>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Web.Syndication.SyndicationAttribute[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Web.Syndication.SyndicationAttribute[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationAttribute>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc1d6d1cc, Data2: 0x69ce, Data3 : 0x5486, Data4 : (0x9f, 0x35, 0xc8, 0x7e, 0x13, 0x11, 0x13, 0x87)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationAttribute
// closed interface type
public class IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf4508afa, Data2: 0x9f02, Data3 : 0x5eb8, Data4 : (0xa3, 0x89, 0x14, 0xbb, 0xe5, 0x19, 0x3a, 0xc0)) }
    // Windows.Web.Syndication.ISyndicationNode GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Web.Syndication.ISyndicationNode> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Web.Syndication.ISyndicationNode(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Web.Syndication.ISyndicationNode> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode(consuming: __result);
    }
    // bool IndexOf(Windows.Web.Syndication.ISyndicationNode, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Web.Syndication.ISyndicationNode>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Web.Syndication.ISyndicationNode)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationNode>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Web.Syndication.ISyndicationNode)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationNode>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Web.Syndication.ISyndicationNode)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Web.Syndication.ISyndicationNode>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Web.Syndication.ISyndicationNode[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Web.Syndication.ISyndicationNode[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationNode>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CWeb_CSyndication_CISyndicationNode
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6b4bd4a1, Data2: 0xb4f6, Data3 : 0x5433, Data4 : (0xaf, 0xd7, 0xbd, 0x2e, 0x50, 0x1a, 0x10, 0x41)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CSyndication_CISyndicationNode
// closed interface type
public class IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xab772cd6, Data2: 0x8ce7, Data3 : 0x5db9, Data4 : (0x83, 0xac, 0x0d, 0xb9, 0xe4, 0x4a, 0x1b, 0x0c)) }
    // Windows.Web.Syndication.SyndicationPerson GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Web.Syndication.ISyndicationPerson> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Web.Syndication.ISyndicationPerson(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Web.Syndication.SyndicationPerson> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson(consuming: __result);
    }
    // bool IndexOf(Windows.Web.Syndication.SyndicationPerson, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Web.Syndication.ISyndicationPerson>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Web.Syndication.SyndicationPerson)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationPerson>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Web.Syndication.SyndicationPerson)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationPerson>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Web.Syndication.SyndicationPerson)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Web.Syndication.ISyndicationPerson>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Web.Syndication.SyndicationPerson[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Web.Syndication.SyndicationPerson[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationPerson>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0e450d3d, Data2: 0xe750, Data3 : 0x5787, Data4 : (0x88, 0x5b, 0x48, 0x8a, 0xbc, 0x72, 0xb5, 0xb9)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationPerson
// closed interface type
public class IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x72e456e4, Data2: 0x0e52, Data3 : 0x52cb, Data4 : (0xb3, 0x63, 0xf3, 0x58, 0x13, 0x27, 0xf0, 0x33)) }
    // Windows.Web.Syndication.SyndicationCategory GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Web.Syndication.ISyndicationCategory> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Web.Syndication.ISyndicationCategory(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Web.Syndication.SyndicationCategory> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory(consuming: __result);
    }
    // bool IndexOf(Windows.Web.Syndication.SyndicationCategory, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Web.Syndication.ISyndicationCategory>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Web.Syndication.SyndicationCategory)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationCategory>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Web.Syndication.SyndicationCategory)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationCategory>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Web.Syndication.SyndicationCategory)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Web.Syndication.ISyndicationCategory>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Web.Syndication.SyndicationCategory[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Web.Syndication.SyndicationCategory[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationCategory>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationCategory
// closed interface type
public class IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xaa01130b, Data2: 0x4631, Data3 : 0x5117, Data4 : (0x8c, 0x48, 0xdc, 0x21, 0xb0, 0x29, 0x50, 0x96)) }
    // Windows.Web.Syndication.SyndicationItem GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Web.Syndication.ISyndicationItem> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Web.Syndication.ISyndicationItem(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Web.Syndication.SyndicationItem> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem(consuming: __result);
    }
    // bool IndexOf(Windows.Web.Syndication.SyndicationItem, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Web.Syndication.ISyndicationItem>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Web.Syndication.SyndicationItem)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationItem>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Web.Syndication.SyndicationItem)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationItem>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Web.Syndication.SyndicationItem)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Web.Syndication.ISyndicationItem>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Web.Syndication.SyndicationItem[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Web.Syndication.SyndicationItem[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationItem>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationItem
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9496279b, Data2: 0x567e, Data3 : 0x5652, Data4 : (0xb9, 0x42, 0xf6, 0xfb, 0x70, 0xc3, 0x41, 0x73)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationItem
// closed interface type
public class IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb8fb25a5, Data2: 0x01c3, Data3 : 0x5207, Data4 : (0x81, 0x4e, 0x89, 0x2b, 0x2b, 0x53, 0x43, 0xf7)) }
    // Windows.Web.Syndication.SyndicationLink GetAt(System.UInt32)
    private func _n_GetAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetAt(pThis, index, __presult))
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Web.Syndication.ISyndicationLink> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>> = nil;
        try self._n_GetAt(index, &__result);
        return Windows.Web.Syndication.ISyndicationLink(consuming: __result);
    }
    // [IsSpecialName] System.UInt32 get_Size()
    private func _n_get_Size(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, __presult))
        }
    }
    public func get_Size() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_Size(&__result);
        return __result;
    }
    // Windows.Foundation.Collections.IVectorView<Windows.Web.Syndication.SyndicationLink> GetView()
    private func _n_GetView(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink>>>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetView(pThis, __presult))
        }
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink> {
        var __result : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink>> = nil;
        try self._n_GetView(&__result);
        return ClosedGenerics.IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink(consuming: __result);
    }
    // bool IndexOf(Windows.Web.Syndication.SyndicationLink, ref System.UInt32)
    private func _n_IndexOf(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>, _ index : UnsafeMutablePointer<UINT32>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.IndexOf(pThis, value, index, __presult))
        }
    }
    public func IndexOf(value : Optional<Windows.Web.Syndication.ISyndicationLink>, index : inout Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
            var _tmp_out_index: UINT32 = 0;
        try self._n_IndexOf(RawPointer(value), &_tmp_out_index, &__result);
            index = _tmp_out_index;
        return __result;
    }
    // void SetAt(System.UInt32, Windows.Web.Syndication.SyndicationLink)
    private func _n_SetAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetAt(pThis, index, value))
        }
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationLink>) throws -> Void {
        try self._n_SetAt(index, RawPointer(value));
    }
    // void InsertAt(System.UInt32, Windows.Web.Syndication.SyndicationLink)
    private func _n_InsertAt(_ index : UINT32, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InsertAt(pThis, index, value))
        }
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Web.Syndication.ISyndicationLink>) throws -> Void {
        try self._n_InsertAt(index, RawPointer(value));
    }
    // void RemoveAt(System.UInt32)
    private func _n_RemoveAt(_ index : UINT32) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAt(pThis, index))
        }
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        try self._n_RemoveAt(index);
    }
    // void Append(Windows.Web.Syndication.SyndicationLink)
    private func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<Windows.Web.Syndication.ISyndicationLink>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
    // void RemoveAtEnd()
    private func _n_RemoveAtEnd() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAtEnd(pThis))
        }
    }
    public func RemoveAtEnd() throws -> Void {
        try self._n_RemoveAtEnd();
    }
    // void Clear()
    private func _n_Clear() throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Clear(pThis))
        }
    }
    public func Clear() throws -> Void {
        try self._n_Clear();
    }
    // System.UInt32 GetMany(System.UInt32, Windows.Web.Syndication.SyndicationLink[])
    private func _n_GetMany(_ startIndex : UINT32, _ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>>>, _ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetMany(pThis, startIndex, itemsLength, items, __presult))
        }
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>>>) throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_GetMany(startIndex, itemsLength, items, &__result);
        return __result;
    }
    // void ReplaceAll(Windows.Web.Syndication.SyndicationLink[])
    private func _n_ReplaceAll(_ itemsLength : UINT32, _ items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.ReplaceAll(pThis, itemsLength, items))
        }
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CWeb_CSyndication_CISyndicationLink>>>>) throws -> Void {
        try self._n_ReplaceAll(itemsLength, items);
    }
    public var Size : Swift.UInt32 {
        get throws {
            return try get_Size();
        }
    }
} // IVector_1__q_CWindows_CWeb_CSyndication_CSyndicationLink
// closed interface type
public class IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xeb8b7ff6, Data2: 0xfa64, Data3 : 0x576a, Data4 : (0x8b, 0xe4, 0xa0, 0x55, 0xf7, 0xa0, 0x4a, 0x73)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CWindows_CWeb_CSyndication_CSyndicationLink
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Web.Syndication.ISyndicationItem> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CRetrievalProgress =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Web.Syndication.ISyndicationItem> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationItem__q_CWindows_CWeb_CSyndication_CTransferProgress =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
extension ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress : WinRT.Future {
    private final class MyCompletedHandler: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress {
        private var hEvent: HANDLE
        public init(signal event: HANDLE) {
            self.hEvent = event
            super.init()
        }
        override func Invoke(asyncInfo: ClosedGenerics.IAsyncOperationWithProgress_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress?,
            asyncStatus: Windows.Foundation.AsyncStatus) throws {
            _ = SetEvent(self.hEvent)
        }
}
        public func get() throws -> Optional<Windows.Web.Syndication.ISyndicationFeed> {
            let info: Windows.Foundation.IAsyncInfo = try QueryInterface()
            if try info.get_Status() == Windows.Foundation.AsyncStatus.Started {
            let event: HANDLE =
            CreateEventW(nil, /*bManualReset=*/true, /*DefaultValue=*/false, nil)
            // TODO(compnerd) validate event
            defer { _ = CloseHandle(event) }
            let completion: ClosedGenerics.AsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CSyndication_CSyndicationFeed__q_CWindows_CWeb_CSyndication_CRetrievalProgress =
            MyCompletedHandler(signal: event)
            try withExtendedLifetime(completion) {
            try self.put_Completed(handler: completion.Interface())
            _ = WaitForSingleObject(event, INFINITE)
            }
        }
        return try self.GetResults();
        }
}
