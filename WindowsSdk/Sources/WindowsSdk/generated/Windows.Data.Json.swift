// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWindowsSdk;

extension Windows.Data.Json {
// type: Windows.Data.Json.IJsonArray
// interface type
open class IJsonArray
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x08c1ddb6, Data2: 0x0cbd, Data3 : 0x4a9a, Data4 : (0xb5, 0xd3, 0x2f, 0x85, 0x2d, 0xc3, 0x7e, 0x81)) }
    // Windows.Data.Json.JsonObject GetObjectAt(System.UInt32)
    private func _n_GetObjectAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArray.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetObjectAt(pThis, index, __presult))
        }
    }
    public func GetObjectAt(index : Swift.UInt32) throws -> Optional<Windows.Data.Json.IJsonObject> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>> = nil;
        try self._n_GetObjectAt(index, &__result);
        return Windows.Data.Json.IJsonObject(consuming: __result);
    }
    // Windows.Data.Json.JsonArray GetArrayAt(System.UInt32)
    private func _n_GetArrayAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArray.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetArrayAt(pThis, index, __presult))
        }
    }
    public func GetArrayAt(index : Swift.UInt32) throws -> Optional<Windows.Data.Json.IJsonArray> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>> = nil;
        try self._n_GetArrayAt(index, &__result);
        return Windows.Data.Json.IJsonArray(consuming: __result);
    }
    // System.String GetStringAt(System.UInt32)
    private func _n_GetStringAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArray.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetStringAt(pThis, index, __presult))
        }
    }
    public func GetStringAt(index : Swift.UInt32) throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_GetStringAt(index, &__result);
        return Swift.String(from: __result);
    }
    // System.Double GetNumberAt(System.UInt32)
    private func _n_GetNumberAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<DOUBLE>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArray.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNumberAt(pThis, index, __presult))
        }
    }
    public func GetNumberAt(index : Swift.UInt32) throws -> Swift.Double {
        var __result : DOUBLE = 0;
        try self._n_GetNumberAt(index, &__result);
        return __result;
    }
    // bool GetBooleanAt(System.UInt32)
    private func _n_GetBooleanAt(_ index : UINT32, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArray.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetBooleanAt(pThis, index, __presult))
        }
    }
    public func GetBooleanAt(index : Swift.UInt32) throws -> boolean {
        var __result : boolean = 0;
        try self._n_GetBooleanAt(index, &__result);
        return __result;
    }
} // IJsonArray


// type: Windows.Data.Json.IJsonArrayStatics
// interface type
open class IJsonArrayStatics
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xdb1434a9, Data2: 0xe164, Data3 : 0x499f, Data4 : (0x93, 0xe2, 0x8a, 0x8f, 0x49, 0xbb, 0x90, 0xba)) }
    // Windows.Data.Json.JsonArray Parse(System.String)
    private func _n_Parse(_ input : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArrayStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, input, __presult))
        }
    }
    public func Parse(input : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonArray> {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>> = nil;
        try self._n_Parse(__hstr_input.Raw(), &__result);
        return Windows.Data.Json.IJsonArray(consuming: __result);
        }
    }
    // bool TryParse(System.String, ref Windows.Data.Json.JsonArray)
    private func _n_TryParse(_ input : Optional<HSTRING>, _ result : UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonArrayStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, input, result, __presult))
        }
    }
    public func TryParse(input : Optional<Swift.String>, result : inout Optional<Windows.Data.Json.IJsonArray>) throws -> boolean {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : boolean = 0;
            var _tmp_out_result: Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>> = nil;
        try self._n_TryParse(__hstr_input.Raw(), &_tmp_out_result, &__result);
            result = Windows.Data.Json.IJsonArray(consuming: _tmp_out_result);
        return __result;
        }
    }
} // IJsonArrayStatics


// type: Windows.Data.Json.IJsonErrorStatics2
// interface type
open class IJsonErrorStatics2
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x404030da, Data2: 0x87d0, Data3 : 0x436c, Data4 : (0x83, 0xab, 0xfc, 0x7b, 0x12, 0xc0, 0xcc, 0x26)) }
    // Windows.Data.Json.JsonErrorStatus GetJsonStatus(System.Int32)
    private func _n_GetJsonStatus(_ hresult : INT32, _ __presult: UnsafeMutablePointer<_q_CWindows_CData_CJson_CJsonErrorStatus>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonErrorStatics2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetJsonStatus(pThis, hresult, __presult))
        }
    }
    public func GetJsonStatus(hresult : Swift.Int32) throws -> Windows.Data.Json.JsonErrorStatus {
        var __result : _q_CWindows_CData_CJson_CJsonErrorStatus = _q_CWindows_CData_CJson_CJsonErrorStatus_Unknown;
        try self._n_GetJsonStatus(hresult, &__result);
        return __result;
    }
} // IJsonErrorStatics2


// type: Windows.Data.Json.IJsonObject
// interface type
open class IJsonObject
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x064e24dd, Data2: 0x29c2, Data3 : 0x4f83, Data4 : (0x9a, 0xc1, 0x9e, 0xe1, 0x15, 0x78, 0xbe, 0xb3)) }
    // Windows.Data.Json.JsonValue GetNamedValue(System.String)
    private func _n_GetNamedValue(_ name : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedValue(pThis, name, __presult))
        }
    }
    public func GetNamedValue(name : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonValue> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_GetNamedValue(__hstr_name.Raw(), &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
        }
    }
    // void SetNamedValue(System.String, Windows.Data.Json.IJsonValue)
    private func _n_SetNamedValue(_ name : Optional<HSTRING>, _ value : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetNamedValue(pThis, name, value))
        }
    }
    public func SetNamedValue(name : Optional<Swift.String>, value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        try self._n_SetNamedValue(__hstr_name.Raw(), RawPointer(value));
        }
    }
    // Windows.Data.Json.JsonObject GetNamedObject(System.String)
    private func _n_GetNamedObject(_ name : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedObject(pThis, name, __presult))
        }
    }
    public func GetNamedObject(name : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonObject> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>> = nil;
        try self._n_GetNamedObject(__hstr_name.Raw(), &__result);
        return Windows.Data.Json.IJsonObject(consuming: __result);
        }
    }
    // Windows.Data.Json.JsonArray GetNamedArray(System.String)
    private func _n_GetNamedArray(_ name : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedArray(pThis, name, __presult))
        }
    }
    public func GetNamedArray(name : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonArray> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>> = nil;
        try self._n_GetNamedArray(__hstr_name.Raw(), &__result);
        return Windows.Data.Json.IJsonArray(consuming: __result);
        }
    }
    // System.String GetNamedString(System.String)
    private func _n_GetNamedString(_ name : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedString(pThis, name, __presult))
        }
    }
    public func GetNamedString(name : Optional<Swift.String>) throws -> Swift.String {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<HSTRING> = nil;
        try self._n_GetNamedString(__hstr_name.Raw(), &__result);
        return Swift.String(from: __result);
        }
    }
    // System.Double GetNamedNumber(System.String)
    private func _n_GetNamedNumber(_ name : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<DOUBLE>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedNumber(pThis, name, __presult))
        }
    }
    public func GetNamedNumber(name : Optional<Swift.String>) throws -> Swift.Double {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : DOUBLE = 0;
        try self._n_GetNamedNumber(__hstr_name.Raw(), &__result);
        return __result;
        }
    }
    // bool GetNamedBoolean(System.String)
    private func _n_GetNamedBoolean(_ name : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObject.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedBoolean(pThis, name, __presult))
        }
    }
    public func GetNamedBoolean(name : Optional<Swift.String>) throws -> boolean {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : boolean = 0;
        try self._n_GetNamedBoolean(__hstr_name.Raw(), &__result);
        return __result;
        }
    }
} // IJsonObject


// type: Windows.Data.Json.IJsonObjectStatics
// interface type
open class IJsonObjectStatics
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x2289f159, Data2: 0x54de, Data3 : 0x45d8, Data4 : (0xab, 0xcc, 0x22, 0x60, 0x3f, 0xa0, 0x66, 0xa0)) }
    // Windows.Data.Json.JsonObject Parse(System.String)
    private func _n_Parse(_ input : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, input, __presult))
        }
    }
    public func Parse(input : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonObject> {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>> = nil;
        try self._n_Parse(__hstr_input.Raw(), &__result);
        return Windows.Data.Json.IJsonObject(consuming: __result);
        }
    }
    // bool TryParse(System.String, ref Windows.Data.Json.JsonObject)
    private func _n_TryParse(_ input : Optional<HSTRING>, _ result : UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, input, result, __presult))
        }
    }
    public func TryParse(input : Optional<Swift.String>, result : inout Optional<Windows.Data.Json.IJsonObject>) throws -> boolean {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : boolean = 0;
            var _tmp_out_result: Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>> = nil;
        try self._n_TryParse(__hstr_input.Raw(), &_tmp_out_result, &__result);
            result = Windows.Data.Json.IJsonObject(consuming: _tmp_out_result);
        return __result;
        }
    }
} // IJsonObjectStatics


// type: Windows.Data.Json.IJsonObjectWithDefaultValues
// interface type
open class IJsonObjectWithDefaultValues
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xd960d2a2, Data2: 0xb7f0, Data3 : 0x4f00, Data4 : (0x8e, 0x44, 0xd8, 0x2c, 0xf4, 0x15, 0xea, 0x13)) }
    // Windows.Data.Json.JsonValue GetNamedValue(System.String, Windows.Data.Json.JsonValue)
    private func _n_GetNamedValueOrDefault(_ name : Optional<HSTRING>, _ defaultValue : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedValueOrDefault(pThis, name, defaultValue, __presult))
        }
    }
    public func GetNamedValueOrDefault(name : Optional<Swift.String>, defaultValue : Optional<Windows.Data.Json.IJsonValue>) throws -> Optional<Windows.Data.Json.IJsonValue> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_GetNamedValueOrDefault(__hstr_name.Raw(), RawPointer(defaultValue), &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
        }
    }
    // Windows.Data.Json.JsonObject GetNamedObject(System.String, Windows.Data.Json.JsonObject)
    private func _n_GetNamedObjectOrDefault(_ name : Optional<HSTRING>, _ defaultValue : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedObjectOrDefault(pThis, name, defaultValue, __presult))
        }
    }
    public func GetNamedObjectOrDefault(name : Optional<Swift.String>, defaultValue : Optional<Windows.Data.Json.IJsonObject>) throws -> Optional<Windows.Data.Json.IJsonObject> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>> = nil;
        try self._n_GetNamedObjectOrDefault(__hstr_name.Raw(), RawPointer(defaultValue), &__result);
        return Windows.Data.Json.IJsonObject(consuming: __result);
        }
    }
    // System.String GetNamedString(System.String, System.String)
    private func _n_GetNamedStringOrDefault(_ name : Optional<HSTRING>, _ defaultValue : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedStringOrDefault(pThis, name, defaultValue, __presult))
        }
    }
    public func GetNamedStringOrDefault(name : Optional<Swift.String>, defaultValue : Optional<Swift.String>) throws -> Swift.String {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        let __hstr_defaultValue = try HString(defaultValue!);
        return try withExtendedLifetime(__hstr_defaultValue) {
        var __result : Optional<HSTRING> = nil;
        try self._n_GetNamedStringOrDefault(__hstr_name.Raw(), __hstr_defaultValue.Raw(), &__result);
        return Swift.String(from: __result);
        }
        }
    }
    // Windows.Data.Json.JsonArray GetNamedArray(System.String, Windows.Data.Json.JsonArray)
    private func _n_GetNamedArrayOrDefault(_ name : Optional<HSTRING>, _ defaultValue : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedArrayOrDefault(pThis, name, defaultValue, __presult))
        }
    }
    public func GetNamedArrayOrDefault(name : Optional<Swift.String>, defaultValue : Optional<Windows.Data.Json.IJsonArray>) throws -> Optional<Windows.Data.Json.IJsonArray> {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>> = nil;
        try self._n_GetNamedArrayOrDefault(__hstr_name.Raw(), RawPointer(defaultValue), &__result);
        return Windows.Data.Json.IJsonArray(consuming: __result);
        }
    }
    // System.Double GetNamedNumber(System.String, System.Double)
    private func _n_GetNamedNumberOrDefault(_ name : Optional<HSTRING>, _ defaultValue : DOUBLE, _ __presult: UnsafeMutablePointer<DOUBLE>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedNumberOrDefault(pThis, name, defaultValue, __presult))
        }
    }
    public func GetNamedNumberOrDefault(name : Optional<Swift.String>, defaultValue : Swift.Double) throws -> Swift.Double {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : DOUBLE = 0;
        try self._n_GetNamedNumberOrDefault(__hstr_name.Raw(), defaultValue, &__result);
        return __result;
        }
    }
    // bool GetNamedBoolean(System.String, bool)
    private func _n_GetNamedBooleanOrDefault(_ name : Optional<HSTRING>, _ defaultValue : boolean, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonObjectWithDefaultValues.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNamedBooleanOrDefault(pThis, name, defaultValue, __presult))
        }
    }
    public func GetNamedBooleanOrDefault(name : Optional<Swift.String>, defaultValue : boolean) throws -> boolean {
        let __hstr_name = try HString(name!);
        return try withExtendedLifetime(__hstr_name) {
        var __result : boolean = 0;
        try self._n_GetNamedBooleanOrDefault(__hstr_name.Raw(), defaultValue, &__result);
        return __result;
        }
    }
} // IJsonObjectWithDefaultValues


// type: Windows.Data.Json.IJsonValue
// interface type
open class IJsonValue
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa3219ecb, Data2: 0xf0b3, Data3 : 0x4dcd, Data4 : (0xbe, 0xee, 0x19, 0xd4, 0x8c, 0xd3, 0xed, 0x1e)) }
    // [IsSpecialName] Windows.Data.Json.JsonValueType get_ValueType()
    private func _n_get_ValueType(_ __presult: UnsafeMutablePointer<_q_CWindows_CData_CJson_CJsonValueType>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ValueType(pThis, __presult))
        }
    }
    public func get_ValueType() throws -> Windows.Data.Json.JsonValueType {
        var __result : _q_CWindows_CData_CJson_CJsonValueType = _q_CWindows_CData_CJson_CJsonValueType_Null;
        try self._n_get_ValueType(&__result);
        return __result;
    }
    // System.String Stringify()
    private func _n_Stringify(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Stringify(pThis, __presult))
        }
    }
    public func Stringify() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_Stringify(&__result);
        return Swift.String(from: __result);
    }
    // System.String GetString()
    private func _n_GetString(_ __presult: UnsafeMutablePointer<Optional<HSTRING>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetString(pThis, __presult))
        }
    }
    public func GetString() throws -> Swift.String {
        var __result : Optional<HSTRING> = nil;
        try self._n_GetString(&__result);
        return Swift.String(from: __result);
    }
    // System.Double GetNumber()
    private func _n_GetNumber(_ __presult: UnsafeMutablePointer<DOUBLE>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetNumber(pThis, __presult))
        }
    }
    public func GetNumber() throws -> Swift.Double {
        var __result : DOUBLE = 0;
        try self._n_GetNumber(&__result);
        return __result;
    }
    // bool GetBoolean()
    private func _n_GetBoolean(_ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetBoolean(pThis, __presult))
        }
    }
    public func GetBoolean() throws -> boolean {
        var __result : boolean = 0;
        try self._n_GetBoolean(&__result);
        return __result;
    }
    // Windows.Data.Json.JsonArray GetArray()
    private func _n_GetArray(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetArray(pThis, __presult))
        }
    }
    public func GetArray() throws -> Optional<Windows.Data.Json.IJsonArray> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonArray>> = nil;
        try self._n_GetArray(&__result);
        return Windows.Data.Json.IJsonArray(consuming: __result);
    }
    // Windows.Data.Json.JsonObject GetObject()
    private func _n_GetObject_(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValue.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetObject_(pThis, __presult))
        }
    }
    public func GetObject_() throws -> Optional<Windows.Data.Json.IJsonObject> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonObject>> = nil;
        try self._n_GetObject_(&__result);
        return Windows.Data.Json.IJsonObject(consuming: __result);
    }
    public var ValueType : Windows.Data.Json.JsonValueType {
        get throws {
            return try get_ValueType();
        }
    }
} // IJsonValue


// type: Windows.Data.Json.IJsonValueStatics
// interface type
open class IJsonValueStatics
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x5f6b544a, Data2: 0x2f53, Data3 : 0x48e1, Data4 : (0x91, 0xa3, 0xf7, 0x8b, 0x50, 0xa6, 0x34, 0x5c)) }
    // Windows.Data.Json.JsonValue Parse(System.String)
    private func _n_Parse(_ input : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValueStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, input, __presult))
        }
    }
    public func Parse(input : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonValue> {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_Parse(__hstr_input.Raw(), &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
        }
    }
    // bool TryParse(System.String, ref Windows.Data.Json.JsonValue)
    private func _n_TryParse(_ input : Optional<HSTRING>, _ result : UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>, _ __presult: UnsafeMutablePointer<boolean>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValueStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, input, result, __presult))
        }
    }
    public func TryParse(input : Optional<Swift.String>, result : inout Optional<Windows.Data.Json.IJsonValue>) throws -> boolean {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : boolean = 0;
            var _tmp_out_result: Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_TryParse(__hstr_input.Raw(), &_tmp_out_result, &__result);
            result = Windows.Data.Json.IJsonValue(consuming: _tmp_out_result);
        return __result;
        }
    }
    // Windows.Data.Json.JsonValue CreateBooleanValue(bool)
    private func _n_CreateBooleanValue(_ input : boolean, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValueStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateBooleanValue(pThis, input, __presult))
        }
    }
    public func CreateBooleanValue(input : boolean) throws -> Optional<Windows.Data.Json.IJsonValue> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_CreateBooleanValue(input, &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
    }
    // Windows.Data.Json.JsonValue CreateNumberValue(System.Double)
    private func _n_CreateNumberValue(_ input : DOUBLE, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValueStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateNumberValue(pThis, input, __presult))
        }
    }
    public func CreateNumberValue(input : Swift.Double) throws -> Optional<Windows.Data.Json.IJsonValue> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_CreateNumberValue(input, &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
    }
    // Windows.Data.Json.JsonValue CreateStringValue(System.String)
    private func _n_CreateStringValue(_ input : Optional<HSTRING>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValueStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateStringValue(pThis, input, __presult))
        }
    }
    public func CreateStringValue(input : Optional<Swift.String>) throws -> Optional<Windows.Data.Json.IJsonValue> {
        let __hstr_input = try HString(input!);
        return try withExtendedLifetime(__hstr_input) {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_CreateStringValue(__hstr_input.Raw(), &__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
        }
    }
} // IJsonValueStatics


// type: Windows.Data.Json.IJsonValueStatics2
// interface type
open class IJsonValueStatics2
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x1d9ecbe4, Data2: 0x3fe8, Data3 : 0x4335, Data4 : (0x83, 0x92, 0x93, 0xd8, 0xe3, 0x68, 0x65, 0xf0)) }
    // Windows.Data.Json.JsonValue CreateNullValue()
    private func _n_CreateNullValue(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>?) throws {
        return try perform(as: _q_CWindows_CData_CJson_CIJsonValueStatics2.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateNullValue(pThis, __presult))
        }
    }
    public func CreateNullValue() throws -> Optional<Windows.Data.Json.IJsonValue> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>> = nil;
        try self._n_CreateNullValue(&__result);
        return Windows.Data.Json.IJsonValue(consuming: __result);
    }
} // IJsonValueStatics2


// type: Windows.Data.Json.JsonArray
// runtime class
public class JsonArray
    :
    WinRT.Object
{
    private var _self : Windows.Data.Json.IJsonArray;
    public init(plok: Windows.Data.Json.IJsonArray?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Data.Json.IJsonArray { return _self; }
    public init() throws {
        _self = try RoActivateInstance("Windows.Data.Json.JsonArray")
        try super.init(plok: _self.QueryInterface())
    }
    private struct _IJsonArrayStatics {
        static var x : IJsonArrayStatics =
            try! RoGetActivationFactory("Windows.Data.Json.JsonArray")
    }
    public static var JsonArrayStatics : IJsonArrayStatics {
        _IJsonArrayStatics.x
    }
    public static func Parse(input : Swift.String) throws -> Optional<Windows.Data.Json.JsonArray> {
        return try Windows.Data.Json.JsonArray(plok: JsonArrayStatics.Parse(input: input));
    }
    public static func TryParse(input : Swift.String, result : inout Optional<Windows.Data.Json.JsonArray>) throws -> boolean {
            var _tmp_out_result: Optional<Windows.Data.Json.IJsonArray> = nil;
        return try JsonArrayStatics.TryParse(input: input, result: &_tmp_out_result);
    }
    public func GetObjectAt(index : Swift.UInt32) throws -> Optional<Windows.Data.Json.JsonObject> {
        let _ifc : Windows.Data.Json.IJsonArray = try _self.QueryInterface();
        return try Windows.Data.Json.JsonObject(plok: _ifc.GetObjectAt(index: index));
    }
    public func GetArrayAt(index : Swift.UInt32) throws -> Optional<Windows.Data.Json.JsonArray> {
        let _ifc : Windows.Data.Json.IJsonArray = try _self.QueryInterface();
        return try Windows.Data.Json.JsonArray(plok: _ifc.GetArrayAt(index: index));
    }
    public func GetStringAt(index : Swift.UInt32) throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonArray = try _self.QueryInterface();
        return try _ifc.GetStringAt(index: index);
    }
    public func GetNumberAt(index : Swift.UInt32) throws -> Swift.Double {
        let _ifc : Windows.Data.Json.IJsonArray = try _self.QueryInterface();
        return try _ifc.GetNumberAt(index: index);
    }
    public func GetBooleanAt(index : Swift.UInt32) throws -> boolean {
        let _ifc : Windows.Data.Json.IJsonArray = try _self.QueryInterface();
        return try _ifc.GetBooleanAt(index: index);
    }
    public func get_ValueType() throws -> Windows.Data.Json.JsonValueType {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.get_ValueType();
    }
    public func Stringify() throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.Stringify();
    }
    public func GetString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetString();
    }
    public func GetNumber() throws -> Swift.Double {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetNumber();
    }
    public func GetBoolean() throws -> boolean {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetBoolean();
    }
    public func GetArray() throws -> Optional<Windows.Data.Json.JsonArray> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try Windows.Data.Json.JsonArray(plok: _ifc.GetArray());
    }
    public func GetObject() throws -> Optional<Windows.Data.Json.JsonObject> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try Windows.Data.Json.JsonObject(plok: _ifc.GetObject_());
    }
    public var ValueType : Windows.Data.Json.JsonValueType {
        get throws {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.ValueType;
        }
    }
    public func GetAt(index : Swift.UInt32) throws -> Optional<Windows.Data.Json.IJsonValue> {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.GetAt(index: index);
    }
    public func get_Size() throws -> Swift.UInt32 {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.get_Size();
    }
    public func GetView() throws -> Optional<ClosedGenerics.IVectorView_1__q_CWindows_CData_CJson_CIJsonValue> {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.GetView();
    }
    public func IndexOf(value : Optional<Windows.Data.Json.IJsonValue>, index : inout Swift.UInt32) throws -> boolean {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
            var _tmp_out_index: Swift.UInt32 = 0;
        return try _ifc.IndexOf(value: value, index: &_tmp_out_index);
    }
    public func SetAt(index : Swift.UInt32, value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.SetAt(index: index, value: value);
    }
    public func InsertAt(index : Swift.UInt32, value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.InsertAt(index: index, value: value);
    }
    public func RemoveAt(index : Swift.UInt32) throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.RemoveAt(index: index);
    }
    public func Append(value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.Append(value: value);
    }
    public func RemoveAtEnd() throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.RemoveAtEnd();
    }
    public func Clear() throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.Clear();
    }
    public func GetMany(startIndex : Swift.UInt32, itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>>) throws -> Swift.UInt32 {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.GetMany(startIndex: startIndex, itemsLength: itemsLength, items: items);
    }
    public func ReplaceAll(itemsLength : UINT32, items : Optional<UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CData_CJson_CIJsonValue>>>>) throws -> Void {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.ReplaceAll(itemsLength: itemsLength, items: items);
    }
    public var Size : Swift.UInt32 {
        get throws {
        let _ifc : ClosedGenerics.IVector_1__q_CWindows_CData_CJson_CIJsonValue = try _self.QueryInterface();
        return try _ifc.Size;
        }
    }
    // method not needed: First
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Data.Json.JsonError
// static class
public class JsonError
{
    private struct _IJsonErrorStatics2 {
        static var x : IJsonErrorStatics2 =
            try! RoGetActivationFactory("Windows.Data.Json.JsonError")
    }
    public static var JsonErrorStatics2 : IJsonErrorStatics2 {
        _IJsonErrorStatics2.x
    }
    public static func GetJsonStatus(hresult : Swift.Int32) throws -> Windows.Data.Json.JsonErrorStatus {
        return try JsonErrorStatics2.GetJsonStatus(hresult: hresult);
    }
}

// type: Windows.Data.Json.JsonErrorStatus
// enum type
public typealias JsonErrorStatus = _q_CWindows_CData_CJson_CJsonErrorStatus;

// type: Windows.Data.Json.JsonObject
// runtime class
public class JsonObject
    :
    WinRT.Object
{
    private var _self : Windows.Data.Json.IJsonObject;
    public init(plok: Windows.Data.Json.IJsonObject?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Data.Json.IJsonObject { return _self; }
    public init() throws {
        _self = try RoActivateInstance("Windows.Data.Json.JsonObject")
        try super.init(plok: _self.QueryInterface())
    }
    private struct _IJsonObjectStatics {
        static var x : IJsonObjectStatics =
            try! RoGetActivationFactory("Windows.Data.Json.JsonObject")
    }
    public static var JsonObjectStatics : IJsonObjectStatics {
        _IJsonObjectStatics.x
    }
    public static func Parse(input : Swift.String) throws -> Optional<Windows.Data.Json.JsonObject> {
        return try Windows.Data.Json.JsonObject(plok: JsonObjectStatics.Parse(input: input));
    }
    public static func TryParse(input : Swift.String, result : inout Optional<Windows.Data.Json.JsonObject>) throws -> boolean {
            var _tmp_out_result: Optional<Windows.Data.Json.IJsonObject> = nil;
        return try JsonObjectStatics.TryParse(input: input, result: &_tmp_out_result);
    }
    public func GetNamedValue(name : Swift.String) throws -> Optional<Windows.Data.Json.JsonValue> {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try Windows.Data.Json.JsonValue(plok: _ifc.GetNamedValue(name: name));
    }
    public func SetNamedValue(name : Swift.String, value : Optional<Windows.Data.Json.IJsonValue>) throws -> Void {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try _ifc.SetNamedValue(name: name, value: value);
    }
    public func GetNamedObject(name : Swift.String) throws -> Optional<Windows.Data.Json.JsonObject> {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try Windows.Data.Json.JsonObject(plok: _ifc.GetNamedObject(name: name));
    }
    public func GetNamedArray(name : Swift.String) throws -> Optional<Windows.Data.Json.JsonArray> {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try Windows.Data.Json.JsonArray(plok: _ifc.GetNamedArray(name: name));
    }
    public func GetNamedString(name : Swift.String) throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try _ifc.GetNamedString(name: name);
    }
    public func GetNamedNumber(name : Swift.String) throws -> Swift.Double {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try _ifc.GetNamedNumber(name: name);
    }
    public func GetNamedBoolean(name : Swift.String) throws -> boolean {
        let _ifc : Windows.Data.Json.IJsonObject = try _self.QueryInterface();
        return try _ifc.GetNamedBoolean(name: name);
    }
    public func get_ValueType() throws -> Windows.Data.Json.JsonValueType {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.get_ValueType();
    }
    public func Stringify() throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.Stringify();
    }
    public func GetString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetString();
    }
    public func GetNumber() throws -> Swift.Double {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetNumber();
    }
    public func GetBoolean() throws -> boolean {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetBoolean();
    }
    public func GetArray() throws -> Optional<Windows.Data.Json.JsonArray> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try Windows.Data.Json.JsonArray(plok: _ifc.GetArray());
    }
    public func GetObject() throws -> Optional<Windows.Data.Json.JsonObject> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try Windows.Data.Json.JsonObject(plok: _ifc.GetObject_());
    }
    public var ValueType : Windows.Data.Json.JsonValueType {
        get throws {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.ValueType;
        }
    }
    // method not needed: Lookup
    // method not needed: get_Size
    // method not needed: HasKey
    // method not needed: GetView
    // method not needed: Insert
    // method not needed: Remove
    // method not needed: Clear
    // method not needed: First
    public func GetNamedValue(name : Swift.String, defaultValue : Optional<Windows.Data.Json.JsonValue>) throws -> Optional<Windows.Data.Json.JsonValue> {
        let _ifc : Windows.Data.Json.IJsonObjectWithDefaultValues = try _self.QueryInterface();
        return try Windows.Data.Json.JsonValue(plok: _ifc.GetNamedValueOrDefault(name: name, defaultValue: defaultValue!.Interface()));
    }
    public func GetNamedObject(name : Swift.String, defaultValue : Optional<Windows.Data.Json.JsonObject>) throws -> Optional<Windows.Data.Json.JsonObject> {
        let _ifc : Windows.Data.Json.IJsonObjectWithDefaultValues = try _self.QueryInterface();
        return try Windows.Data.Json.JsonObject(plok: _ifc.GetNamedObjectOrDefault(name: name, defaultValue: defaultValue!.Interface()));
    }
    public func GetNamedString(name : Swift.String, defaultValue : Swift.String) throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonObjectWithDefaultValues = try _self.QueryInterface();
        return try _ifc.GetNamedStringOrDefault(name: name, defaultValue: defaultValue);
    }
    public func GetNamedArray(name : Swift.String, defaultValue : Optional<Windows.Data.Json.JsonArray>) throws -> Optional<Windows.Data.Json.JsonArray> {
        let _ifc : Windows.Data.Json.IJsonObjectWithDefaultValues = try _self.QueryInterface();
        return try Windows.Data.Json.JsonArray(plok: _ifc.GetNamedArrayOrDefault(name: name, defaultValue: defaultValue!.Interface()));
    }
    public func GetNamedNumber(name : Swift.String, defaultValue : Swift.Double) throws -> Swift.Double {
        let _ifc : Windows.Data.Json.IJsonObjectWithDefaultValues = try _self.QueryInterface();
        return try _ifc.GetNamedNumberOrDefault(name: name, defaultValue: defaultValue);
    }
    public func GetNamedBoolean(name : Swift.String, defaultValue : boolean) throws -> boolean {
        let _ifc : Windows.Data.Json.IJsonObjectWithDefaultValues = try _self.QueryInterface();
        return try _ifc.GetNamedBooleanOrDefault(name: name, defaultValue: defaultValue);
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Data.Json.JsonValue
// runtime class
public class JsonValue
    :
    WinRT.Object
{
    private var _self : Windows.Data.Json.IJsonValue;
    public init(plok: Windows.Data.Json.IJsonValue?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Windows.Data.Json.IJsonValue { return _self; }
    private struct _IJsonValueStatics {
        static var x : IJsonValueStatics =
            try! RoGetActivationFactory("Windows.Data.Json.JsonValue")
    }
    public static var JsonValueStatics : IJsonValueStatics {
        _IJsonValueStatics.x
    }
    public static func Parse(input : Swift.String) throws -> Optional<Windows.Data.Json.JsonValue> {
        return try Windows.Data.Json.JsonValue(plok: JsonValueStatics.Parse(input: input));
    }
    public static func TryParse(input : Swift.String, result : inout Optional<Windows.Data.Json.JsonValue>) throws -> boolean {
            var _tmp_out_result: Optional<Windows.Data.Json.IJsonValue> = nil;
        return try JsonValueStatics.TryParse(input: input, result: &_tmp_out_result);
    }
    public static func CreateBooleanValue(input : boolean) throws -> Optional<Windows.Data.Json.JsonValue> {
        return try Windows.Data.Json.JsonValue(plok: JsonValueStatics.CreateBooleanValue(input: input));
    }
    public static func CreateNumberValue(input : Swift.Double) throws -> Optional<Windows.Data.Json.JsonValue> {
        return try Windows.Data.Json.JsonValue(plok: JsonValueStatics.CreateNumberValue(input: input));
    }
    public static func CreateStringValue(input : Swift.String) throws -> Optional<Windows.Data.Json.JsonValue> {
        return try Windows.Data.Json.JsonValue(plok: JsonValueStatics.CreateStringValue(input: input));
    }
    private struct _IJsonValueStatics2 {
        static var x : IJsonValueStatics2 =
            try! RoGetActivationFactory("Windows.Data.Json.JsonValue")
    }
    public static var JsonValueStatics2 : IJsonValueStatics2 {
        _IJsonValueStatics2.x
    }
    public static func CreateNullValue() throws -> Optional<Windows.Data.Json.JsonValue> {
        return try Windows.Data.Json.JsonValue(plok: JsonValueStatics2.CreateNullValue());
    }
    public func get_ValueType() throws -> Windows.Data.Json.JsonValueType {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.get_ValueType();
    }
    public func Stringify() throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.Stringify();
    }
    public func GetString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetString();
    }
    public func GetNumber() throws -> Swift.Double {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetNumber();
    }
    public func GetBoolean() throws -> boolean {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.GetBoolean();
    }
    public func GetArray() throws -> Optional<Windows.Data.Json.JsonArray> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try Windows.Data.Json.JsonArray(plok: _ifc.GetArray());
    }
    public func GetObject() throws -> Optional<Windows.Data.Json.JsonObject> {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try Windows.Data.Json.JsonObject(plok: _ifc.GetObject_());
    }
    public var ValueType : Windows.Data.Json.JsonValueType {
        get throws {
        let _ifc : Windows.Data.Json.IJsonValue = try _self.QueryInterface();
        return try _ifc.ValueType;
        }
    }
    public func ToString() throws -> Optional<Swift.String> {
        let _ifc : Windows.Foundation.IStringable = try _self.QueryInterface();
        return try _ifc.ToString();
    }
}

// type: Windows.Data.Json.JsonValueType
// enum type
public typealias JsonValueType = _q_CWindows_CData_CJson_CJsonValueType;

}
extension Windows.Data.Json.JsonErrorStatus {
    public static var Unknown : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonErrorStatus_Unknown;
        }
    }
    public static var InvalidJsonString : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonErrorStatus_InvalidJsonString;
        }
    }
    public static var InvalidJsonNumber : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonErrorStatus_InvalidJsonNumber;
        }
    }
    public static var JsonValueNotFound : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonErrorStatus_JsonValueNotFound;
        }
    }
    public static var ImplementationLimit : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonErrorStatus_ImplementationLimit;
        }
    }
}
extension Windows.Data.Json.JsonValueType {
    public static var Null : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonValueType_Null;
        }
    }
    public static var Boolean : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonValueType_Boolean;
        }
    }
    public static var Number : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonValueType_Number;
        }
    }
    public static var String : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonValueType_String;
        }
    }
    public static var Array : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonValueType_Array;
        }
    }
    public static var Object : Self {
        get {
            return _q_CWindows_CData_CJson_CJsonValueType_Object;
        }
    }
}
