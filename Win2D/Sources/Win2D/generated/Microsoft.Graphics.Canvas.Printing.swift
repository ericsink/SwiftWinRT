// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWin2D;
import WindowsSdk;
import CWindowsSdk;
import WindowsApp;
import CWindowsApp;

extension Microsoft.Graphics.Canvas.Printing {
// type: Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs
// runtime class
public class CanvasPreviewEventArgs
    :
    WinRT.Object
{
    private var _self : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs;
    public init(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs { return _self; }
    public func get_PageNumber() throws -> Swift.UInt32 {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try _ifc.get_PageNumber();
    }
    public func get_PrintTaskOptions() throws -> Optional<Windows.Graphics.Printing.PrintTaskOptions> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try Windows.Graphics.Printing.PrintTaskOptions(plok: _ifc.get_PrintTaskOptions());
    }
    public func GetDeferral() throws -> Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral(plok: _ifc.GetDeferral());
    }
    public func get_DrawingSession() throws -> Optional<Microsoft.Graphics.Canvas.CanvasDrawingSession> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.CanvasDrawingSession(plok: _ifc.get_DrawingSession());
    }
    public var DrawingSession : Optional<Microsoft.Graphics.Canvas.CanvasDrawingSession> {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.CanvasDrawingSession(plok: _ifc.DrawingSession);
        }
    }
    public var PageNumber : Swift.UInt32 {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try _ifc.PageNumber;
        }
    }
    public var PrintTaskOptions : Optional<Windows.Graphics.Printing.PrintTaskOptions> {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs = try _self.QueryInterface();
        return try Windows.Graphics.Printing.PrintTaskOptions(plok: _ifc.PrintTaskOptions);
        }
    }
}

// type: Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral
// runtime class
public class CanvasPrintDeferral
    :
    WinRT.Object
{
    private var _self : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral;
    public init(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral { return _self; }
    public func Complete() throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral = try _self.QueryInterface();
        return try _ifc.Complete();
    }
}

// type: Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument
// runtime class
public class CanvasPrintDocument
    :
    WinRT.Object
{
    private var _self : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument;
    public init(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument { return _self; }
    public init(device : Optional<Microsoft.Graphics.Canvas.CanvasDevice>) throws {
        let _af : ICanvasPrintDocumentFactory = try RoGetActivationFactory("Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument");
        _self = try _af.CreateWithDevice(device: device!.Interface())!;
        try super.init(plok: _self.QueryInterface())
    }
    public init() throws {
        _self = try RoActivateInstance("Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument")
        try super.init(plok: _self.QueryInterface())
    }
    public func add_PrintTaskOptionsChanged(value : @escaping (Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>) throws -> Void) throws -> Windows.Foundation.EventRegistrationToken {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.add_PrintTaskOptionsChanged(value: ClosedGenerics.TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs(cb: value).Interface());
    }
    public func remove_PrintTaskOptionsChanged(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.remove_PrintTaskOptionsChanged(token: token);
    }
    public func add_Preview(value : @escaping (Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>) throws -> Void) throws -> Windows.Foundation.EventRegistrationToken {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.add_Preview(value: ClosedGenerics.TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs(cb: value).Interface());
    }
    public func remove_Preview(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.remove_Preview(token: token);
    }
    public func add_Print(value : @escaping (Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>) throws -> Void) throws -> Windows.Foundation.EventRegistrationToken {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.add_Print(value: ClosedGenerics.TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs(cb: value).Interface());
    }
    public func remove_Print(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.remove_Print(token: token);
    }
    public func InvalidatePreview() throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.InvalidatePreview();
    }
    public func SetPageCount(count : Swift.UInt32) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.SetPageCount(count: count);
    }
    public func SetIntermediatePageCount(count : Swift.UInt32) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument = try _self.QueryInterface();
        return try _ifc.SetIntermediatePageCount(count: count);
    }
    // instance interface not needed: Windows.Graphics.Printing.IPrintDocumentSource
    public func get_Device() throws -> Optional<Microsoft.Graphics.Canvas.CanvasDevice> {
        let _ifc : Microsoft.Graphics.Canvas.ICanvasResourceCreator = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.CanvasDevice(plok: _ifc.get_Device());
    }
    public var Device : Optional<Microsoft.Graphics.Canvas.CanvasDevice> {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.ICanvasResourceCreator = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.CanvasDevice(plok: _ifc.Device);
        }
    }
    public func Close() throws -> Void {
        let _ifc : Windows.Foundation.IClosable = try _self.QueryInterface();
        return try _ifc.Close();
    }
}

// type: Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs
// runtime class
public class CanvasPrintEventArgs
    :
    WinRT.Object
{
    private var _self : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs;
    public init(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs { return _self; }
    public func get_PrintTaskOptions() throws -> Optional<Windows.Graphics.Printing.PrintTaskOptions> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try Windows.Graphics.Printing.PrintTaskOptions(plok: _ifc.get_PrintTaskOptions());
    }
    public func get_Dpi() throws -> Swift.Float {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try _ifc.get_Dpi();
    }
    public func put_Dpi(value : Swift.Float) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try _ifc.put_Dpi(value: value);
    }
    public func GetDeferral() throws -> Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral(plok: _ifc.GetDeferral());
    }
    public func CreateDrawingSession() throws -> Optional<Microsoft.Graphics.Canvas.CanvasDrawingSession> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.CanvasDrawingSession(plok: _ifc.CreateDrawingSession());
    }
    public var Dpi : Swift.Float {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try _ifc.Dpi;
        }
    }
    public var PrintTaskOptions : Optional<Windows.Graphics.Printing.PrintTaskOptions> {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs = try _self.QueryInterface();
        return try Windows.Graphics.Printing.PrintTaskOptions(plok: _ifc.PrintTaskOptions);
        }
    }
}

// type: Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs
// runtime class
public class CanvasPrintTaskOptionsChangedEventArgs
    :
    WinRT.Object
{
    private var _self : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs;
    public init(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    public func Interface() -> Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs { return _self; }
    public func get_CurrentPreviewPageNumber() throws -> Swift.UInt32 {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try _ifc.get_CurrentPreviewPageNumber();
    }
    public func put_NewPreviewPageNumber(value : Swift.UInt32) throws -> Void {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try _ifc.put_NewPreviewPageNumber(value: value);
    }
    public func get_NewPreviewPageNumber() throws -> Swift.UInt32 {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try _ifc.get_NewPreviewPageNumber();
    }
    public func GetDeferral() throws -> Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral(plok: _ifc.GetDeferral());
    }
    public func get_PrintTaskOptions() throws -> Optional<Windows.Graphics.Printing.PrintTaskOptions> {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try Windows.Graphics.Printing.PrintTaskOptions(plok: _ifc.get_PrintTaskOptions());
    }
    public var CurrentPreviewPageNumber : Swift.UInt32 {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try _ifc.CurrentPreviewPageNumber;
        }
    }
    public var NewPreviewPageNumber : Swift.UInt32 {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try _ifc.NewPreviewPageNumber;
        }
    }
    public var PrintTaskOptions : Optional<Windows.Graphics.Printing.PrintTaskOptions> {
        get throws {
        let _ifc : Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs = try _self.QueryInterface();
        return try Windows.Graphics.Printing.PrintTaskOptions(plok: _ifc.PrintTaskOptions);
        }
    }
}

// type: Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs
// interface type
open class ICanvasPreviewEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0a6a80a0, Data2: 0xb07d, Data3 : 0x4db2, Data4 : (0xbd, 0xeb, 0x03, 0x68, 0xbb, 0x18, 0xc0, 0xf8)) }
    // [IsSpecialName] System.UInt32 get_PageNumber()
    private func _n_get_PageNumber(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPreviewEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PageNumber(pThis, __presult))
        }
    }
    public func get_PageNumber() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_PageNumber(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.Graphics.Printing.PrintTaskOptions get_PrintTaskOptions()
    private func _n_get_PrintTaskOptions(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CGraphics_CPrinting_CIPrintTaskOptionsCore>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPreviewEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PrintTaskOptions(pThis, __presult))
        }
    }
    public func get_PrintTaskOptions() throws -> Optional<Windows.Graphics.Printing.IPrintTaskOptionsCore> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CGraphics_CPrinting_CIPrintTaskOptionsCore>> = nil;
        try self._n_get_PrintTaskOptions(&__result);
        return Windows.Graphics.Printing.IPrintTaskOptionsCore(consuming: __result);
    }
    // Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral GetDeferral()
    private func _n_GetDeferral(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPreviewEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, __presult))
        }
    }
    public func GetDeferral() throws -> Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral>> = nil;
        try self._n_GetDeferral(&__result);
        return Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral(consuming: __result);
    }
    // [IsSpecialName] Microsoft.Graphics.Canvas.CanvasDrawingSession get_DrawingSession()
    private func _n_get_DrawingSession(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPreviewEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DrawingSession(pThis, __presult))
        }
    }
    public func get_DrawingSession() throws -> Optional<Microsoft.Graphics.Canvas.ICanvasDrawingSession> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession>> = nil;
        try self._n_get_DrawingSession(&__result);
        return Microsoft.Graphics.Canvas.ICanvasDrawingSession(consuming: __result);
    }
    public var DrawingSession : Optional<Microsoft.Graphics.Canvas.ICanvasDrawingSession> {
        get throws {
            return try get_DrawingSession();
        }
    }
    public var PageNumber : Swift.UInt32 {
        get throws {
            return try get_PageNumber();
        }
    }
    public var PrintTaskOptions : Optional<Windows.Graphics.Printing.IPrintTaskOptionsCore> {
        get throws {
            return try get_PrintTaskOptions();
        }
    }
} // ICanvasPreviewEventArgs


// type: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral
// interface type
open class ICanvasPrintDeferral
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x08ca99a2, Data2: 0x5801, Data3 : 0x4ea4, Data4 : (0x86, 0x87, 0x89, 0x6c, 0xbd, 0xa6, 0x9a, 0x47)) }
    // void Complete()
    private func _n_Complete() throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Complete(pThis))
        }
    }
    public func Complete() throws -> Void {
        try self._n_Complete();
    }
} // ICanvasPrintDeferral


// type: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument
// interface type
open class ICanvasPrintDocument
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0a99cdee, Data2: 0xbf11, Data3 : 0x49d0, Data4 : (0xaa, 0x34, 0x3b, 0xa5, 0xc3, 0x2c, 0x51, 0xa5)) }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_PrintTaskOptionsChanged(Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>)
    private func _n_add_PrintTaskOptionsChanged(_ value : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_PrintTaskOptionsChanged(pThis, value, __presult))
        }
    }
    public func add_PrintTaskOptionsChanged(value : Optional<ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_PrintTaskOptionsChanged(RawPointer(value), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_PrintTaskOptionsChanged(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_PrintTaskOptionsChanged(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PrintTaskOptionsChanged(pThis, token))
        }
    }
    public func remove_PrintTaskOptionsChanged(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_PrintTaskOptionsChanged(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_Preview(Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>)
    private func _n_add_Preview(_ value : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_Preview(pThis, value, __presult))
        }
    }
    public func add_Preview(value : Optional<ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_Preview(RawPointer(value), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_Preview(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_Preview(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Preview(pThis, token))
        }
    }
    public func remove_Preview(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_Preview(token);
    }
    // [IsSpecialName] Windows.Foundation.EventRegistrationToken add_Print(Windows.Foundation.TypedEventHandler<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument,Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>)
    private func _n_add_Print(_ value : Optional<UnsafeMutablePointer<_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs>>, _ __presult: UnsafeMutablePointer<_q_CWindows_CFoundation_CEventRegistrationToken>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.add_Print(pThis, value, __presult))
        }
    }
    public func add_Print(value : Optional<ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs>) throws -> Windows.Foundation.EventRegistrationToken {
        var __result : _q_CWindows_CFoundation_CEventRegistrationToken = _q_CWindows_CFoundation_CEventRegistrationToken(Value: 0);
        try self._n_add_Print(RawPointer(value), &__result);
        return __result;
    }
    // [IsSpecialName] void remove_Print(Windows.Foundation.EventRegistrationToken)
    private func _n_remove_Print(_ token : _q_CWindows_CFoundation_CEventRegistrationToken) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Print(pThis, token))
        }
    }
    public func remove_Print(token : Windows.Foundation.EventRegistrationToken) throws -> Void {
        try self._n_remove_Print(token);
    }
    // void InvalidatePreview()
    private func _n_InvalidatePreview() throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.InvalidatePreview(pThis))
        }
    }
    public func InvalidatePreview() throws -> Void {
        try self._n_InvalidatePreview();
    }
    // void SetPageCount(System.UInt32)
    private func _n_SetPageCount(_ count : UINT32) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetPageCount(pThis, count))
        }
    }
    public func SetPageCount(count : Swift.UInt32) throws -> Void {
        try self._n_SetPageCount(count);
    }
    // void SetIntermediatePageCount(System.UInt32)
    private func _n_SetIntermediatePageCount(_ count : UINT32) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.SetIntermediatePageCount(pThis, count))
        }
    }
    public func SetIntermediatePageCount(count : Swift.UInt32) throws -> Void {
        try self._n_SetIntermediatePageCount(count);
    }
} // ICanvasPrintDocument


// type: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocumentFactory
// interface type
// ACTIVATION INTERFACE
open class ICanvasPrintDocumentFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa201af1e, Data2: 0xce4a, Data3 : 0x401d, Data4 : (0xa7, 0x19, 0x2b, 0xf0, 0x04, 0xd5, 0xc2, 0x6a)) }
    // Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument CreateWithDevice(Microsoft.Graphics.Canvas.CanvasDevice)
    private func _n_CreateWithDevice(_ device : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CICanvasDevice>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocumentFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithDevice(pThis, device, __presult))
        }
    }
    public func CreateWithDevice(device : Optional<Microsoft.Graphics.Canvas.ICanvasDevice>) throws -> Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>> = nil;
        try self._n_CreateWithDevice(RawPointer(device), &__result);
        return Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument(consuming: __result);
    }
} // ICanvasPrintDocumentFactory


// type: Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs
// interface type
open class ICanvasPrintEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0c6148c4, Data2: 0x0216, Data3 : 0x4561, Data4 : (0xa8, 0x17, 0x34, 0xc8, 0x94, 0x2a, 0xac, 0x8b)) }
    // [IsSpecialName] Windows.Graphics.Printing.PrintTaskOptions get_PrintTaskOptions()
    private func _n_get_PrintTaskOptions(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CGraphics_CPrinting_CIPrintTaskOptionsCore>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PrintTaskOptions(pThis, __presult))
        }
    }
    public func get_PrintTaskOptions() throws -> Optional<Windows.Graphics.Printing.IPrintTaskOptionsCore> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CGraphics_CPrinting_CIPrintTaskOptionsCore>> = nil;
        try self._n_get_PrintTaskOptions(&__result);
        return Windows.Graphics.Printing.IPrintTaskOptionsCore(consuming: __result);
    }
    // [IsSpecialName] System.Single get_Dpi()
    private func _n_get_Dpi(_ __presult: UnsafeMutablePointer<FLOAT>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Dpi(pThis, __presult))
        }
    }
    public func get_Dpi() throws -> Swift.Float {
        var __result : FLOAT = 0;
        try self._n_get_Dpi(&__result);
        return __result;
    }
    // [IsSpecialName] void put_Dpi(System.Single)
    private func _n_put_Dpi(_ value : FLOAT) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_Dpi(pThis, value))
        }
    }
    public func put_Dpi(value : Swift.Float) throws -> Void {
        try self._n_put_Dpi(value);
    }
    // Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral GetDeferral()
    private func _n_GetDeferral(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, __presult))
        }
    }
    public func GetDeferral() throws -> Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral>> = nil;
        try self._n_GetDeferral(&__result);
        return Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral(consuming: __result);
    }
    // Microsoft.Graphics.Canvas.CanvasDrawingSession CreateDrawingSession()
    private func _n_CreateDrawingSession(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateDrawingSession(pThis, __presult))
        }
    }
    public func CreateDrawingSession() throws -> Optional<Microsoft.Graphics.Canvas.ICanvasDrawingSession> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CICanvasDrawingSession>> = nil;
        try self._n_CreateDrawingSession(&__result);
        return Microsoft.Graphics.Canvas.ICanvasDrawingSession(consuming: __result);
    }
    public var Dpi : Swift.Float {
        get throws {
            return try get_Dpi();
        }
    }
    public var PrintTaskOptions : Optional<Windows.Graphics.Printing.IPrintTaskOptionsCore> {
        get throws {
            return try get_PrintTaskOptions();
        }
    }
} // ICanvasPrintEventArgs


// type: Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs
// interface type
open class ICanvasPrintTaskOptionsChangedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf92089ba, Data2: 0x6c99, Data3 : 0x4cac, Data4 : (0xb2, 0x8a, 0xb5, 0xdc, 0xec, 0x7a, 0x31, 0x0d)) }
    // [IsSpecialName] System.UInt32 get_CurrentPreviewPageNumber()
    private func _n_get_CurrentPreviewPageNumber(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CurrentPreviewPageNumber(pThis, __presult))
        }
    }
    public func get_CurrentPreviewPageNumber() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_CurrentPreviewPageNumber(&__result);
        return __result;
    }
    // [IsSpecialName] void put_NewPreviewPageNumber(System.UInt32)
    private func _n_put_NewPreviewPageNumber(_ value : UINT32) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.put_NewPreviewPageNumber(pThis, value))
        }
    }
    public func put_NewPreviewPageNumber(value : Swift.UInt32) throws -> Void {
        try self._n_put_NewPreviewPageNumber(value);
    }
    // [IsSpecialName] System.UInt32 get_NewPreviewPageNumber()
    private func _n_get_NewPreviewPageNumber(_ __presult: UnsafeMutablePointer<UINT32>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewPreviewPageNumber(pThis, __presult))
        }
    }
    public func get_NewPreviewPageNumber() throws -> Swift.UInt32 {
        var __result : UINT32 = 0;
        try self._n_get_NewPreviewPageNumber(&__result);
        return __result;
    }
    // Microsoft.Graphics.Canvas.Printing.CanvasPrintDeferral GetDeferral()
    private func _n_GetDeferral(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, __presult))
        }
    }
    public func GetDeferral() throws -> Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDeferral>> = nil;
        try self._n_GetDeferral(&__result);
        return Microsoft.Graphics.Canvas.Printing.ICanvasPrintDeferral(consuming: __result);
    }
    // [IsSpecialName] Windows.Graphics.Printing.PrintTaskOptions get_PrintTaskOptions()
    private func _n_get_PrintTaskOptions(_ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CWindows_CGraphics_CPrinting_CIPrintTaskOptionsCore>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PrintTaskOptions(pThis, __presult))
        }
    }
    public func get_PrintTaskOptions() throws -> Optional<Windows.Graphics.Printing.IPrintTaskOptionsCore> {
        var __result : Optional<UnsafeMutablePointer<_q_CWindows_CGraphics_CPrinting_CIPrintTaskOptionsCore>> = nil;
        try self._n_get_PrintTaskOptions(&__result);
        return Windows.Graphics.Printing.IPrintTaskOptionsCore(consuming: __result);
    }
    public var CurrentPreviewPageNumber : Swift.UInt32 {
        get throws {
            return try get_CurrentPreviewPageNumber();
        }
    }
    public var NewPreviewPageNumber : Swift.UInt32 {
        get throws {
            return try get_NewPreviewPageNumber();
        }
    }
    public var PrintTaskOptions : Optional<Windows.Graphics.Printing.IPrintTaskOptionsCore> {
        get throws {
            return try get_PrintTaskOptions();
        }
    }
} // ICanvasPrintTaskOptionsChangedEventArgs


}
