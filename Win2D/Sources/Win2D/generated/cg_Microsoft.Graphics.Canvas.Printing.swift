// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;
@_spi(IUnknown) import WinRT;
import CWin2D;
import WindowsSdk;
import CWindowsSdk;
import WindowsApp;
import CWindowsApp;

extension ClosedGenerics {
// closed generic delegate type
public class ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x87076d4b, Data2: 0x95f2, Data3 : 0x5eb5, Data4 : (0x94, 0xb8, 0xf3, 0xa8, 0xfe, 0xb8, 0xd3, 0x35)) }
    // [IsSpecialName] void Invoke(Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>, _ args : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>, _ args : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintTaskOptionsChangedEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs.from_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument(sender)), args: Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintTaskOptionsChangedEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintTaskOptionsChangedEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintTaskOptionsChangedEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xf406c30c, Data2: 0x1745, Data3 : 0x5ada, Data4 : (0xa5, 0x0f, 0x11, 0x23, 0x7a, 0x9d, 0x21, 0xc3)) }
    // [IsSpecialName] void Invoke(Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>, _ args : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPreviewEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>, _ args : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPreviewEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs.from_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument(sender)), args: Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPreviewEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPreviewEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPreviewEventArgs {
        return _self
    }
}
// closed generic delegate type
public class ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xe1b1643e, Data2: 0x7f53, Data3 : 0x57d8, Data4 : (0x8b, 0xd1, 0x90, 0xff, 0x03, 0x9d, 0x73, 0xca)) }
    // [IsSpecialName] void Invoke(Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument, Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs)
    private func _n_Invoke(_ sender : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>, _ args : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis, sender, args))
        }
    }
    public func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs>) throws -> Void {
        try self._n_Invoke(RawPointer(sender), RawPointer(args));
    }
} // ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs
// impl delegate type
open class TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs
{
    private static var vtable: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgsVtbl = .init(
    QueryInterface: {
        guard let pUnk = $0, let riid = $1, let ppvObject = $2 else {
            return E_INVALIDARG
        }
        switch riid.pointee {
        case IUnknown.IID, ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs.IID:
            _ = pUnk.pointee.lpVtbl.pointee.AddRef(pUnk)
            ppvObject.pointee = UnsafeMutableRawPointer(pUnk)
            return S_OK
        default:
            ppvObject.pointee = nil
            return E_NOINTERFACE
        }
    },
    AddRef: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs.WithTrailingObjects.self, capacity: 1)
        _ = pinstance.pointee.container.retain()
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeUnretainedValue()))
        return __res;
    },
    Release: {
        let pinstance = UnsafeMutableRawPointer($0!).bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs.WithTrailingObjects.self, capacity: 1)
        let __res = ULONG(_getRetainCount(pinstance.pointee.container.takeRetainedValue()))
        return __res;
    },
    Invoke: {
        (pThis, _ sender : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintDocument>>, _ args : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CPrinting_CICanvasPrintEventArgs>>) in
        guard let self = TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs.from_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs(pThis) else {
            return E_INVALIDARG
        }
        do {
            let _ret : Void = try self.Invoke(sender: Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintDocument(sender)), args: Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs(plok: Microsoft.Graphics.Canvas.Printing.ICanvasPrintEventArgs(args)))
            return S_OK
        }
        catch let _e as WinRT.Error {
            return _e.hr;
        } catch {
            return E_FAIL
        }
    }
    )
    private class Container {
        public var self_ref: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs? = nil
    }
    private struct WithTrailingObjects {
        public var interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs
        public var container: Unmanaged<Container>
    }
    private var instance: WithTrailingObjects

    private var _cb : Optional<(Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>) throws -> Void>
    public init(cb : Optional<(Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>) throws -> Void> = nil) {
        _cb = cb
        self.instance = WithTrailingObjects(interface_struct: _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs(lpVtbl: &Self.vtable), container: Unmanaged<Container>.passRetained(Container()))
        self.instance.container.takeUnretainedValue().self_ref = self
    }
    private static func from_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs(_ pUnk: UnsafeMutableRawPointer?) -> TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs? {
        return pUnk?.bindMemory(to: TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs.WithTrailingObjects.self, capacity: 1).pointee.container.takeUnretainedValue().self_ref
    }

    open func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>) throws -> Void {
        if let cb = _cb {
            return try cb(sender, args)
        }
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs {
        return withUnsafeMutablePointer(to: &self.instance.interface_struct) {
            ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs(UnsafeMutableRawPointer($0))
        }
    }
}
// wrap delegate type
open class foo_TypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs
{
    private var _self : ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs;
    public init(plok: ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs?) throws {
        _self = plok!
    }
    public func Invoke(sender : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintDocument>, args : Optional<Microsoft.Graphics.Canvas.Printing.CanvasPrintEventArgs>) throws -> Void {
        return try _self.Invoke(sender: sender!.Interface(), args: args!.Interface());
    }
    public func Interface() -> ClosedGenerics.ITypedEventHandler_2__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintDocument__q_CMicrosoft_CGraphics_CCanvas_CPrinting_CCanvasPrintEventArgs {
        return _self
    }
}
}
