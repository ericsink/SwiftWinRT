// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;

extension Microsoft.UI.Composition {
// type: Microsoft.UI.Composition.CompositionBrush
// runtime class
open class CompositionBrush
    :
    Microsoft.UI.Composition.CompositionObject
{
    private var _self : WinRT.Microsoft.UI.Composition.ICompositionBrush;
    internal init(plok: WinRT.Microsoft.UI.Composition.ICompositionBrush?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    internal func Interface() -> WinRT.Microsoft.UI.Composition.ICompositionBrush { return _self; }
    // COMPOSABLE: Microsoft.UI.Composition.ICompositionBrushFactory
// composable interface not needed: Microsoft.UI.Composition.ICompositionBrushFactory
}

// type: Microsoft.UI.Composition.CompositionObject
// runtime class
open class CompositionObject
{
    private var _self : WinRT.Microsoft.UI.Composition.ICompositionObject;
    internal init(plok: WinRT.Microsoft.UI.Composition.ICompositionObject?) throws {
        _self = plok!
    }
    internal func Interface() -> WinRT.Microsoft.UI.Composition.ICompositionObject { return _self; }
    // COMPOSABLE: Microsoft.UI.Composition.ICompositionObjectFactory
// composable interface not needed: Microsoft.UI.Composition.ICompositionObjectFactory
    // static interface not needed: Microsoft.UI.Composition.ICompositionObjectStatics
    // method not needed: get_Compositor
    // method not needed: get_Properties
    // method not needed: StartAnimation
    // method not needed: StopAnimation
    // instance interface not needed: Microsoft.UI.Composition.ICompositionObject2
    // instance interface not needed: Microsoft.UI.Composition.ICompositionObject3
    // instance interface not needed: Microsoft.UI.Composition.ICompositionObject4
    // instance interface not needed: Microsoft.UI.Composition.ICompositionObject5
    // instance interface not needed: Windows.Foundation.IClosable
    // instance interface not needed: Microsoft.UI.Composition.IAnimationObject
}

// type: Microsoft.UI.Composition.Compositor
// runtime class
public class Compositor
{
    private var _self : WinRT.Microsoft.UI.Composition.ICompositor;
    internal init(plok: WinRT.Microsoft.UI.Composition.ICompositor?) throws {
        _self = plok!
    }
    internal func Interface() -> WinRT.Microsoft.UI.Composition.ICompositor { return _self; }
    public init() throws {
        let _classId = try HString("Microsoft.UI.Composition.Compositor")
        _self = try RoActivateInstance(_classId)
    }
    // static interface not needed: Microsoft.UI.Composition.ICompositorStatics
    // method not needed: CreateColorKeyFrameAnimation
    // method not needed: CreateColorBrush
    // method not needed: CreateColorBrush
    // method not needed: CreateContainerVisual
    // method not needed: CreateCubicBezierEasingFunction
    // method not needed: CreateEffectFactory
    // method not needed: CreateEffectFactory
    // method not needed: CreateExpressionAnimation
    // method not needed: CreateExpressionAnimation
    // method not needed: CreateInsetClip
    // method not needed: CreateInsetClip
    // method not needed: CreateLinearEasingFunction
    // method not needed: CreatePropertySet
    // method not needed: CreateQuaternionKeyFrameAnimation
    // method not needed: CreateScalarKeyFrameAnimation
    // method not needed: CreateScopedBatch
    // method not needed: CreateSpriteVisual
    // method not needed: CreateSurfaceBrush
    // method not needed: CreateSurfaceBrush
    // method not needed: CreateVector2KeyFrameAnimation
    // method not needed: CreateVector3KeyFrameAnimation
    // method not needed: CreateVector4KeyFrameAnimation
    // method not needed: GetCommitBatch
    // instance interface not needed: Microsoft.UI.Composition.ICompositor2
    // instance interface not needed: Microsoft.UI.Composition.ICompositor4
    // instance interface not needed: Microsoft.UI.Composition.ICompositor5
    // instance interface not needed: Microsoft.UI.Composition.ICompositor6
    // instance interface not needed: Microsoft.UI.Composition.ICompositor7
    // instance interface not needed: Microsoft.UI.Composition.ICompositorWithProjectedShadow
    // instance interface not needed: Microsoft.UI.Composition.ICompositorWithRadialGradient
    // instance interface not needed: Microsoft.UI.Composition.ICompositorWithVisualSurface
    // instance interface not needed: Microsoft.UI.Composition.ICompositor8
    // instance interface not needed: Windows.Foundation.IClosable
}

// type: Microsoft.UI.Composition.ICompositionBrush
// interface type
open class ICompositionBrush
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x483924e7, Data2: 0x99a5, Data3 : 0x5377, Data4 : (0x96, 0x8b, 0xde, 0xc6, 0xd4, 0x0b, 0xbc, 0xcd)) }
} // ICompositionBrush


// type: Microsoft.UI.Composition.ICompositionObject
// interface type
open class ICompositionObject
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0e583d49, Data2: 0xfb5e, Data3 : 0x5481, Data4 : (0xa4, 0x26, 0xd3, 0xc4, 0x1e, 0x05, 0x9a, 0x5a)) }
// method not needed: get_Compositor
// method not needed: get_Properties
// method not needed: StartAnimation
// method not needed: StopAnimation
} // ICompositionObject


// type: Microsoft.UI.Composition.ICompositor
// interface type
open class ICompositor
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x95213c13, Data2: 0xc4cb, Data3 : 0x57de, Data4 : (0xb2, 0x67, 0xd2, 0x1a, 0xb9, 0x01, 0xae, 0x38)) }
// method not needed: CreateColorKeyFrameAnimation
// method not needed: CreateColorBrush
// method not needed: CreateColorBrushWithColor
// method not needed: CreateContainerVisual
// method not needed: CreateCubicBezierEasingFunction
// method not needed: CreateEffectFactory
// method not needed: CreateEffectFactoryWithProperties
// method not needed: CreateExpressionAnimation
// method not needed: CreateExpressionAnimationWithExpression
// method not needed: CreateInsetClip
// method not needed: CreateInsetClipWithInsets
// method not needed: CreateLinearEasingFunction
// method not needed: CreatePropertySet
// method not needed: CreateQuaternionKeyFrameAnimation
// method not needed: CreateScalarKeyFrameAnimation
// method not needed: CreateScopedBatch
// method not needed: CreateSpriteVisual
// method not needed: CreateSurfaceBrush
// method not needed: CreateSurfaceBrushWithSurface
// method not needed: CreateVector2KeyFrameAnimation
// method not needed: CreateVector3KeyFrameAnimation
// method not needed: CreateVector4KeyFrameAnimation
// method not needed: GetCommitBatch
} // ICompositor


}
