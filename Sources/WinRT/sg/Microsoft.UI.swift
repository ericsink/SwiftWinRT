// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;

extension Microsoft.UI {
// type: Microsoft.UI.Colors
// runtime class
public class Colors
{
    private var _self : WinRT.Microsoft.UI.IColors;
    internal init(plok: WinRT.Microsoft.UI.IColors?) throws {
        _self = plok!
    }
    internal func Interface() -> WinRT.Microsoft.UI.IColors { return _self; }
    private struct _IColorsStatics {
        static var x : IColorsStatics =
            try! RoGetActivationFactory(HString("Microsoft.UI.Colors"))
    }
    public static var ColorsStatics : IColorsStatics {
        _IColorsStatics.x
    }
    public static func get_AliceBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_AliceBlue();
    }
    public static func get_AntiqueWhite() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_AntiqueWhite();
    }
    public static func get_Aqua() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Aqua();
    }
    public static func get_Aquamarine() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Aquamarine();
    }
    public static func get_Azure() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Azure();
    }
    public static func get_Beige() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Beige();
    }
    public static func get_Bisque() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Bisque();
    }
    public static func get_Black() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Black();
    }
    public static func get_BlanchedAlmond() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_BlanchedAlmond();
    }
    public static func get_Blue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Blue();
    }
    public static func get_BlueViolet() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_BlueViolet();
    }
    public static func get_Brown() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Brown();
    }
    public static func get_BurlyWood() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_BurlyWood();
    }
    public static func get_CadetBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_CadetBlue();
    }
    public static func get_Chartreuse() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Chartreuse();
    }
    public static func get_Chocolate() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Chocolate();
    }
    public static func get_Coral() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Coral();
    }
    public static func get_CornflowerBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_CornflowerBlue();
    }
    public static func get_Cornsilk() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Cornsilk();
    }
    public static func get_Crimson() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Crimson();
    }
    public static func get_Cyan() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Cyan();
    }
    public static func get_DarkBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkBlue();
    }
    public static func get_DarkCyan() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkCyan();
    }
    public static func get_DarkGoldenrod() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkGoldenrod();
    }
    public static func get_DarkGray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkGray();
    }
    public static func get_DarkGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkGreen();
    }
    public static func get_DarkKhaki() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkKhaki();
    }
    public static func get_DarkMagenta() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkMagenta();
    }
    public static func get_DarkOliveGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkOliveGreen();
    }
    public static func get_DarkOrange() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkOrange();
    }
    public static func get_DarkOrchid() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkOrchid();
    }
    public static func get_DarkRed() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkRed();
    }
    public static func get_DarkSalmon() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkSalmon();
    }
    public static func get_DarkSeaGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkSeaGreen();
    }
    public static func get_DarkSlateBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkSlateBlue();
    }
    public static func get_DarkSlateGray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkSlateGray();
    }
    public static func get_DarkTurquoise() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkTurquoise();
    }
    public static func get_DarkViolet() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DarkViolet();
    }
    public static func get_DeepPink() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DeepPink();
    }
    public static func get_DeepSkyBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DeepSkyBlue();
    }
    public static func get_DimGray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DimGray();
    }
    public static func get_DodgerBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_DodgerBlue();
    }
    public static func get_Firebrick() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Firebrick();
    }
    public static func get_FloralWhite() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_FloralWhite();
    }
    public static func get_ForestGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_ForestGreen();
    }
    public static func get_Fuchsia() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Fuchsia();
    }
    public static func get_Gainsboro() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Gainsboro();
    }
    public static func get_GhostWhite() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_GhostWhite();
    }
    public static func get_Gold() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Gold();
    }
    public static func get_Goldenrod() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Goldenrod();
    }
    public static func get_Gray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Gray();
    }
    public static func get_Green() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Green();
    }
    public static func get_GreenYellow() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_GreenYellow();
    }
    public static func get_Honeydew() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Honeydew();
    }
    public static func get_HotPink() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_HotPink();
    }
    public static func get_IndianRed() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_IndianRed();
    }
    public static func get_Indigo() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Indigo();
    }
    public static func get_Ivory() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Ivory();
    }
    public static func get_Khaki() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Khaki();
    }
    public static func get_Lavender() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Lavender();
    }
    public static func get_LavenderBlush() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LavenderBlush();
    }
    public static func get_LawnGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LawnGreen();
    }
    public static func get_LemonChiffon() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LemonChiffon();
    }
    public static func get_LightBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightBlue();
    }
    public static func get_LightCoral() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightCoral();
    }
    public static func get_LightCyan() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightCyan();
    }
    public static func get_LightGoldenrodYellow() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightGoldenrodYellow();
    }
    public static func get_LightGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightGreen();
    }
    public static func get_LightGray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightGray();
    }
    public static func get_LightPink() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightPink();
    }
    public static func get_LightSalmon() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightSalmon();
    }
    public static func get_LightSeaGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightSeaGreen();
    }
    public static func get_LightSkyBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightSkyBlue();
    }
    public static func get_LightSlateGray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightSlateGray();
    }
    public static func get_LightSteelBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightSteelBlue();
    }
    public static func get_LightYellow() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LightYellow();
    }
    public static func get_Lime() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Lime();
    }
    public static func get_LimeGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_LimeGreen();
    }
    public static func get_Linen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Linen();
    }
    public static func get_Magenta() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Magenta();
    }
    public static func get_Maroon() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Maroon();
    }
    public static func get_MediumAquamarine() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumAquamarine();
    }
    public static func get_MediumBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumBlue();
    }
    public static func get_MediumOrchid() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumOrchid();
    }
    public static func get_MediumPurple() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumPurple();
    }
    public static func get_MediumSeaGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumSeaGreen();
    }
    public static func get_MediumSlateBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumSlateBlue();
    }
    public static func get_MediumSpringGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumSpringGreen();
    }
    public static func get_MediumTurquoise() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumTurquoise();
    }
    public static func get_MediumVioletRed() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MediumVioletRed();
    }
    public static func get_MidnightBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MidnightBlue();
    }
    public static func get_MintCream() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MintCream();
    }
    public static func get_MistyRose() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_MistyRose();
    }
    public static func get_Moccasin() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Moccasin();
    }
    public static func get_NavajoWhite() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_NavajoWhite();
    }
    public static func get_Navy() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Navy();
    }
    public static func get_OldLace() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_OldLace();
    }
    public static func get_Olive() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Olive();
    }
    public static func get_OliveDrab() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_OliveDrab();
    }
    public static func get_Orange() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Orange();
    }
    public static func get_OrangeRed() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_OrangeRed();
    }
    public static func get_Orchid() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Orchid();
    }
    public static func get_PaleGoldenrod() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PaleGoldenrod();
    }
    public static func get_PaleGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PaleGreen();
    }
    public static func get_PaleTurquoise() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PaleTurquoise();
    }
    public static func get_PaleVioletRed() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PaleVioletRed();
    }
    public static func get_PapayaWhip() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PapayaWhip();
    }
    public static func get_PeachPuff() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PeachPuff();
    }
    public static func get_Peru() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Peru();
    }
    public static func get_Pink() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Pink();
    }
    public static func get_Plum() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Plum();
    }
    public static func get_PowderBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_PowderBlue();
    }
    public static func get_Purple() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Purple();
    }
    public static func get_Red() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Red();
    }
    public static func get_RosyBrown() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_RosyBrown();
    }
    public static func get_RoyalBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_RoyalBlue();
    }
    public static func get_SaddleBrown() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SaddleBrown();
    }
    public static func get_Salmon() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Salmon();
    }
    public static func get_SandyBrown() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SandyBrown();
    }
    public static func get_SeaGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SeaGreen();
    }
    public static func get_SeaShell() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SeaShell();
    }
    public static func get_Sienna() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Sienna();
    }
    public static func get_Silver() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Silver();
    }
    public static func get_SkyBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SkyBlue();
    }
    public static func get_SlateBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SlateBlue();
    }
    public static func get_SlateGray() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SlateGray();
    }
    public static func get_Snow() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Snow();
    }
    public static func get_SpringGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SpringGreen();
    }
    public static func get_SteelBlue() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_SteelBlue();
    }
    public static func get_Tan() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Tan();
    }
    public static func get_Teal() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Teal();
    }
    public static func get_Thistle() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Thistle();
    }
    public static func get_Tomato() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Tomato();
    }
    public static func get_Transparent() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Transparent();
    }
    public static func get_Turquoise() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Turquoise();
    }
    public static func get_Violet() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Violet();
    }
    public static func get_Wheat() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Wheat();
    }
    public static func get_White() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_White();
    }
    public static func get_WhiteSmoke() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_WhiteSmoke();
    }
    public static func get_Yellow() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_Yellow();
    }
    public static func get_YellowGreen() throws -> WinRT.Windows.UI.Color {
        return try ColorsStatics.get_YellowGreen();
    }
    public static var AliceBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.AliceBlue;
        }
    }
    public static var AntiqueWhite : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.AntiqueWhite;
        }
    }
    public static var Aqua : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Aqua;
        }
    }
    public static var Aquamarine : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Aquamarine;
        }
    }
    public static var Azure : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Azure;
        }
    }
    public static var Beige : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Beige;
        }
    }
    public static var Bisque : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Bisque;
        }
    }
    public static var Black : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Black;
        }
    }
    public static var BlanchedAlmond : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.BlanchedAlmond;
        }
    }
    public static var Blue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Blue;
        }
    }
    public static var BlueViolet : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.BlueViolet;
        }
    }
    public static var Brown : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Brown;
        }
    }
    public static var BurlyWood : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.BurlyWood;
        }
    }
    public static var CadetBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.CadetBlue;
        }
    }
    public static var Chartreuse : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Chartreuse;
        }
    }
    public static var Chocolate : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Chocolate;
        }
    }
    public static var Coral : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Coral;
        }
    }
    public static var CornflowerBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.CornflowerBlue;
        }
    }
    public static var Cornsilk : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Cornsilk;
        }
    }
    public static var Crimson : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Crimson;
        }
    }
    public static var Cyan : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Cyan;
        }
    }
    public static var DarkBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkBlue;
        }
    }
    public static var DarkCyan : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkCyan;
        }
    }
    public static var DarkGoldenrod : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkGoldenrod;
        }
    }
    public static var DarkGray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkGray;
        }
    }
    public static var DarkGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkGreen;
        }
    }
    public static var DarkKhaki : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkKhaki;
        }
    }
    public static var DarkMagenta : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkMagenta;
        }
    }
    public static var DarkOliveGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkOliveGreen;
        }
    }
    public static var DarkOrange : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkOrange;
        }
    }
    public static var DarkOrchid : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkOrchid;
        }
    }
    public static var DarkRed : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkRed;
        }
    }
    public static var DarkSalmon : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkSalmon;
        }
    }
    public static var DarkSeaGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkSeaGreen;
        }
    }
    public static var DarkSlateBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkSlateBlue;
        }
    }
    public static var DarkSlateGray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkSlateGray;
        }
    }
    public static var DarkTurquoise : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkTurquoise;
        }
    }
    public static var DarkViolet : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DarkViolet;
        }
    }
    public static var DeepPink : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DeepPink;
        }
    }
    public static var DeepSkyBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DeepSkyBlue;
        }
    }
    public static var DimGray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DimGray;
        }
    }
    public static var DodgerBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.DodgerBlue;
        }
    }
    public static var Firebrick : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Firebrick;
        }
    }
    public static var FloralWhite : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.FloralWhite;
        }
    }
    public static var ForestGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.ForestGreen;
        }
    }
    public static var Fuchsia : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Fuchsia;
        }
    }
    public static var Gainsboro : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Gainsboro;
        }
    }
    public static var GhostWhite : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.GhostWhite;
        }
    }
    public static var Gold : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Gold;
        }
    }
    public static var Goldenrod : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Goldenrod;
        }
    }
    public static var Gray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Gray;
        }
    }
    public static var Green : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Green;
        }
    }
    public static var GreenYellow : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.GreenYellow;
        }
    }
    public static var Honeydew : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Honeydew;
        }
    }
    public static var HotPink : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.HotPink;
        }
    }
    public static var IndianRed : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.IndianRed;
        }
    }
    public static var Indigo : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Indigo;
        }
    }
    public static var Ivory : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Ivory;
        }
    }
    public static var Khaki : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Khaki;
        }
    }
    public static var Lavender : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Lavender;
        }
    }
    public static var LavenderBlush : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LavenderBlush;
        }
    }
    public static var LawnGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LawnGreen;
        }
    }
    public static var LemonChiffon : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LemonChiffon;
        }
    }
    public static var LightBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightBlue;
        }
    }
    public static var LightCoral : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightCoral;
        }
    }
    public static var LightCyan : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightCyan;
        }
    }
    public static var LightGoldenrodYellow : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightGoldenrodYellow;
        }
    }
    public static var LightGray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightGray;
        }
    }
    public static var LightGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightGreen;
        }
    }
    public static var LightPink : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightPink;
        }
    }
    public static var LightSalmon : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightSalmon;
        }
    }
    public static var LightSeaGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightSeaGreen;
        }
    }
    public static var LightSkyBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightSkyBlue;
        }
    }
    public static var LightSlateGray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightSlateGray;
        }
    }
    public static var LightSteelBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightSteelBlue;
        }
    }
    public static var LightYellow : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LightYellow;
        }
    }
    public static var Lime : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Lime;
        }
    }
    public static var LimeGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.LimeGreen;
        }
    }
    public static var Linen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Linen;
        }
    }
    public static var Magenta : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Magenta;
        }
    }
    public static var Maroon : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Maroon;
        }
    }
    public static var MediumAquamarine : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumAquamarine;
        }
    }
    public static var MediumBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumBlue;
        }
    }
    public static var MediumOrchid : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumOrchid;
        }
    }
    public static var MediumPurple : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumPurple;
        }
    }
    public static var MediumSeaGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumSeaGreen;
        }
    }
    public static var MediumSlateBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumSlateBlue;
        }
    }
    public static var MediumSpringGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumSpringGreen;
        }
    }
    public static var MediumTurquoise : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumTurquoise;
        }
    }
    public static var MediumVioletRed : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MediumVioletRed;
        }
    }
    public static var MidnightBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MidnightBlue;
        }
    }
    public static var MintCream : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MintCream;
        }
    }
    public static var MistyRose : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.MistyRose;
        }
    }
    public static var Moccasin : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Moccasin;
        }
    }
    public static var NavajoWhite : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.NavajoWhite;
        }
    }
    public static var Navy : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Navy;
        }
    }
    public static var OldLace : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.OldLace;
        }
    }
    public static var Olive : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Olive;
        }
    }
    public static var OliveDrab : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.OliveDrab;
        }
    }
    public static var Orange : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Orange;
        }
    }
    public static var OrangeRed : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.OrangeRed;
        }
    }
    public static var Orchid : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Orchid;
        }
    }
    public static var PaleGoldenrod : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PaleGoldenrod;
        }
    }
    public static var PaleGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PaleGreen;
        }
    }
    public static var PaleTurquoise : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PaleTurquoise;
        }
    }
    public static var PaleVioletRed : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PaleVioletRed;
        }
    }
    public static var PapayaWhip : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PapayaWhip;
        }
    }
    public static var PeachPuff : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PeachPuff;
        }
    }
    public static var Peru : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Peru;
        }
    }
    public static var Pink : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Pink;
        }
    }
    public static var Plum : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Plum;
        }
    }
    public static var PowderBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.PowderBlue;
        }
    }
    public static var Purple : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Purple;
        }
    }
    public static var Red : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Red;
        }
    }
    public static var RosyBrown : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.RosyBrown;
        }
    }
    public static var RoyalBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.RoyalBlue;
        }
    }
    public static var SaddleBrown : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SaddleBrown;
        }
    }
    public static var Salmon : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Salmon;
        }
    }
    public static var SandyBrown : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SandyBrown;
        }
    }
    public static var SeaGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SeaGreen;
        }
    }
    public static var SeaShell : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SeaShell;
        }
    }
    public static var Sienna : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Sienna;
        }
    }
    public static var Silver : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Silver;
        }
    }
    public static var SkyBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SkyBlue;
        }
    }
    public static var SlateBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SlateBlue;
        }
    }
    public static var SlateGray : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SlateGray;
        }
    }
    public static var Snow : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Snow;
        }
    }
    public static var SpringGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SpringGreen;
        }
    }
    public static var SteelBlue : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.SteelBlue;
        }
    }
    public static var Tan : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Tan;
        }
    }
    public static var Teal : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Teal;
        }
    }
    public static var Thistle : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Thistle;
        }
    }
    public static var Tomato : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Tomato;
        }
    }
    public static var Transparent : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Transparent;
        }
    }
    public static var Turquoise : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Turquoise;
        }
    }
    public static var Violet : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Violet;
        }
    }
    public static var Wheat : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Wheat;
        }
    }
    public static var White : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.White;
        }
    }
    public static var WhiteSmoke : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.WhiteSmoke;
        }
    }
    public static var Yellow : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.Yellow;
        }
    }
    public static var YellowGreen : WinRT.Windows.UI.Color {
        get throws {
        return try ColorsStatics.YellowGreen;
        }
    }
}

// type: Microsoft.UI.IColors
// interface type
open class IColors
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8cf15863, Data2: 0x8411, Data3 : 0x5afd, Data4 : (0x94, 0x6c, 0x32, 0x8e, 0x04, 0xda, 0x2f, 0x2f)) }
} // IColors


// type: Microsoft.UI.IColorsStatics
// interface type
open class IColorsStatics
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x8620a5b0, Data2: 0x015a, Data3 : 0x57ac, Data4 : (0xa3, 0xf3, 0x89, 0x5d, 0x0b, 0x12, 0x69, 0xae)) }
    // [IsSpecialName] Windows.UI.Color get_AliceBlue()
    public func _n_get_AliceBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_AliceBlue(pThis, __presult))
        }
    }
    public func get_AliceBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_AliceBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_AntiqueWhite()
    public func _n_get_AntiqueWhite(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_AntiqueWhite(pThis, __presult))
        }
    }
    public func get_AntiqueWhite() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_AntiqueWhite(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Aqua()
    public func _n_get_Aqua(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Aqua(pThis, __presult))
        }
    }
    public func get_Aqua() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Aqua(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Aquamarine()
    public func _n_get_Aquamarine(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Aquamarine(pThis, __presult))
        }
    }
    public func get_Aquamarine() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Aquamarine(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Azure()
    public func _n_get_Azure(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Azure(pThis, __presult))
        }
    }
    public func get_Azure() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Azure(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Beige()
    public func _n_get_Beige(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Beige(pThis, __presult))
        }
    }
    public func get_Beige() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Beige(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Bisque()
    public func _n_get_Bisque(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bisque(pThis, __presult))
        }
    }
    public func get_Bisque() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Bisque(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Black()
    public func _n_get_Black(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Black(pThis, __presult))
        }
    }
    public func get_Black() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Black(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_BlanchedAlmond()
    public func _n_get_BlanchedAlmond(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_BlanchedAlmond(pThis, __presult))
        }
    }
    public func get_BlanchedAlmond() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_BlanchedAlmond(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Blue()
    public func _n_get_Blue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Blue(pThis, __presult))
        }
    }
    public func get_Blue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Blue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_BlueViolet()
    public func _n_get_BlueViolet(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_BlueViolet(pThis, __presult))
        }
    }
    public func get_BlueViolet() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_BlueViolet(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Brown()
    public func _n_get_Brown(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Brown(pThis, __presult))
        }
    }
    public func get_Brown() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Brown(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_BurlyWood()
    public func _n_get_BurlyWood(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_BurlyWood(pThis, __presult))
        }
    }
    public func get_BurlyWood() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_BurlyWood(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_CadetBlue()
    public func _n_get_CadetBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CadetBlue(pThis, __presult))
        }
    }
    public func get_CadetBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_CadetBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Chartreuse()
    public func _n_get_Chartreuse(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Chartreuse(pThis, __presult))
        }
    }
    public func get_Chartreuse() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Chartreuse(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Chocolate()
    public func _n_get_Chocolate(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Chocolate(pThis, __presult))
        }
    }
    public func get_Chocolate() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Chocolate(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Coral()
    public func _n_get_Coral(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Coral(pThis, __presult))
        }
    }
    public func get_Coral() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Coral(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_CornflowerBlue()
    public func _n_get_CornflowerBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_CornflowerBlue(pThis, __presult))
        }
    }
    public func get_CornflowerBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_CornflowerBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Cornsilk()
    public func _n_get_Cornsilk(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cornsilk(pThis, __presult))
        }
    }
    public func get_Cornsilk() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Cornsilk(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Crimson()
    public func _n_get_Crimson(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Crimson(pThis, __presult))
        }
    }
    public func get_Crimson() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Crimson(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Cyan()
    public func _n_get_Cyan(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cyan(pThis, __presult))
        }
    }
    public func get_Cyan() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Cyan(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkBlue()
    public func _n_get_DarkBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkBlue(pThis, __presult))
        }
    }
    public func get_DarkBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkCyan()
    public func _n_get_DarkCyan(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkCyan(pThis, __presult))
        }
    }
    public func get_DarkCyan() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkCyan(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkGoldenrod()
    public func _n_get_DarkGoldenrod(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGoldenrod(pThis, __presult))
        }
    }
    public func get_DarkGoldenrod() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkGoldenrod(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkGray()
    public func _n_get_DarkGray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGray(pThis, __presult))
        }
    }
    public func get_DarkGray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkGray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkGreen()
    public func _n_get_DarkGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGreen(pThis, __presult))
        }
    }
    public func get_DarkGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkKhaki()
    public func _n_get_DarkKhaki(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkKhaki(pThis, __presult))
        }
    }
    public func get_DarkKhaki() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkKhaki(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkMagenta()
    public func _n_get_DarkMagenta(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkMagenta(pThis, __presult))
        }
    }
    public func get_DarkMagenta() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkMagenta(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkOliveGreen()
    public func _n_get_DarkOliveGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOliveGreen(pThis, __presult))
        }
    }
    public func get_DarkOliveGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkOliveGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkOrange()
    public func _n_get_DarkOrange(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOrange(pThis, __presult))
        }
    }
    public func get_DarkOrange() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkOrange(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkOrchid()
    public func _n_get_DarkOrchid(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOrchid(pThis, __presult))
        }
    }
    public func get_DarkOrchid() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkOrchid(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkRed()
    public func _n_get_DarkRed(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkRed(pThis, __presult))
        }
    }
    public func get_DarkRed() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkRed(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkSalmon()
    public func _n_get_DarkSalmon(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSalmon(pThis, __presult))
        }
    }
    public func get_DarkSalmon() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkSalmon(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkSeaGreen()
    public func _n_get_DarkSeaGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSeaGreen(pThis, __presult))
        }
    }
    public func get_DarkSeaGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkSeaGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkSlateBlue()
    public func _n_get_DarkSlateBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSlateBlue(pThis, __presult))
        }
    }
    public func get_DarkSlateBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkSlateBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkSlateGray()
    public func _n_get_DarkSlateGray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSlateGray(pThis, __presult))
        }
    }
    public func get_DarkSlateGray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkSlateGray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkTurquoise()
    public func _n_get_DarkTurquoise(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkTurquoise(pThis, __presult))
        }
    }
    public func get_DarkTurquoise() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkTurquoise(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DarkViolet()
    public func _n_get_DarkViolet(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkViolet(pThis, __presult))
        }
    }
    public func get_DarkViolet() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DarkViolet(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DeepPink()
    public func _n_get_DeepPink(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeepPink(pThis, __presult))
        }
    }
    public func get_DeepPink() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DeepPink(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DeepSkyBlue()
    public func _n_get_DeepSkyBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeepSkyBlue(pThis, __presult))
        }
    }
    public func get_DeepSkyBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DeepSkyBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DimGray()
    public func _n_get_DimGray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DimGray(pThis, __presult))
        }
    }
    public func get_DimGray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DimGray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_DodgerBlue()
    public func _n_get_DodgerBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_DodgerBlue(pThis, __presult))
        }
    }
    public func get_DodgerBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_DodgerBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Firebrick()
    public func _n_get_Firebrick(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Firebrick(pThis, __presult))
        }
    }
    public func get_Firebrick() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Firebrick(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_FloralWhite()
    public func _n_get_FloralWhite(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_FloralWhite(pThis, __presult))
        }
    }
    public func get_FloralWhite() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_FloralWhite(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_ForestGreen()
    public func _n_get_ForestGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_ForestGreen(pThis, __presult))
        }
    }
    public func get_ForestGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_ForestGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Fuchsia()
    public func _n_get_Fuchsia(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fuchsia(pThis, __presult))
        }
    }
    public func get_Fuchsia() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Fuchsia(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Gainsboro()
    public func _n_get_Gainsboro(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gainsboro(pThis, __presult))
        }
    }
    public func get_Gainsboro() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Gainsboro(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_GhostWhite()
    public func _n_get_GhostWhite(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_GhostWhite(pThis, __presult))
        }
    }
    public func get_GhostWhite() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_GhostWhite(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Gold()
    public func _n_get_Gold(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gold(pThis, __presult))
        }
    }
    public func get_Gold() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Gold(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Goldenrod()
    public func _n_get_Goldenrod(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Goldenrod(pThis, __presult))
        }
    }
    public func get_Goldenrod() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Goldenrod(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Gray()
    public func _n_get_Gray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gray(pThis, __presult))
        }
    }
    public func get_Gray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Gray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Green()
    public func _n_get_Green(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Green(pThis, __presult))
        }
    }
    public func get_Green() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Green(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_GreenYellow()
    public func _n_get_GreenYellow(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_GreenYellow(pThis, __presult))
        }
    }
    public func get_GreenYellow() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_GreenYellow(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Honeydew()
    public func _n_get_Honeydew(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Honeydew(pThis, __presult))
        }
    }
    public func get_Honeydew() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Honeydew(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_HotPink()
    public func _n_get_HotPink(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_HotPink(pThis, __presult))
        }
    }
    public func get_HotPink() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_HotPink(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_IndianRed()
    public func _n_get_IndianRed(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_IndianRed(pThis, __presult))
        }
    }
    public func get_IndianRed() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_IndianRed(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Indigo()
    public func _n_get_Indigo(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Indigo(pThis, __presult))
        }
    }
    public func get_Indigo() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Indigo(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Ivory()
    public func _n_get_Ivory(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Ivory(pThis, __presult))
        }
    }
    public func get_Ivory() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Ivory(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Khaki()
    public func _n_get_Khaki(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Khaki(pThis, __presult))
        }
    }
    public func get_Khaki() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Khaki(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Lavender()
    public func _n_get_Lavender(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Lavender(pThis, __presult))
        }
    }
    public func get_Lavender() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Lavender(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LavenderBlush()
    public func _n_get_LavenderBlush(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LavenderBlush(pThis, __presult))
        }
    }
    public func get_LavenderBlush() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LavenderBlush(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LawnGreen()
    public func _n_get_LawnGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LawnGreen(pThis, __presult))
        }
    }
    public func get_LawnGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LawnGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LemonChiffon()
    public func _n_get_LemonChiffon(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LemonChiffon(pThis, __presult))
        }
    }
    public func get_LemonChiffon() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LemonChiffon(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightBlue()
    public func _n_get_LightBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightBlue(pThis, __presult))
        }
    }
    public func get_LightBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightCoral()
    public func _n_get_LightCoral(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightCoral(pThis, __presult))
        }
    }
    public func get_LightCoral() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightCoral(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightCyan()
    public func _n_get_LightCyan(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightCyan(pThis, __presult))
        }
    }
    public func get_LightCyan() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightCyan(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightGoldenrodYellow()
    public func _n_get_LightGoldenrodYellow(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGoldenrodYellow(pThis, __presult))
        }
    }
    public func get_LightGoldenrodYellow() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightGoldenrodYellow(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightGreen()
    public func _n_get_LightGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGreen(pThis, __presult))
        }
    }
    public func get_LightGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightGray()
    public func _n_get_LightGray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGray(pThis, __presult))
        }
    }
    public func get_LightGray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightGray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightPink()
    public func _n_get_LightPink(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightPink(pThis, __presult))
        }
    }
    public func get_LightPink() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightPink(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightSalmon()
    public func _n_get_LightSalmon(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSalmon(pThis, __presult))
        }
    }
    public func get_LightSalmon() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightSalmon(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightSeaGreen()
    public func _n_get_LightSeaGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSeaGreen(pThis, __presult))
        }
    }
    public func get_LightSeaGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightSeaGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightSkyBlue()
    public func _n_get_LightSkyBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSkyBlue(pThis, __presult))
        }
    }
    public func get_LightSkyBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightSkyBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightSlateGray()
    public func _n_get_LightSlateGray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSlateGray(pThis, __presult))
        }
    }
    public func get_LightSlateGray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightSlateGray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightSteelBlue()
    public func _n_get_LightSteelBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSteelBlue(pThis, __presult))
        }
    }
    public func get_LightSteelBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightSteelBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LightYellow()
    public func _n_get_LightYellow(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightYellow(pThis, __presult))
        }
    }
    public func get_LightYellow() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LightYellow(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Lime()
    public func _n_get_Lime(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Lime(pThis, __presult))
        }
    }
    public func get_Lime() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Lime(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_LimeGreen()
    public func _n_get_LimeGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_LimeGreen(pThis, __presult))
        }
    }
    public func get_LimeGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_LimeGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Linen()
    public func _n_get_Linen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Linen(pThis, __presult))
        }
    }
    public func get_Linen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Linen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Magenta()
    public func _n_get_Magenta(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Magenta(pThis, __presult))
        }
    }
    public func get_Magenta() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Magenta(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Maroon()
    public func _n_get_Maroon(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Maroon(pThis, __presult))
        }
    }
    public func get_Maroon() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Maroon(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumAquamarine()
    public func _n_get_MediumAquamarine(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumAquamarine(pThis, __presult))
        }
    }
    public func get_MediumAquamarine() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumAquamarine(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumBlue()
    public func _n_get_MediumBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumBlue(pThis, __presult))
        }
    }
    public func get_MediumBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumOrchid()
    public func _n_get_MediumOrchid(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumOrchid(pThis, __presult))
        }
    }
    public func get_MediumOrchid() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumOrchid(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumPurple()
    public func _n_get_MediumPurple(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumPurple(pThis, __presult))
        }
    }
    public func get_MediumPurple() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumPurple(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumSeaGreen()
    public func _n_get_MediumSeaGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSeaGreen(pThis, __presult))
        }
    }
    public func get_MediumSeaGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumSeaGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumSlateBlue()
    public func _n_get_MediumSlateBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSlateBlue(pThis, __presult))
        }
    }
    public func get_MediumSlateBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumSlateBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumSpringGreen()
    public func _n_get_MediumSpringGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSpringGreen(pThis, __presult))
        }
    }
    public func get_MediumSpringGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumSpringGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumTurquoise()
    public func _n_get_MediumTurquoise(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumTurquoise(pThis, __presult))
        }
    }
    public func get_MediumTurquoise() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumTurquoise(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MediumVioletRed()
    public func _n_get_MediumVioletRed(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumVioletRed(pThis, __presult))
        }
    }
    public func get_MediumVioletRed() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MediumVioletRed(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MidnightBlue()
    public func _n_get_MidnightBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MidnightBlue(pThis, __presult))
        }
    }
    public func get_MidnightBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MidnightBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MintCream()
    public func _n_get_MintCream(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MintCream(pThis, __presult))
        }
    }
    public func get_MintCream() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MintCream(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_MistyRose()
    public func _n_get_MistyRose(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_MistyRose(pThis, __presult))
        }
    }
    public func get_MistyRose() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_MistyRose(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Moccasin()
    public func _n_get_Moccasin(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Moccasin(pThis, __presult))
        }
    }
    public func get_Moccasin() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Moccasin(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_NavajoWhite()
    public func _n_get_NavajoWhite(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_NavajoWhite(pThis, __presult))
        }
    }
    public func get_NavajoWhite() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_NavajoWhite(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Navy()
    public func _n_get_Navy(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Navy(pThis, __presult))
        }
    }
    public func get_Navy() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Navy(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_OldLace()
    public func _n_get_OldLace(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_OldLace(pThis, __presult))
        }
    }
    public func get_OldLace() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_OldLace(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Olive()
    public func _n_get_Olive(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Olive(pThis, __presult))
        }
    }
    public func get_Olive() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Olive(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_OliveDrab()
    public func _n_get_OliveDrab(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_OliveDrab(pThis, __presult))
        }
    }
    public func get_OliveDrab() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_OliveDrab(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Orange()
    public func _n_get_Orange(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orange(pThis, __presult))
        }
    }
    public func get_Orange() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Orange(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_OrangeRed()
    public func _n_get_OrangeRed(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_OrangeRed(pThis, __presult))
        }
    }
    public func get_OrangeRed() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_OrangeRed(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Orchid()
    public func _n_get_Orchid(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orchid(pThis, __presult))
        }
    }
    public func get_Orchid() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Orchid(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PaleGoldenrod()
    public func _n_get_PaleGoldenrod(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleGoldenrod(pThis, __presult))
        }
    }
    public func get_PaleGoldenrod() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PaleGoldenrod(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PaleGreen()
    public func _n_get_PaleGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleGreen(pThis, __presult))
        }
    }
    public func get_PaleGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PaleGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PaleTurquoise()
    public func _n_get_PaleTurquoise(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleTurquoise(pThis, __presult))
        }
    }
    public func get_PaleTurquoise() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PaleTurquoise(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PaleVioletRed()
    public func _n_get_PaleVioletRed(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleVioletRed(pThis, __presult))
        }
    }
    public func get_PaleVioletRed() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PaleVioletRed(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PapayaWhip()
    public func _n_get_PapayaWhip(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PapayaWhip(pThis, __presult))
        }
    }
    public func get_PapayaWhip() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PapayaWhip(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PeachPuff()
    public func _n_get_PeachPuff(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PeachPuff(pThis, __presult))
        }
    }
    public func get_PeachPuff() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PeachPuff(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Peru()
    public func _n_get_Peru(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Peru(pThis, __presult))
        }
    }
    public func get_Peru() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Peru(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Pink()
    public func _n_get_Pink(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Pink(pThis, __presult))
        }
    }
    public func get_Pink() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Pink(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Plum()
    public func _n_get_Plum(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Plum(pThis, __presult))
        }
    }
    public func get_Plum() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Plum(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_PowderBlue()
    public func _n_get_PowderBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_PowderBlue(pThis, __presult))
        }
    }
    public func get_PowderBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_PowderBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Purple()
    public func _n_get_Purple(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Purple(pThis, __presult))
        }
    }
    public func get_Purple() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Purple(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Red()
    public func _n_get_Red(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Red(pThis, __presult))
        }
    }
    public func get_Red() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Red(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_RosyBrown()
    public func _n_get_RosyBrown(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RosyBrown(pThis, __presult))
        }
    }
    public func get_RosyBrown() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_RosyBrown(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_RoyalBlue()
    public func _n_get_RoyalBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_RoyalBlue(pThis, __presult))
        }
    }
    public func get_RoyalBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_RoyalBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SaddleBrown()
    public func _n_get_SaddleBrown(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SaddleBrown(pThis, __presult))
        }
    }
    public func get_SaddleBrown() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SaddleBrown(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Salmon()
    public func _n_get_Salmon(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Salmon(pThis, __presult))
        }
    }
    public func get_Salmon() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Salmon(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SandyBrown()
    public func _n_get_SandyBrown(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SandyBrown(pThis, __presult))
        }
    }
    public func get_SandyBrown() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SandyBrown(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SeaGreen()
    public func _n_get_SeaGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SeaGreen(pThis, __presult))
        }
    }
    public func get_SeaGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SeaGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SeaShell()
    public func _n_get_SeaShell(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SeaShell(pThis, __presult))
        }
    }
    public func get_SeaShell() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SeaShell(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Sienna()
    public func _n_get_Sienna(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Sienna(pThis, __presult))
        }
    }
    public func get_Sienna() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Sienna(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Silver()
    public func _n_get_Silver(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Silver(pThis, __presult))
        }
    }
    public func get_Silver() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Silver(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SkyBlue()
    public func _n_get_SkyBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SkyBlue(pThis, __presult))
        }
    }
    public func get_SkyBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SkyBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SlateBlue()
    public func _n_get_SlateBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SlateBlue(pThis, __presult))
        }
    }
    public func get_SlateBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SlateBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SlateGray()
    public func _n_get_SlateGray(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SlateGray(pThis, __presult))
        }
    }
    public func get_SlateGray() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SlateGray(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Snow()
    public func _n_get_Snow(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Snow(pThis, __presult))
        }
    }
    public func get_Snow() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Snow(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SpringGreen()
    public func _n_get_SpringGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SpringGreen(pThis, __presult))
        }
    }
    public func get_SpringGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SpringGreen(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_SteelBlue()
    public func _n_get_SteelBlue(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_SteelBlue(pThis, __presult))
        }
    }
    public func get_SteelBlue() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_SteelBlue(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Tan()
    public func _n_get_Tan(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tan(pThis, __presult))
        }
    }
    public func get_Tan() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Tan(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Teal()
    public func _n_get_Teal(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Teal(pThis, __presult))
        }
    }
    public func get_Teal() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Teal(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Thistle()
    public func _n_get_Thistle(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Thistle(pThis, __presult))
        }
    }
    public func get_Thistle() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Thistle(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Tomato()
    public func _n_get_Tomato(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tomato(pThis, __presult))
        }
    }
    public func get_Tomato() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Tomato(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Transparent()
    public func _n_get_Transparent(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Transparent(pThis, __presult))
        }
    }
    public func get_Transparent() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Transparent(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Turquoise()
    public func _n_get_Turquoise(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Turquoise(pThis, __presult))
        }
    }
    public func get_Turquoise() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Turquoise(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Violet()
    public func _n_get_Violet(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Violet(pThis, __presult))
        }
    }
    public func get_Violet() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Violet(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Wheat()
    public func _n_get_Wheat(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Wheat(pThis, __presult))
        }
    }
    public func get_Wheat() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Wheat(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_White()
    public func _n_get_White(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_White(pThis, __presult))
        }
    }
    public func get_White() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_White(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_WhiteSmoke()
    public func _n_get_WhiteSmoke(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_WhiteSmoke(pThis, __presult))
        }
    }
    public func get_WhiteSmoke() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_WhiteSmoke(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_Yellow()
    public func _n_get_Yellow(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_Yellow(pThis, __presult))
        }
    }
    public func get_Yellow() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_Yellow(&__result);
        return __result;
    }
    // [IsSpecialName] Windows.UI.Color get_YellowGreen()
    public func _n_get_YellowGreen(_ __presult: UnsafeMutablePointer<_q_CWindows_CUI_CColor>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.get_YellowGreen(pThis, __presult))
        }
    }
    public func get_YellowGreen() throws -> WinRT.Windows.UI.Color {
        var __result : _q_CWindows_CUI_CColor = _q_CWindows_CUI_CColor(A: 0, R: 0, G: 0, B: 0);
        try self._n_get_YellowGreen(&__result);
        return __result;
    }
    public var AliceBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_AliceBlue();
        }
    }
    public var AntiqueWhite : WinRT.Windows.UI.Color {
        get throws {
            return try get_AntiqueWhite();
        }
    }
    public var Aqua : WinRT.Windows.UI.Color {
        get throws {
            return try get_Aqua();
        }
    }
    public var Aquamarine : WinRT.Windows.UI.Color {
        get throws {
            return try get_Aquamarine();
        }
    }
    public var Azure : WinRT.Windows.UI.Color {
        get throws {
            return try get_Azure();
        }
    }
    public var Beige : WinRT.Windows.UI.Color {
        get throws {
            return try get_Beige();
        }
    }
    public var Bisque : WinRT.Windows.UI.Color {
        get throws {
            return try get_Bisque();
        }
    }
    public var Black : WinRT.Windows.UI.Color {
        get throws {
            return try get_Black();
        }
    }
    public var BlanchedAlmond : WinRT.Windows.UI.Color {
        get throws {
            return try get_BlanchedAlmond();
        }
    }
    public var Blue : WinRT.Windows.UI.Color {
        get throws {
            return try get_Blue();
        }
    }
    public var BlueViolet : WinRT.Windows.UI.Color {
        get throws {
            return try get_BlueViolet();
        }
    }
    public var Brown : WinRT.Windows.UI.Color {
        get throws {
            return try get_Brown();
        }
    }
    public var BurlyWood : WinRT.Windows.UI.Color {
        get throws {
            return try get_BurlyWood();
        }
    }
    public var CadetBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_CadetBlue();
        }
    }
    public var Chartreuse : WinRT.Windows.UI.Color {
        get throws {
            return try get_Chartreuse();
        }
    }
    public var Chocolate : WinRT.Windows.UI.Color {
        get throws {
            return try get_Chocolate();
        }
    }
    public var Coral : WinRT.Windows.UI.Color {
        get throws {
            return try get_Coral();
        }
    }
    public var CornflowerBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_CornflowerBlue();
        }
    }
    public var Cornsilk : WinRT.Windows.UI.Color {
        get throws {
            return try get_Cornsilk();
        }
    }
    public var Crimson : WinRT.Windows.UI.Color {
        get throws {
            return try get_Crimson();
        }
    }
    public var Cyan : WinRT.Windows.UI.Color {
        get throws {
            return try get_Cyan();
        }
    }
    public var DarkBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkBlue();
        }
    }
    public var DarkCyan : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkCyan();
        }
    }
    public var DarkGoldenrod : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkGoldenrod();
        }
    }
    public var DarkGray : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkGray();
        }
    }
    public var DarkGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkGreen();
        }
    }
    public var DarkKhaki : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkKhaki();
        }
    }
    public var DarkMagenta : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkMagenta();
        }
    }
    public var DarkOliveGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkOliveGreen();
        }
    }
    public var DarkOrange : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkOrange();
        }
    }
    public var DarkOrchid : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkOrchid();
        }
    }
    public var DarkRed : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkRed();
        }
    }
    public var DarkSalmon : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkSalmon();
        }
    }
    public var DarkSeaGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkSeaGreen();
        }
    }
    public var DarkSlateBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkSlateBlue();
        }
    }
    public var DarkSlateGray : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkSlateGray();
        }
    }
    public var DarkTurquoise : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkTurquoise();
        }
    }
    public var DarkViolet : WinRT.Windows.UI.Color {
        get throws {
            return try get_DarkViolet();
        }
    }
    public var DeepPink : WinRT.Windows.UI.Color {
        get throws {
            return try get_DeepPink();
        }
    }
    public var DeepSkyBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_DeepSkyBlue();
        }
    }
    public var DimGray : WinRT.Windows.UI.Color {
        get throws {
            return try get_DimGray();
        }
    }
    public var DodgerBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_DodgerBlue();
        }
    }
    public var Firebrick : WinRT.Windows.UI.Color {
        get throws {
            return try get_Firebrick();
        }
    }
    public var FloralWhite : WinRT.Windows.UI.Color {
        get throws {
            return try get_FloralWhite();
        }
    }
    public var ForestGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_ForestGreen();
        }
    }
    public var Fuchsia : WinRT.Windows.UI.Color {
        get throws {
            return try get_Fuchsia();
        }
    }
    public var Gainsboro : WinRT.Windows.UI.Color {
        get throws {
            return try get_Gainsboro();
        }
    }
    public var GhostWhite : WinRT.Windows.UI.Color {
        get throws {
            return try get_GhostWhite();
        }
    }
    public var Gold : WinRT.Windows.UI.Color {
        get throws {
            return try get_Gold();
        }
    }
    public var Goldenrod : WinRT.Windows.UI.Color {
        get throws {
            return try get_Goldenrod();
        }
    }
    public var Gray : WinRT.Windows.UI.Color {
        get throws {
            return try get_Gray();
        }
    }
    public var Green : WinRT.Windows.UI.Color {
        get throws {
            return try get_Green();
        }
    }
    public var GreenYellow : WinRT.Windows.UI.Color {
        get throws {
            return try get_GreenYellow();
        }
    }
    public var Honeydew : WinRT.Windows.UI.Color {
        get throws {
            return try get_Honeydew();
        }
    }
    public var HotPink : WinRT.Windows.UI.Color {
        get throws {
            return try get_HotPink();
        }
    }
    public var IndianRed : WinRT.Windows.UI.Color {
        get throws {
            return try get_IndianRed();
        }
    }
    public var Indigo : WinRT.Windows.UI.Color {
        get throws {
            return try get_Indigo();
        }
    }
    public var Ivory : WinRT.Windows.UI.Color {
        get throws {
            return try get_Ivory();
        }
    }
    public var Khaki : WinRT.Windows.UI.Color {
        get throws {
            return try get_Khaki();
        }
    }
    public var Lavender : WinRT.Windows.UI.Color {
        get throws {
            return try get_Lavender();
        }
    }
    public var LavenderBlush : WinRT.Windows.UI.Color {
        get throws {
            return try get_LavenderBlush();
        }
    }
    public var LawnGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_LawnGreen();
        }
    }
    public var LemonChiffon : WinRT.Windows.UI.Color {
        get throws {
            return try get_LemonChiffon();
        }
    }
    public var LightBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightBlue();
        }
    }
    public var LightCoral : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightCoral();
        }
    }
    public var LightCyan : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightCyan();
        }
    }
    public var LightGoldenrodYellow : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightGoldenrodYellow();
        }
    }
    public var LightGray : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightGray();
        }
    }
    public var LightGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightGreen();
        }
    }
    public var LightPink : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightPink();
        }
    }
    public var LightSalmon : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightSalmon();
        }
    }
    public var LightSeaGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightSeaGreen();
        }
    }
    public var LightSkyBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightSkyBlue();
        }
    }
    public var LightSlateGray : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightSlateGray();
        }
    }
    public var LightSteelBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightSteelBlue();
        }
    }
    public var LightYellow : WinRT.Windows.UI.Color {
        get throws {
            return try get_LightYellow();
        }
    }
    public var Lime : WinRT.Windows.UI.Color {
        get throws {
            return try get_Lime();
        }
    }
    public var LimeGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_LimeGreen();
        }
    }
    public var Linen : WinRT.Windows.UI.Color {
        get throws {
            return try get_Linen();
        }
    }
    public var Magenta : WinRT.Windows.UI.Color {
        get throws {
            return try get_Magenta();
        }
    }
    public var Maroon : WinRT.Windows.UI.Color {
        get throws {
            return try get_Maroon();
        }
    }
    public var MediumAquamarine : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumAquamarine();
        }
    }
    public var MediumBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumBlue();
        }
    }
    public var MediumOrchid : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumOrchid();
        }
    }
    public var MediumPurple : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumPurple();
        }
    }
    public var MediumSeaGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumSeaGreen();
        }
    }
    public var MediumSlateBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumSlateBlue();
        }
    }
    public var MediumSpringGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumSpringGreen();
        }
    }
    public var MediumTurquoise : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumTurquoise();
        }
    }
    public var MediumVioletRed : WinRT.Windows.UI.Color {
        get throws {
            return try get_MediumVioletRed();
        }
    }
    public var MidnightBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_MidnightBlue();
        }
    }
    public var MintCream : WinRT.Windows.UI.Color {
        get throws {
            return try get_MintCream();
        }
    }
    public var MistyRose : WinRT.Windows.UI.Color {
        get throws {
            return try get_MistyRose();
        }
    }
    public var Moccasin : WinRT.Windows.UI.Color {
        get throws {
            return try get_Moccasin();
        }
    }
    public var NavajoWhite : WinRT.Windows.UI.Color {
        get throws {
            return try get_NavajoWhite();
        }
    }
    public var Navy : WinRT.Windows.UI.Color {
        get throws {
            return try get_Navy();
        }
    }
    public var OldLace : WinRT.Windows.UI.Color {
        get throws {
            return try get_OldLace();
        }
    }
    public var Olive : WinRT.Windows.UI.Color {
        get throws {
            return try get_Olive();
        }
    }
    public var OliveDrab : WinRT.Windows.UI.Color {
        get throws {
            return try get_OliveDrab();
        }
    }
    public var Orange : WinRT.Windows.UI.Color {
        get throws {
            return try get_Orange();
        }
    }
    public var OrangeRed : WinRT.Windows.UI.Color {
        get throws {
            return try get_OrangeRed();
        }
    }
    public var Orchid : WinRT.Windows.UI.Color {
        get throws {
            return try get_Orchid();
        }
    }
    public var PaleGoldenrod : WinRT.Windows.UI.Color {
        get throws {
            return try get_PaleGoldenrod();
        }
    }
    public var PaleGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_PaleGreen();
        }
    }
    public var PaleTurquoise : WinRT.Windows.UI.Color {
        get throws {
            return try get_PaleTurquoise();
        }
    }
    public var PaleVioletRed : WinRT.Windows.UI.Color {
        get throws {
            return try get_PaleVioletRed();
        }
    }
    public var PapayaWhip : WinRT.Windows.UI.Color {
        get throws {
            return try get_PapayaWhip();
        }
    }
    public var PeachPuff : WinRT.Windows.UI.Color {
        get throws {
            return try get_PeachPuff();
        }
    }
    public var Peru : WinRT.Windows.UI.Color {
        get throws {
            return try get_Peru();
        }
    }
    public var Pink : WinRT.Windows.UI.Color {
        get throws {
            return try get_Pink();
        }
    }
    public var Plum : WinRT.Windows.UI.Color {
        get throws {
            return try get_Plum();
        }
    }
    public var PowderBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_PowderBlue();
        }
    }
    public var Purple : WinRT.Windows.UI.Color {
        get throws {
            return try get_Purple();
        }
    }
    public var Red : WinRT.Windows.UI.Color {
        get throws {
            return try get_Red();
        }
    }
    public var RosyBrown : WinRT.Windows.UI.Color {
        get throws {
            return try get_RosyBrown();
        }
    }
    public var RoyalBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_RoyalBlue();
        }
    }
    public var SaddleBrown : WinRT.Windows.UI.Color {
        get throws {
            return try get_SaddleBrown();
        }
    }
    public var Salmon : WinRT.Windows.UI.Color {
        get throws {
            return try get_Salmon();
        }
    }
    public var SandyBrown : WinRT.Windows.UI.Color {
        get throws {
            return try get_SandyBrown();
        }
    }
    public var SeaGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_SeaGreen();
        }
    }
    public var SeaShell : WinRT.Windows.UI.Color {
        get throws {
            return try get_SeaShell();
        }
    }
    public var Sienna : WinRT.Windows.UI.Color {
        get throws {
            return try get_Sienna();
        }
    }
    public var Silver : WinRT.Windows.UI.Color {
        get throws {
            return try get_Silver();
        }
    }
    public var SkyBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_SkyBlue();
        }
    }
    public var SlateBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_SlateBlue();
        }
    }
    public var SlateGray : WinRT.Windows.UI.Color {
        get throws {
            return try get_SlateGray();
        }
    }
    public var Snow : WinRT.Windows.UI.Color {
        get throws {
            return try get_Snow();
        }
    }
    public var SpringGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_SpringGreen();
        }
    }
    public var SteelBlue : WinRT.Windows.UI.Color {
        get throws {
            return try get_SteelBlue();
        }
    }
    public var Tan : WinRT.Windows.UI.Color {
        get throws {
            return try get_Tan();
        }
    }
    public var Teal : WinRT.Windows.UI.Color {
        get throws {
            return try get_Teal();
        }
    }
    public var Thistle : WinRT.Windows.UI.Color {
        get throws {
            return try get_Thistle();
        }
    }
    public var Tomato : WinRT.Windows.UI.Color {
        get throws {
            return try get_Tomato();
        }
    }
    public var Transparent : WinRT.Windows.UI.Color {
        get throws {
            return try get_Transparent();
        }
    }
    public var Turquoise : WinRT.Windows.UI.Color {
        get throws {
            return try get_Turquoise();
        }
    }
    public var Violet : WinRT.Windows.UI.Color {
        get throws {
            return try get_Violet();
        }
    }
    public var Wheat : WinRT.Windows.UI.Color {
        get throws {
            return try get_Wheat();
        }
    }
    public var White : WinRT.Windows.UI.Color {
        get throws {
            return try get_White();
        }
    }
    public var WhiteSmoke : WinRT.Windows.UI.Color {
        get throws {
            return try get_WhiteSmoke();
        }
    }
    public var Yellow : WinRT.Windows.UI.Color {
        get throws {
            return try get_Yellow();
        }
    }
    public var YellowGreen : WinRT.Windows.UI.Color {
        get throws {
            return try get_YellowGreen();
        }
    }
} // IColorsStatics


}
