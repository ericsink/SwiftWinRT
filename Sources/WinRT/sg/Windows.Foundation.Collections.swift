// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;

extension Windows.Foundation.Collections {
// closed interface type
public class IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x0015a441, Data2: 0x4c98, Data3 : 0x5d3f, Data4 : (0x88, 0x23, 0x03, 0xe7, 0x22, 0x61, 0x5c, 0x48)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: GetView
// method not needed: IndexOf
// method not needed: SetAt
// method not needed: InsertAt
// method not needed: RemoveAt
    // void Append(Microsoft.UI.Xaml.Documents.Inline)
    public func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<WinRT.Microsoft.UI.Xaml.Documents.IInline>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
// method not needed: RemoveAtEnd
// method not needed: Clear
// method not needed: GetMany
// method not needed: ReplaceAll
} // IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline
// closed interface type
public class IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xb0525fd0, Data2: 0xf83c, Data3 : 0x54a4, Data4 : (0xbc, 0x08, 0xf2, 0x57, 0x4b, 0x42, 0xc5, 0x36)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline
// closed interface type
public class IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6d576f67, Data2: 0x1548, Data3 : 0x51c9, Data4 : (0x83, 0xa8, 0x2b, 0x54, 0x01, 0xb0, 0x28, 0x1b)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: GetView
// method not needed: IndexOf
// method not needed: SetAt
// method not needed: InsertAt
// method not needed: RemoveAt
    // void Append(Microsoft.UI.Xaml.Documents.TextHighlighter)
    public func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<WinRT.Microsoft.UI.Xaml.Documents.ITextHighlighter>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
// method not needed: RemoveAtEnd
// method not needed: Clear
// method not needed: GetMany
// method not needed: ReplaceAll
} // IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter
// closed interface type
public class IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x20f348a9, Data2: 0x4ef5, Data3 : 0x5f8f, Data4 : (0xa3, 0xce, 0xbd, 0xc1, 0xd8, 0x3a, 0x2f, 0xda)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter
// closed interface type
public class IVectorView_1_FLOAT
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x7bca64fd, Data2: 0x150c, Data3 : 0x5d50, Data4 : (0xb5, 0x6b, 0x9f, 0x4f, 0x47, 0x4c, 0x59, 0x30)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1_FLOAT
// closed interface type
public class IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xea4a1af0, Data2: 0x4286, Data3 : 0x5f11, Data4 : (0x81, 0x42, 0x6b, 0x01, 0x69, 0xf4, 0xe9, 0xde)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: GetView
// method not needed: IndexOf
// method not needed: SetAt
// method not needed: InsertAt
// method not needed: RemoveAt
    // void Append(Microsoft.UI.Xaml.UIElement)
    public func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CIUIElement>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<WinRT.Microsoft.UI.Xaml.IUIElement>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
// method not needed: RemoveAtEnd
// method not needed: Clear
// method not needed: GetMany
// method not needed: ReplaceAll
} // IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement
// closed interface type
public class IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x4fdea5ee, Data2: 0xc725, Data3 : 0x5026, Data4 : (0xba, 0x83, 0x24, 0xe5, 0x77, 0x13, 0x57, 0xc6)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement
// closed interface type
public class IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x030a9884, Data2: 0x05db, Data3 : 0x57af, Data4 : (0xae, 0x3b, 0x4c, 0x77, 0xff, 0xab, 0xfe, 0x57)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: GetView
// method not needed: IndexOf
// method not needed: SetAt
// method not needed: InsertAt
// method not needed: RemoveAt
    // void Append(Microsoft.UI.Xaml.Media.Animation.Transition)
    public func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<WinRT.Microsoft.UI.Xaml.Media.Animation.ITransition>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
// method not needed: RemoveAtEnd
// method not needed: Clear
// method not needed: GetMany
// method not needed: ReplaceAll
} // IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition
// closed interface type
public class IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6fe2632e, Data2: 0x3c2a, Data3 : 0x5087, Data4 : (0xbd, 0xbc, 0x8b, 0xc5, 0x1d, 0xa7, 0x52, 0x0b)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition
// closed interface type
public class IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xa367363d, Data2: 0xdeaf, Data3 : 0x5d2c, Data4 : (0x90, 0x9c, 0x41, 0xb0, 0xf2, 0x59, 0xba, 0x7c)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: GetView
// method not needed: IndexOf
// method not needed: SetAt
// method not needed: InsertAt
// method not needed: RemoveAt
    // void Append(Microsoft.UI.Xaml.Media.GradientStop)
    public func _n_Append(_ value : Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop>>) throws {
        return try perform(as: _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, value))
        }
    }
    public func Append(value : Optional<WinRT.Microsoft.UI.Xaml.Media.IGradientStop>) throws -> Void {
        try self._n_Append(RawPointer(value));
    }
// method not needed: RemoveAtEnd
// method not needed: Clear
// method not needed: GetMany
// method not needed: ReplaceAll
} // IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
// closed interface type
public class IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x48c5bc90, Data2: 0x5bf9, Data3 : 0x50ee, Data4 : (0xae, 0x5d, 0x07, 0x90, 0xf7, 0xb8, 0x1f, 0x49)) }
// method not needed: GetAt
// method not needed: get_Size
// method not needed: IndexOf
// method not needed: GetMany
} // IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
// closed interface type
public class IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x6b443031, Data2: 0x7f9f, Data3 : 0x5c5a, Data4 : (0x97, 0xa9, 0x3f, 0xf5, 0x57, 0xbe, 0xc5, 0x86)) }
// method not needed: First
} // IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
// closed interface type
public class IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x42d46f68, Data2: 0xdf94, Data3 : 0x58f9, Data4 : (0x8c, 0xdf, 0x3d, 0x40, 0x3e, 0x7d, 0xd1, 0xd3)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
// closed interface type
public class IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x459bb954, Data2: 0x42a3, Data3 : 0x5c74, Data4 : (0x8f, 0x87, 0x42, 0x45, 0x8f, 0x19, 0xae, 0xaa)) }
// method not needed: First
} // IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement
// closed interface type
public class IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xc5f188b0, Data2: 0xc653, Data3 : 0x5209, Data4 : (0x90, 0x9a, 0xeb, 0x97, 0xca, 0x69, 0x16, 0x17)) }
// method not needed: get_Current
// method not needed: get_HasCurrent
// method not needed: MoveNext
// method not needed: GetMany
} // IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement
}
