// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;

extension Microsoft.UI.Xaml.Media.Media3D {
// type: Microsoft.UI.Xaml.Media.Media3D.ITransform3D
// interface type
open class ITransform3D
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xafea4941, Data2: 0x2e49, Data3 : 0x533c, Data4 : (0x9f, 0x8f, 0x2c, 0x12, 0x6e, 0xf9, 0x89, 0x3a)) }
} // ITransform3D


// type: Microsoft.UI.Xaml.Media.Media3D.ITransform3DFactory
// interface type
// COMPOSITION INTERFACE
open class ITransform3DFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x9bcce0a1, Data2: 0x10ac, Data3 : 0x5319, Data4 : (0xbd, 0xf1, 0x54, 0x8d, 0x2e, 0x5a, 0xe5, 0x04)) }
    // Microsoft.UI.Xaml.Media.Media3D.Transform3D CreateInstance(System.Object, ref System.Object)
    public func _n_CreateInstance(_ baseInterface : Optional<UnsafeMutablePointer<CWinRT.IInspectable>>, _ innerInterface : UnsafeMutablePointer<Optional<UnsafeMutablePointer<CWinRT.IInspectable>>>, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D>>>?) throws {
        return try perform(as: _q_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3DFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, baseInterface, innerInterface, __presult))
        }
    }
    public func CreateInstance(baseInterface : Optional<WinRT.IInspectable>, innerInterface : inout Optional<WinRT.IInspectable>) throws -> Optional<WinRT.Microsoft.UI.Xaml.Media.Media3D.ITransform3D> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D>> = nil;
            var _tmp_out_innerInterface: Optional<UnsafeMutablePointer<CWinRT.IInspectable>> = nil;
        try self._n_CreateInstance(RawPointer(baseInterface), &_tmp_out_innerInterface, &__result);
            innerInterface = WinRT.IInspectable(consuming: _tmp_out_innerInterface);
        return WinRT.Microsoft.UI.Xaml.Media.Media3D.ITransform3D(consuming: __result);
    }
} // ITransform3DFactory


// type: Microsoft.UI.Xaml.Media.Media3D.Transform3D
// runtime class
open class Transform3D
    :
    Microsoft.UI.Xaml.DependencyObject
{
    private var _self : WinRT.Microsoft.UI.Xaml.Media.Media3D.ITransform3D;
    internal init(plok: WinRT.Microsoft.UI.Xaml.Media.Media3D.ITransform3D?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    internal func Interface() -> WinRT.Microsoft.UI.Xaml.Media.Media3D.ITransform3D { return _self; }
    // COMPOSABLE: Microsoft.UI.Xaml.Media.Media3D.ITransform3DFactory
    public override init(baseInterface : Optional<WinRT.IInspectable>, innerInterface : inout Optional<WinRT.IInspectable>) throws {
        let _af : ITransform3DFactory = try RoGetActivationFactory(HString("Microsoft.UI.Xaml.Media.Media3D.Transform3D"));
        _self = try _af.CreateInstance(baseInterface: baseInterface, innerInterface: &innerInterface)!;
        try super.init(plok: _self.QueryInterface())
    }
    public convenience init() throws {
        var _inn : Optional<WinRT.IInspectable> = nil
        try self.init(baseInterface: nil, innerInterface: &_inn)
    }
}

}
