// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.


import CWinRT;

extension Microsoft.Graphics.Canvas.UI {
// type: Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs
// runtime class
public class CanvasCreateResourcesEventArgs
    :
    WinRT.Object
{
    private var _self : WinRT.Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs;
    internal init(plok: WinRT.Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs?) throws {
        _self = plok!
        try super.init(plok: _self.QueryInterface())
    }
    internal func Interface() -> WinRT.Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs { return _self; }
    public init(createResourcesReason : WinRT.Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason) throws {
        let _af : ICanvasCreateResourcesEventArgsFactory = try RoGetActivationFactory("Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs");
        _self = try _af.Create(createResourcesReason: createResourcesReason)!;
        try super.init(plok: _self.QueryInterface())
    }
    // method not needed: get_Reason
    // method not needed: TrackAsyncAction
    // method not needed: GetTrackedAction
}

// type: Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason
// enum type
public typealias CanvasCreateResourcesReason = _q_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason;

// type: Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs
// interface type
open class ICanvasCreateResourcesEventArgs
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0xedc52108, Data2: 0xf6ba, Data3 : 0x4a09, Data4 : (0x9f, 0xa3, 0x10, 0xc9, 0x7a, 0x24, 0xe4, 0x9a)) }
// method not needed: get_Reason
// method not needed: TrackAsyncAction
// method not needed: GetTrackedAction
} // ICanvasCreateResourcesEventArgs


// type: Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgsFactory
// interface type
// ACTIVATION INTERFACE
open class ICanvasCreateResourcesEventArgsFactory
    :
    WinRT.IInspectable
{
    override public class var IID : CWinRT.IID { CWinRT.IID(Data1: 0x3a21c766, Data2: 0x0781, Data3 : 0x4389, Data4 : (0xbb, 0xc3, 0x86, 0xb1, 0xf5, 0x02, 0x2a, 0xf1)) }
    // Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesEventArgs Create(Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason)
    private func _n_Create(_ createResourcesReason : _q_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason, _ __presult: UnsafeMutablePointer<Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CUI_CICanvasCreateResourcesEventArgs>>>?) throws {
        return try perform(as: _q_CMicrosoft_CGraphics_CCanvas_CUI_CICanvasCreateResourcesEventArgsFactory.self) { pThis in
            try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, createResourcesReason, __presult))
        }
    }
    public func Create(createResourcesReason : WinRT.Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason) throws -> Optional<WinRT.Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs> {
        var __result : Optional<UnsafeMutablePointer<_q_CMicrosoft_CGraphics_CCanvas_CUI_CICanvasCreateResourcesEventArgs>> = nil;
        try self._n_Create(createResourcesReason, &__result);
        return WinRT.Microsoft.Graphics.Canvas.UI.ICanvasCreateResourcesEventArgs(consuming: __result);
    }
} // ICanvasCreateResourcesEventArgsFactory


}
extension WinRT.Microsoft.Graphics.Canvas.UI.CanvasCreateResourcesReason {
    public static var FirstTime : Self {
        get {
            return _q_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason_FirstTime;
        }
    }
    public static var NewDevice : Self {
        get {
            return _q_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason_NewDevice;
        }
    }
    public static var DpiChanged : Self {
        get {
            return _q_CMicrosoft_CGraphics_CCanvas_CUI_CCanvasCreateResourcesReason_DpiChanged;
        }
    }
}
