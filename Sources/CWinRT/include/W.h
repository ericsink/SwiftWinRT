// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.

// forward decls for delegates
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler _q_CWindows_CFoundation_CIAsyncActionCompletedHandler;
typedef struct _q_CWindows_CUI_CXaml_CIApplicationInitializationCallback _q_CWindows_CUI_CXaml_CIApplicationInitializationCallback;
typedef struct _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler;
typedef struct _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler;
typedef struct _q_CWindows_CUI_CXaml_CISuspendingEventHandler _q_CWindows_CUI_CXaml_CISuspendingEventHandler;
typedef struct _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler;
// enums
typedef enum _q_CWindows_CFoundation_CAsyncStatus
{
    _q_CWindows_CFoundation_CAsyncStatus_Canceled = 2,
    _q_CWindows_CFoundation_CAsyncStatus_Completed = 1,
    _q_CWindows_CFoundation_CAsyncStatus_Error = 3,
    _q_CWindows_CFoundation_CAsyncStatus_Started = 0,
} _q_CWindows_CFoundation_CAsyncStatus;
typedef enum _q_CWindows_CSystem_CPower_CBatteryStatus
{
    _q_CWindows_CSystem_CPower_CBatteryStatus_NotPresent = 0,
    _q_CWindows_CSystem_CPower_CBatteryStatus_Discharging = 1,
    _q_CWindows_CSystem_CPower_CBatteryStatus_Idle = 2,
    _q_CWindows_CSystem_CPower_CBatteryStatus_Charging = 3,
} _q_CWindows_CSystem_CPower_CBatteryStatus;
typedef enum _q_CWindows_CSystem_CPower_CEnergySaverStatus
{
    _q_CWindows_CSystem_CPower_CEnergySaverStatus_Disabled = 0,
    _q_CWindows_CSystem_CPower_CEnergySaverStatus_Off = 1,
    _q_CWindows_CSystem_CPower_CEnergySaverStatus_On = 2,
} _q_CWindows_CSystem_CPower_CEnergySaverStatus;
typedef enum _q_CWindows_CSystem_CPower_CPowerSupplyStatus
{
    _q_CWindows_CSystem_CPower_CPowerSupplyStatus_NotPresent = 0,
    _q_CWindows_CSystem_CPower_CPowerSupplyStatus_Inadequate = 1,
    _q_CWindows_CSystem_CPower_CPowerSupplyStatus_Adequate = 2,
} _q_CWindows_CSystem_CPower_CPowerSupplyStatus;
typedef enum _q_CWindows_CSystem_CProfile_CSystemIdentificationSource
{
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_None = 0,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Tpm = 1,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Uefi = 2,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Registry = 3,
} _q_CWindows_CSystem_CProfile_CSystemIdentificationSource;
typedef enum _q_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment
{
    _q_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment_None = 0,
    _q_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment_Auto = -1,
} _q_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment;
typedef enum _q_CWindows_CUI_CXaml_CApplicationRequiresPointerMode
{
    _q_CWindows_CUI_CXaml_CApplicationRequiresPointerMode_Auto = 0,
    _q_CWindows_CUI_CXaml_CApplicationRequiresPointerMode_WhenRequested = 1,
} _q_CWindows_CUI_CXaml_CApplicationRequiresPointerMode;
typedef enum _q_CWindows_CUI_CXaml_CApplicationTheme
{
    _q_CWindows_CUI_CXaml_CApplicationTheme_Light = 0,
    _q_CWindows_CUI_CXaml_CApplicationTheme_Dark = 1,
} _q_CWindows_CUI_CXaml_CApplicationTheme;
typedef enum _q_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation
{
    _q_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation_Application = 0,
    _q_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation_Nested = 1,
} _q_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation;
typedef enum _q_CWindows_CUI_CXaml_CFocusVisualKind
{
    _q_CWindows_CUI_CXaml_CFocusVisualKind_DottedLine = 0,
    _q_CWindows_CUI_CXaml_CFocusVisualKind_HighVisibility = 1,
    _q_CWindows_CUI_CXaml_CFocusVisualKind_Reveal = 2,
} _q_CWindows_CUI_CXaml_CFocusVisualKind;
typedef enum _q_CWindows_CWeb_CHttp_CHttpProgressStage
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_DetectingProxy = 10,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ResolvingName = 20,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ConnectingToServer = 30,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_NegotiatingSsl = 40,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingHeaders = 50,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingContent = 60,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_WaitingForResponse = 70,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingHeaders = 80,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingContent = 90,
} _q_CWindows_CWeb_CHttp_CHttpProgressStage;
typedef enum _q_CWindows_CWeb_CHttp_CHttpStatusCode
{
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Continue = 100,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SwitchingProtocols = 101,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Processing = 102,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Ok = 200,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Created = 201,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Accepted = 202,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NonAuthoritativeInformation = 203,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NoContent = 204,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ResetContent = 205,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PartialContent = 206,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultiStatus = 207,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_AlreadyReported = 208,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_IMUsed = 226,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultipleChoices = 300,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MovedPermanently = 301,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Found = 302,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SeeOther = 303,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotModified = 304,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UseProxy = 305,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TemporaryRedirect = 307,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PermanentRedirect = 308,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadRequest = 400,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Unauthorized = 401,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PaymentRequired = 402,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Forbidden = 403,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotFound = 404,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MethodNotAllowed = 405,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotAcceptable = 406,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ProxyAuthenticationRequired = 407,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestTimeout = 408,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Conflict = 409,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Gone = 410,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LengthRequired = 411,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionFailed = 412,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestEntityTooLarge = 413,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestUriTooLong = 414,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnsupportedMediaType = 415,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestedRangeNotSatisfiable = 416,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ExpectationFailed = 417,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnprocessableEntity = 422,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Locked = 423,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_FailedDependency = 424,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UpgradeRequired = 426,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionRequired = 428,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TooManyRequests = 429,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestHeaderFieldsTooLarge = 431,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InternalServerError = 500,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotImplemented = 501,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadGateway = 502,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ServiceUnavailable = 503,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_GatewayTimeout = 504,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_HttpVersionNotSupported = 505,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_VariantAlsoNegotiates = 506,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InsufficientStorage = 507,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LoopDetected = 508,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotExtended = 510,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NetworkAuthenticationRequired = 511,
} _q_CWindows_CWeb_CHttp_CHttpStatusCode;
// forward decls for value types
typedef struct _q_CWindows_CFoundation_CEventRegistrationToken _q_CWindows_CFoundation_CEventRegistrationToken;
typedef struct _q_CWindows_CFoundation_CHResult _q_CWindows_CFoundation_CHResult;
typedef struct _q_CWindows_CFoundation_CTimeSpan _q_CWindows_CFoundation_CTimeSpan;
typedef struct _q_CWindows_CWeb_CHttp_CHttpProgress _q_CWindows_CWeb_CHttp_CHttpProgress;
// forward decls for interfaces
typedef struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs;
typedef struct _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs;
typedef struct _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs;
typedef struct _q_CWindows_CApplicationModel_CISuspendingEventArgs _q_CWindows_CApplicationModel_CISuspendingEventArgs;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocument _q_CWindows_CData_CXml_CDom_CIXmlDocument;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO;
typedef struct _q_CWindows_CFoundation_CIAsyncAction _q_CWindows_CFoundation_CIAsyncAction;
typedef struct _q_CWindows_CFoundation_CIAsyncInfo _q_CWindows_CFoundation_CIAsyncInfo;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClass _q_CWindows_CFoundation_CIUriRuntimeClass;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory _q_CWindows_CFoundation_CIUriRuntimeClassFactory;
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIBuffer _q_CWindows_CStorage_CStreams_CIBuffer;
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStream _q_CWindows_CStorage_CStreams_CIOutputStream;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueController _q_CWindows_CSystem_CIDispatcherQueueController;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics _q_CWindows_CSystem_CIDispatcherQueueControllerStatics;
typedef struct _q_CWindows_CSystem_CIUser _q_CWindows_CSystem_CIUser;
typedef struct _q_CWindows_CSystem_CPower_CIPowerManagerStatics _q_CWindows_CSystem_CPower_CIPowerManagerStatics;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification _q_CWindows_CUI_CNotifications_CIToastNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory _q_CWindows_CUI_CNotifications_CIToastNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier _q_CWindows_CUI_CNotifications_CIToastNotifier;
typedef struct _q_CWindows_CUI_CXaml_CIApplication _q_CWindows_CUI_CXaml_CIApplication;
typedef struct _q_CWindows_CUI_CXaml_CIApplication2 _q_CWindows_CUI_CXaml_CIApplication2;
typedef struct _q_CWindows_CUI_CXaml_CIApplication3 _q_CWindows_CUI_CXaml_CIApplication3;
typedef struct _q_CWindows_CUI_CXaml_CIApplicationFactory _q_CWindows_CUI_CXaml_CIApplicationFactory;
typedef struct _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams;
typedef struct _q_CWindows_CUI_CXaml_CIApplicationOverrides _q_CWindows_CUI_CXaml_CIApplicationOverrides;
typedef struct _q_CWindows_CUI_CXaml_CIApplicationOverrides2 _q_CWindows_CUI_CXaml_CIApplicationOverrides2;
typedef struct _q_CWindows_CUI_CXaml_CIApplicationStatics _q_CWindows_CUI_CXaml_CIApplicationStatics;
typedef struct _q_CWindows_CUI_CXaml_CIDebugSettings _q_CWindows_CUI_CXaml_CIDebugSettings;
typedef struct _q_CWindows_CUI_CXaml_CIDependencyObject _q_CWindows_CUI_CXaml_CIDependencyObject;
typedef struct _q_CWindows_CUI_CXaml_CIDependencyObjectFactory _q_CWindows_CUI_CXaml_CIDependencyObjectFactory;
typedef struct _q_CWindows_CUI_CXaml_CIResourceDictionary _q_CWindows_CUI_CXaml_CIResourceDictionary;
typedef struct _q_CWindows_CUI_CXaml_CIResourceDictionaryFactory _q_CWindows_CUI_CXaml_CIResourceDictionaryFactory;
typedef struct _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs;
typedef struct _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClient _q_CWindows_CWeb_CHttp_CIHttpClient;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory _q_CWindows_CWeb_CHttp_CIHttpClientFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContent _q_CWindows_CWeb_CHttp_CIHttpContent;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage _q_CWindows_CWeb_CHttp_CIHttpResponseMessage;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory;
// forward decls for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean _cg_CWindows_CFoundation_IAsyncOperation_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64 _cg_CWindows_CFoundation_IReference_1_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable _cg_CWindows_CFoundation_IEventHandler_1_IInspectable;
// definition of structs for value types
struct _q_CWindows_CFoundation_CEventRegistrationToken
{
    INT64 Value;
};
struct _q_CWindows_CFoundation_CHResult
{
    INT32 Value;
};
struct _q_CWindows_CFoundation_CTimeSpan
{
    INT64 Duration;
};
struct _q_CWindows_CWeb_CHttp_CHttpProgress
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage Stage;
    UINT64 BytesSent;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToSend;
    UINT64 BytesReceived;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToReceive;
    UINT32 Retries;
};
// definitions for delegates
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* pThis, _q_CWindows_CFoundation_CIAsyncAction* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl;
struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler
{
    _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallback* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallback* pThis, _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* p);
} _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl;
struct _q_CWindows_CUI_CXaml_CIApplicationInitializationCallback
{
    _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* pThis, IInspectable* sender, _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* e);
} _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl;
struct _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler
{
    _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* pThis, IInspectable* sender, _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* e);
} _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl;
struct _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler
{
    _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CISuspendingEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CISuspendingEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CISuspendingEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CUI_CXaml_CISuspendingEventHandler* pThis, IInspectable* sender, _q_CWindows_CApplicationModel_CISuspendingEventArgs* e);
} _q_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl;
struct _q_CWindows_CUI_CXaml_CISuspendingEventHandler
{
    _q_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* pThis, IInspectable* sender, _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* e);
} _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl;
struct _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler
{
    _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl* lpVtbl;
};
// definitions for interface types
typedef struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Kind;
    void* unneeded_get_PreviousExecutionState;
    void* unneeded_get_SplashScreen;
} _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_TaskInstance;
} _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_CachedFileUpdaterUI;
} _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Files;
    void* unneeded_get_Verb;
} _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_FileOpenPickerUI;
} _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_FileSavePickerUI;
} _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Arguments;
    void* unneeded_get_TileId;
} _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_QueryText;
    void* unneeded_get_Language;
} _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_ShareOperation;
} _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs
{
    _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_GetDeferral;
} _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs
{
    _q_CWindows_CApplicationModel_CIEnteredBackgroundEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_GetDeferral;
} _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgs
{
    _q_CWindows_CApplicationModel_CILeavingBackgroundEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CApplicationModel_CISuspendingEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CApplicationModel_CISuspendingEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CApplicationModel_CISuspendingEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CApplicationModel_CISuspendingEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CApplicationModel_CISuspendingEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CApplicationModel_CISuspendingEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CApplicationModel_CISuspendingEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_SuspendingOperation;
} _q_CWindows_CApplicationModel_CISuspendingEventArgsVtbl;
struct _q_CWindows_CApplicationModel_CISuspendingEventArgs
{
    _q_CWindows_CApplicationModel_CISuspendingEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, TrustLevel* trustLevel);
    void* unneeded_get_Doctype;
    void* unneeded_get_Implementation;
    void* unneeded_get_DocumentElement;
    void* unneeded_CreateElement;
    void* unneeded_CreateDocumentFragment;
    void* unneeded_CreateTextNode;
    void* unneeded_CreateComment;
    void* unneeded_CreateProcessingInstruction;
    void* unneeded_CreateAttribute;
    void* unneeded_CreateEntityReference;
    void* unneeded_GetElementsByTagName;
    void* unneeded_CreateCDataSection;
    void* unneeded_get_DocumentUri;
    void* unneeded_CreateAttributeNS;
    void* unneeded_CreateElementNS;
    void* unneeded_GetElementById;
    void* unneeded_ImportNode;
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocument
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadXml)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, HSTRING xml);
    void* unneeded_LoadXmlWithSettings;
    void* unneeded_SaveToFileAsync;
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncActionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncAction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncAction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncAction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncAction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_q_CWindows_CFoundation_CIAsyncAction* pThis);
} _q_CWindows_CFoundation_CIAsyncActionVtbl;
struct _q_CWindows_CFoundation_CIAsyncAction
{
    _q_CWindows_CFoundation_CIAsyncActionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CAsyncStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* Cancel)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
} _q_CWindows_CFoundation_CIAsyncInfoVtbl;
struct _q_CWindows_CFoundation_CIAsyncInfo
{
    _q_CWindows_CFoundation_CIAsyncInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, TrustLevel* trustLevel);
    void* unneeded_get_AbsoluteUri;
    void* unneeded_get_DisplayUri;
    void* unneeded_get_Domain;
    void* unneeded_get_Extension;
    void* unneeded_get_Fragment;
    void* unneeded_get_Host;
    void* unneeded_get_Password;
    void* unneeded_get_Path;
    void* unneeded_get_Query;
    void* unneeded_get_QueryParsed;
    void* unneeded_get_RawUri;
    void* unneeded_get_SchemeName;
    void* unneeded_get_UserName;
    void* unneeded_get_Port;
    void* unneeded_get_Suspicious;
    void* unneeded_Equals;
    void* unneeded_CombineUri;
} _q_CWindows_CFoundation_CIUriRuntimeClassVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClass
{
    _q_CWindows_CFoundation_CIUriRuntimeClassVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING uri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithRelativeUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING baseUri, HSTRING relativeUri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory
{
    _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, TrustLevel* trustLevel);
    void* unneeded_Compare;
    void* unneeded_GenerateRandom;
    void* unneeded_GenerateRandomNumber;
    void* unneeded_CreateFromByteArray;
    void* unneeded_CopyToByteArray;
    void* unneeded_DecodeFromHexString;
    HRESULT (STDMETHODCALLTYPE* EncodeToHexString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    void* unneeded_DecodeFromBase64String;
    HRESULT (STDMETHODCALLTYPE* EncodeToBase64String)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    void* unneeded_ConvertStringToBinary;
    void* unneeded_ConvertBinaryToString;
} _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl;
struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics
{
    _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIBuffer* This, TrustLevel* trustLevel);
    void* unneeded_get_Capacity;
    void* unneeded_get_Length;
    void* unneeded_put_Length;
} _q_CWindows_CStorage_CStreams_CIBufferVtbl;
struct _q_CWindows_CStorage_CStreams_CIBuffer
{
    _q_CWindows_CStorage_CStreams_CIBufferVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, TrustLevel* trustLevel);
    void* unneeded_WriteAsync;
    HRESULT (STDMETHODCALLTYPE* FlushAsync)(_q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
} _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIOutputStream
{
    _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueController* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueController* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueController* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueController* This, TrustLevel* trustLevel);
    void* unneeded_get_DispatcherQueue;
    HRESULT (STDMETHODCALLTYPE* ShutdownQueueAsync)(_q_CWindows_CSystem_CIDispatcherQueueController* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueController
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateOnDedicatedThread)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* pThis, _q_CWindows_CSystem_CIDispatcherQueueController** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIUser* This, TrustLevel* trustLevel);
    void* unneeded_get_NonRoamableId;
    void* unneeded_get_AuthenticationStatus;
    void* unneeded_get_Type;
    void* unneeded_GetPropertyAsync;
    void* unneeded_GetPropertiesAsync;
    void* unneeded_GetPictureAsync;
} _q_CWindows_CSystem_CIUserVtbl;
struct _q_CWindows_CSystem_CIUser
{
    _q_CWindows_CSystem_CIUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EnergySaverStatus)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CSystem_CPower_CEnergySaverStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_EnergySaverStatusChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnergySaverStatusChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_BatteryStatus)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CSystem_CPower_CBatteryStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_BatteryStatusChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_BatteryStatusChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_PowerSupplyStatus)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CSystem_CPower_CPowerSupplyStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_PowerSupplyStatusChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_PowerSupplyStatusChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_RemainingChargePercent)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* add_RemainingChargePercentChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RemainingChargePercentChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_RemainingDischargeTime)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* add_RemainingDischargeTimeChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RemainingDischargeTimeChanged)(_q_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl;
struct _q_CWindows_CSystem_CPower_CIPowerManagerStatics
{
    _q_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CSystem_CProfile_CSystemIdentificationSource* __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForPublisher)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForUser)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, TrustLevel* trustLevel);
    void* unneeded_get_Content;
    void* unneeded_put_ExpirationTime;
    void* unneeded_get_ExpirationTime;
    void* unneeded_add_Dismissed;
    void* unneeded_remove_Dismissed;
    void* unneeded_add_Activated;
    void* unneeded_remove_Activated;
    void* unneeded_add_Failed;
    void* unneeded_remove_Failed;
} _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotification)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, TrustLevel* trustLevel);
    void* unneeded_CreateToastNotifier;
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifierWithId)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, HSTRING applicationId, _q_CWindows_CUI_CNotifications_CIToastNotifier** __pret);
    void* unneeded_GetTemplateContent;
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Show)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* notification);
    void* unneeded_Hide;
    void* unneeded_get_Setting;
    void* unneeded_AddToSchedule;
    void* unneeded_RemoveFromSchedule;
    void* unneeded_GetScheduledToastNotifications;
} _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier
{
    _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplication* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplication* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplication* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplication* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplication* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplication* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Resources)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CIResourceDictionary** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Resources)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* get_DebugSettings)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CIDebugSettings** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestedTheme)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CApplicationTheme* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequestedTheme)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CApplicationTheme value);
    HRESULT (STDMETHODCALLTYPE* add_UnhandledException)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UnhandledException)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Suspending)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CUI_CXaml_CISuspendingEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Suspending)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Resuming)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Resuming)(_q_CWindows_CUI_CXaml_CIApplication* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Exit)(_q_CWindows_CUI_CXaml_CIApplication* pThis);
} _q_CWindows_CUI_CXaml_CIApplicationVtbl;
struct _q_CWindows_CUI_CXaml_CIApplication
{
    _q_CWindows_CUI_CXaml_CIApplicationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplication2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplication2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplication2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplication2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplication2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplication2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplication2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualKind)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CUI_CXaml_CFocusVisualKind* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualKind)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CUI_CXaml_CFocusVisualKind value);
    HRESULT (STDMETHODCALLTYPE* get_RequiresPointerMode)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CUI_CXaml_CApplicationRequiresPointerMode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequiresPointerMode)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CUI_CXaml_CApplicationRequiresPointerMode value);
    HRESULT (STDMETHODCALLTYPE* add_LeavingBackground)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CUI_CXaml_CILeavingBackgroundEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_LeavingBackground)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnteredBackground)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CUI_CXaml_CIEnteredBackgroundEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnteredBackground)(_q_CWindows_CUI_CXaml_CIApplication2* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CWindows_CUI_CXaml_CIApplication2Vtbl;
struct _q_CWindows_CUI_CXaml_CIApplication2
{
    _q_CWindows_CUI_CXaml_CIApplication2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplication3Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplication3* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplication3* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplication3* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplication3* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplication3* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplication3* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_HighContrastAdjustment)(_q_CWindows_CUI_CXaml_CIApplication3* pThis, _q_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HighContrastAdjustment)(_q_CWindows_CUI_CXaml_CIApplication3* pThis, _q_CWindows_CUI_CXaml_CApplicationHighContrastAdjustment value);
} _q_CWindows_CUI_CXaml_CIApplication3Vtbl;
struct _q_CWindows_CUI_CXaml_CIApplication3
{
    _q_CWindows_CUI_CXaml_CIApplication3Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplicationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplicationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplicationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplicationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplicationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplicationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CUI_CXaml_CIApplicationFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CWindows_CUI_CXaml_CIApplication** __pret);
} _q_CWindows_CUI_CXaml_CIApplicationFactoryVtbl;
struct _q_CWindows_CUI_CXaml_CIApplicationFactory
{
    _q_CWindows_CUI_CXaml_CIApplicationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams* This, TrustLevel* trustLevel);
} _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl;
struct _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams
{
    _q_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationOverridesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnLaunched)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnFileActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnSearchActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnShareTargetActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnFileOpenPickerActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnFileSavePickerActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnCachedFileUpdaterActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs* args);
    HRESULT (STDMETHODCALLTYPE* OnWindowCreated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides* pThis, _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* args);
} _q_CWindows_CUI_CXaml_CIApplicationOverridesVtbl;
struct _q_CWindows_CUI_CXaml_CIApplicationOverrides
{
    _q_CWindows_CUI_CXaml_CIApplicationOverridesVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationOverrides2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnBackgroundActivated)(_q_CWindows_CUI_CXaml_CIApplicationOverrides2* pThis, _q_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs* args);
} _q_CWindows_CUI_CXaml_CIApplicationOverrides2Vtbl;
struct _q_CWindows_CUI_CXaml_CIApplicationOverrides2
{
    _q_CWindows_CUI_CXaml_CIApplicationOverrides2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIApplicationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIApplicationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIApplicationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIApplicationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIApplicationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIApplicationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIApplicationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(_q_CWindows_CUI_CXaml_CIApplicationStatics* pThis, _q_CWindows_CUI_CXaml_CIApplication** __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CWindows_CUI_CXaml_CIApplicationStatics* pThis, _q_CWindows_CUI_CXaml_CIApplicationInitializationCallback* callback);
    HRESULT (STDMETHODCALLTYPE* LoadComponent)(_q_CWindows_CUI_CXaml_CIApplicationStatics* pThis, IInspectable* component, _q_CWindows_CFoundation_CIUriRuntimeClass* resourceLocator);
    HRESULT (STDMETHODCALLTYPE* LoadComponentWithResourceLocation)(_q_CWindows_CUI_CXaml_CIApplicationStatics* pThis, IInspectable* component, _q_CWindows_CFoundation_CIUriRuntimeClass* resourceLocator, _q_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation componentResourceLocation);
} _q_CWindows_CUI_CXaml_CIApplicationStaticsVtbl;
struct _q_CWindows_CUI_CXaml_CIApplicationStatics
{
    _q_CWindows_CUI_CXaml_CIApplicationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIDebugSettingsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIDebugSettings* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIDebugSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIDebugSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIDebugSettings* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIDebugSettings* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIDebugSettings* This, TrustLevel* trustLevel);
    void* unneeded_get_EnableFrameRateCounter;
    void* unneeded_put_EnableFrameRateCounter;
    void* unneeded_get_IsBindingTracingEnabled;
    void* unneeded_put_IsBindingTracingEnabled;
    void* unneeded_get_IsOverdrawHeatMapEnabled;
    void* unneeded_put_IsOverdrawHeatMapEnabled;
    void* unneeded_add_BindingFailed;
    void* unneeded_remove_BindingFailed;
} _q_CWindows_CUI_CXaml_CIDebugSettingsVtbl;
struct _q_CWindows_CUI_CXaml_CIDebugSettings
{
    _q_CWindows_CUI_CXaml_CIDebugSettingsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIDependencyObjectVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIDependencyObject* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIDependencyObject* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIDependencyObject* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIDependencyObject* This, TrustLevel* trustLevel);
    void* unneeded_GetValue;
    void* unneeded_SetValue;
    void* unneeded_ClearValue;
    void* unneeded_ReadLocalValue;
    void* unneeded_GetAnimationBaseValue;
    void* unneeded_get_Dispatcher;
} _q_CWindows_CUI_CXaml_CIDependencyObjectVtbl;
struct _q_CWindows_CUI_CXaml_CIDependencyObject
{
    _q_CWindows_CUI_CXaml_CIDependencyObjectVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CUI_CXaml_CIDependencyObjectFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CWindows_CUI_CXaml_CIDependencyObject** __pret);
} _q_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl;
struct _q_CWindows_CUI_CXaml_CIDependencyObjectFactory
{
    _q_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIResourceDictionaryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIResourceDictionary* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIResourceDictionary* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIResourceDictionary* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIResourceDictionary* This, TrustLevel* trustLevel);
    void* unneeded_get_Source;
    void* unneeded_put_Source;
    void* unneeded_get_MergedDictionaries;
    void* unneeded_get_ThemeDictionaries;
} _q_CWindows_CUI_CXaml_CIResourceDictionaryVtbl;
struct _q_CWindows_CUI_CXaml_CIResourceDictionary
{
    _q_CWindows_CUI_CXaml_CIResourceDictionaryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CWindows_CUI_CXaml_CIResourceDictionaryFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CWindows_CUI_CXaml_CIResourceDictionary** __pret);
} _q_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl;
struct _q_CWindows_CUI_CXaml_CIResourceDictionaryFactory
{
    _q_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Exception;
    void* unneeded_get_Message;
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
} _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl;
struct _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs
{
    _q_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Window;
} _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl;
struct _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgs
{
    _q_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, TrustLevel* trustLevel);
    void* unneeded_SendRequestAsync;
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, TrustLevel* trustLevel);
    void* unneeded_DeleteAsync;
    HRESULT (STDMETHODCALLTYPE* GetAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    void* unneeded_GetWithOptionAsync;
    void* unneeded_GetBufferAsync;
    void* unneeded_GetInputStreamAsync;
    void* unneeded_GetStringAsync;
    void* unneeded_PostAsync;
    void* unneeded_PutAsync;
    void* unneeded_SendRequestAsync;
    void* unneeded_SendRequestWithOptionAsync;
    void* unneeded_get_DefaultRequestHeaders;
} _q_CWindows_CWeb_CHttp_CIHttpClientVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClient
{
    _q_CWindows_CWeb_CHttp_CIHttpClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* pThis, _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* filter, _q_CWindows_CWeb_CHttp_CIHttpClient** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, TrustLevel* trustLevel);
    void* unneeded_get_Headers;
    void* unneeded_BufferAllAsync;
    void* unneeded_ReadAsBufferAsync;
    void* unneeded_ReadAsInputStreamAsync;
    HRESULT (STDMETHODCALLTYPE* ReadAsStringAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64** __pret);
    void* unneeded_TryComputeLength;
    void* unneeded_WriteToStreamAsync;
} _q_CWindows_CWeb_CHttp_CIHttpContentVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpContent
{
    _q_CWindows_CWeb_CHttp_CIHttpContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    void* unneeded_put_Content;
    void* unneeded_get_Headers;
    void* unneeded_get_IsSuccessStatusCode;
    void* unneeded_get_ReasonPhrase;
    void* unneeded_put_ReasonPhrase;
    void* unneeded_get_RequestMessage;
    void* unneeded_put_RequestMessage;
    void* unneeded_get_Source;
    void* unneeded_put_Source;
    void* unneeded_get_StatusCode;
    void* unneeded_put_StatusCode;
    void* unneeded_get_Version;
    void* unneeded_put_Version;
    HRESULT (STDMETHODCALLTYPE* EnsureSuccessStatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* pThis, _q_CWindows_CWeb_CHttp_CHttpStatusCode statusCode, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl* lpVtbl;
};
// definitions for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, boolean* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_UINT64
{
    _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, HSTRING* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* pThis, IInspectable* sender, IInspectable* args);
} _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable
{
    _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl* lpVtbl;
};
