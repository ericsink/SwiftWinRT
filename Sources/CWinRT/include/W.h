// this file is automatically generated.
// if you modify it by hand, your changes will probably be lost.

// forward decls for delegates
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler;
typedef struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler;
typedef struct _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler;
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler _q_CWindows_CFoundation_CIAsyncActionCompletedHandler;
// enums
typedef enum _q_CMicrosoft_CUI_CXaml_CApplicationHighContrastAdjustment
{
    _q_CMicrosoft_CUI_CXaml_CApplicationHighContrastAdjustment_None = 0,
    _q_CMicrosoft_CUI_CXaml_CApplicationHighContrastAdjustment_Auto = -1,
} _q_CMicrosoft_CUI_CXaml_CApplicationHighContrastAdjustment;
typedef enum _q_CMicrosoft_CUI_CXaml_CApplicationTheme
{
    _q_CMicrosoft_CUI_CXaml_CApplicationTheme_Light = 0,
    _q_CMicrosoft_CUI_CXaml_CApplicationTheme_Dark = 1,
} _q_CMicrosoft_CUI_CXaml_CApplicationTheme;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_CBackgroundSizing
{
    _q_CMicrosoft_CUI_CXaml_CControls_CBackgroundSizing_InnerBorderEdge = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_CBackgroundSizing_OuterBorderEdge = 1,
} _q_CMicrosoft_CUI_CXaml_CControls_CBackgroundSizing;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_CClickMode
{
    _q_CMicrosoft_CUI_CXaml_CControls_CClickMode_Release = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_CClickMode_Press = 1,
    _q_CMicrosoft_CUI_CXaml_CControls_CClickMode_Hover = 2,
} _q_CMicrosoft_CUI_CXaml_CControls_CClickMode;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_COrientation
{
    _q_CMicrosoft_CUI_CXaml_CControls_COrientation_Vertical = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_COrientation_Horizontal = 1,
} _q_CMicrosoft_CUI_CXaml_CControls_COrientation;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation_Application = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation_Nested = 1,
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo_StepValues = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo_Ticks = 1,
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment_Near = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment_Center = 1,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment_Far = 2,
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment;
typedef enum _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_None = 0,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_TopLeft = 1,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_BottomRight = 2,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_Outside = 3,
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement_Inline = 4,
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement;
typedef enum _q_CMicrosoft_CUI_CXaml_CFocusVisualKind
{
    _q_CMicrosoft_CUI_CXaml_CFocusVisualKind_DottedLine = 0,
    _q_CMicrosoft_CUI_CXaml_CFocusVisualKind_HighVisibility = 1,
    _q_CMicrosoft_CUI_CXaml_CFocusVisualKind_Reveal = 2,
} _q_CMicrosoft_CUI_CXaml_CFocusVisualKind;
typedef enum _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy
{
    _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy_MaxHeight = 0,
    _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy_BlockLineHeight = 1,
    _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy_BaselineToBaseline = 2,
} _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy;
typedef enum _q_CMicrosoft_CUI_CXaml_COpticalMarginAlignment
{
    _q_CMicrosoft_CUI_CXaml_COpticalMarginAlignment_None = 0,
    _q_CMicrosoft_CUI_CXaml_COpticalMarginAlignment_TrimSideBearings = 1,
} _q_CMicrosoft_CUI_CXaml_COpticalMarginAlignment;
typedef enum _q_CMicrosoft_CUI_CXaml_CTextAlignment
{
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_Center = 0,
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_Left = 1,
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_Start = 1,
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_Right = 2,
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_End = 2,
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_Justify = 3,
    _q_CMicrosoft_CUI_CXaml_CTextAlignment_DetectFromContent = 4,
} _q_CMicrosoft_CUI_CXaml_CTextAlignment;
typedef enum _q_CMicrosoft_CUI_CXaml_CTextLineBounds
{
    _q_CMicrosoft_CUI_CXaml_CTextLineBounds_Full = 0,
    _q_CMicrosoft_CUI_CXaml_CTextLineBounds_TrimToCapHeight = 1,
    _q_CMicrosoft_CUI_CXaml_CTextLineBounds_TrimToBaseline = 2,
    _q_CMicrosoft_CUI_CXaml_CTextLineBounds_Tight = 3,
} _q_CMicrosoft_CUI_CXaml_CTextLineBounds;
typedef enum _q_CMicrosoft_CUI_CXaml_CTextReadingOrder
{
    _q_CMicrosoft_CUI_CXaml_CTextReadingOrder_Default = 0,
    _q_CMicrosoft_CUI_CXaml_CTextReadingOrder_UseFlowDirection = 0,
    _q_CMicrosoft_CUI_CXaml_CTextReadingOrder_DetectFromContent = 1,
} _q_CMicrosoft_CUI_CXaml_CTextReadingOrder;
typedef enum _q_CMicrosoft_CUI_CXaml_CTextTrimming
{
    _q_CMicrosoft_CUI_CXaml_CTextTrimming_None = 0,
    _q_CMicrosoft_CUI_CXaml_CTextTrimming_CharacterEllipsis = 1,
    _q_CMicrosoft_CUI_CXaml_CTextTrimming_WordEllipsis = 2,
    _q_CMicrosoft_CUI_CXaml_CTextTrimming_Clip = 3,
} _q_CMicrosoft_CUI_CXaml_CTextTrimming;
typedef enum _q_CMicrosoft_CUI_CXaml_CTextWrapping
{
    _q_CMicrosoft_CUI_CXaml_CTextWrapping_NoWrap = 1,
    _q_CMicrosoft_CUI_CXaml_CTextWrapping_Wrap = 2,
    _q_CMicrosoft_CUI_CXaml_CTextWrapping_WrapWholeWords = 3,
} _q_CMicrosoft_CUI_CXaml_CTextWrapping;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus_NotPresent = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus_Discharging = 1,
    _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus_Idle = 2,
    _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus_Charging = 3,
} _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CDisplayStatus
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CDisplayStatus_Off = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CDisplayStatus_On = 1,
    _q_CMicrosoft_CWindows_CSystem_CPower_CDisplayStatus_Dimmed = 2,
} _q_CMicrosoft_CWindows_CSystem_CPower_CDisplayStatus;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_BatterySaver = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_BetterBattery = 1,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_Balanced = 2,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_HighPerformance = 3,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_MaxPerformance = 4,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_GameMode = 5,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode_MixedReality = 6,
} _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus_Uninitialized = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus_Disabled = 1,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus_Off = 2,
    _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus_On = 3,
} _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSourceKind
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSourceKind_AC = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSourceKind_DC = 1,
} _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSourceKind;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSupplyStatus
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSupplyStatus_NotPresent = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSupplyStatus_Inadequate = 1,
    _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSupplyStatus_Adequate = 2,
} _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSupplyStatus;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus_Uninitialized = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus_Entering = 1,
    _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus_AutoResume = 2,
    _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus_ManualResume = 3,
} _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus;
typedef enum _q_CMicrosoft_CWindows_CSystem_CPower_CUserPresenceStatus
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CUserPresenceStatus_Present = 0,
    _q_CMicrosoft_CWindows_CSystem_CPower_CUserPresenceStatus_Absent = 1,
} _q_CMicrosoft_CWindows_CSystem_CPower_CUserPresenceStatus;
typedef enum _q_CWindows_CFoundation_CAsyncStatus
{
    _q_CWindows_CFoundation_CAsyncStatus_Canceled = 2,
    _q_CWindows_CFoundation_CAsyncStatus_Completed = 1,
    _q_CWindows_CFoundation_CAsyncStatus_Error = 3,
    _q_CWindows_CFoundation_CAsyncStatus_Started = 0,
} _q_CWindows_CFoundation_CAsyncStatus;
typedef enum _q_CWindows_CSystem_CProfile_CSystemIdentificationSource
{
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_None = 0,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Tpm = 1,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Uefi = 2,
    _q_CWindows_CSystem_CProfile_CSystemIdentificationSource_Registry = 3,
} _q_CWindows_CSystem_CProfile_CSystemIdentificationSource;
typedef enum _q_CWindows_CUI_CText_CFontStretch
{
    _q_CWindows_CUI_CText_CFontStretch_Undefined = 0,
    _q_CWindows_CUI_CText_CFontStretch_UltraCondensed = 1,
    _q_CWindows_CUI_CText_CFontStretch_ExtraCondensed = 2,
    _q_CWindows_CUI_CText_CFontStretch_Condensed = 3,
    _q_CWindows_CUI_CText_CFontStretch_SemiCondensed = 4,
    _q_CWindows_CUI_CText_CFontStretch_Normal = 5,
    _q_CWindows_CUI_CText_CFontStretch_SemiExpanded = 6,
    _q_CWindows_CUI_CText_CFontStretch_Expanded = 7,
    _q_CWindows_CUI_CText_CFontStretch_ExtraExpanded = 8,
    _q_CWindows_CUI_CText_CFontStretch_UltraExpanded = 9,
} _q_CWindows_CUI_CText_CFontStretch;
typedef enum _q_CWindows_CUI_CText_CFontStyle
{
    _q_CWindows_CUI_CText_CFontStyle_Normal = 0,
    _q_CWindows_CUI_CText_CFontStyle_Oblique = 1,
    _q_CWindows_CUI_CText_CFontStyle_Italic = 2,
} _q_CWindows_CUI_CText_CFontStyle;
typedef enum _q_CWindows_CUI_CText_CTextDecorations
{
    _q_CWindows_CUI_CText_CTextDecorations_None = 0,
    _q_CWindows_CUI_CText_CTextDecorations_Underline = 1,
    _q_CWindows_CUI_CText_CTextDecorations_Strikethrough = 2,
} _q_CWindows_CUI_CText_CTextDecorations;
typedef enum _q_CWindows_CWeb_CHttp_CHttpProgressStage
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_DetectingProxy = 10,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ResolvingName = 20,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ConnectingToServer = 30,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_NegotiatingSsl = 40,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingHeaders = 50,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_SendingContent = 60,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_WaitingForResponse = 70,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingHeaders = 80,
    _q_CWindows_CWeb_CHttp_CHttpProgressStage_ReceivingContent = 90,
} _q_CWindows_CWeb_CHttp_CHttpProgressStage;
typedef enum _q_CWindows_CWeb_CHttp_CHttpStatusCode
{
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_None = 0,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Continue = 100,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SwitchingProtocols = 101,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Processing = 102,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Ok = 200,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Created = 201,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Accepted = 202,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NonAuthoritativeInformation = 203,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NoContent = 204,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ResetContent = 205,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PartialContent = 206,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultiStatus = 207,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_AlreadyReported = 208,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_IMUsed = 226,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MultipleChoices = 300,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MovedPermanently = 301,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Found = 302,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_SeeOther = 303,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotModified = 304,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UseProxy = 305,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TemporaryRedirect = 307,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PermanentRedirect = 308,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadRequest = 400,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Unauthorized = 401,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PaymentRequired = 402,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Forbidden = 403,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotFound = 404,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_MethodNotAllowed = 405,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotAcceptable = 406,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ProxyAuthenticationRequired = 407,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestTimeout = 408,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Conflict = 409,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Gone = 410,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LengthRequired = 411,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionFailed = 412,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestEntityTooLarge = 413,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestUriTooLong = 414,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnsupportedMediaType = 415,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestedRangeNotSatisfiable = 416,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ExpectationFailed = 417,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UnprocessableEntity = 422,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_Locked = 423,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_FailedDependency = 424,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_UpgradeRequired = 426,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_PreconditionRequired = 428,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_TooManyRequests = 429,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_RequestHeaderFieldsTooLarge = 431,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InternalServerError = 500,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotImplemented = 501,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_BadGateway = 502,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_ServiceUnavailable = 503,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_GatewayTimeout = 504,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_HttpVersionNotSupported = 505,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_VariantAlsoNegotiates = 506,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_InsufficientStorage = 507,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_LoopDetected = 508,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NotExtended = 510,
    _q_CWindows_CWeb_CHttp_CHttpStatusCode_NetworkAuthenticationRequired = 511,
} _q_CWindows_CWeb_CHttp_CHttpStatusCode;
// forward decls for value types
typedef struct _q_CMicrosoft_CUI_CXaml_CCornerRadius _q_CMicrosoft_CUI_CXaml_CCornerRadius;
typedef struct _q_CMicrosoft_CUI_CXaml_CThickness _q_CMicrosoft_CUI_CXaml_CThickness;
typedef struct _q_CWindows_CFoundation_CEventRegistrationToken _q_CWindows_CFoundation_CEventRegistrationToken;
typedef struct _q_CWindows_CFoundation_CHResult _q_CWindows_CFoundation_CHResult;
typedef struct _q_CWindows_CFoundation_CPoint _q_CWindows_CFoundation_CPoint;
typedef struct _q_CWindows_CFoundation_CRect _q_CWindows_CFoundation_CRect;
typedef struct _q_CWindows_CFoundation_CTimeSpan _q_CWindows_CFoundation_CTimeSpan;
typedef struct _q_CWindows_CUI_CColor _q_CWindows_CUI_CColor;
typedef struct _q_CWindows_CUI_CText_CFontWeight _q_CWindows_CUI_CText_CFontWeight;
typedef struct _q_CWindows_CWeb_CHttp_CHttpProgress _q_CWindows_CWeb_CHttp_CHttpProgress;
// forward decls for interfaces
typedef struct _q_CMicrosoft_CUI_CComposition_CICompositionBrush _q_CMicrosoft_CUI_CComposition_CICompositionBrush;
typedef struct _q_CMicrosoft_CUI_CComposition_CICompositionObject _q_CMicrosoft_CUI_CComposition_CICompositionObject;
typedef struct _q_CMicrosoft_CUI_CComposition_CICompositor _q_CMicrosoft_CUI_CComposition_CICompositor;
typedef struct _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue;
typedef struct _q_CMicrosoft_CUI_CIColors _q_CMicrosoft_CUI_CIColors;
typedef struct _q_CMicrosoft_CUI_CIColorsStatics _q_CMicrosoft_CUI_CIColorsStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIButton _q_CMicrosoft_CUI_CXaml_CControls_CIButton;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory _q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics _q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControl _q_CMicrosoft_CUI_CXaml_CControls_CIContentControl;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIControl _q_CMicrosoft_CUI_CXaml_CControls_CIControl;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory _q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel _q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanel _q_CMicrosoft_CUI_CXaml_CControls_CIPanel;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory _q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics _q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CISlider _q_CMicrosoft_CUI_CXaml_CControls_CISlider;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory _q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics _q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CITextBlock _q_CMicrosoft_CUI_CXaml_CControls_CITextBlock;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection _q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo;
typedef struct _q_CMicrosoft_CUI_CXaml_CData_CIValueConverter _q_CMicrosoft_CUI_CXaml_CData_CIValueConverter;
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CIInline _q_CMicrosoft_CUI_CXaml_CDocuments_CIInline;
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement _q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement;
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter;
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer;
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplication _q_CMicrosoft_CUI_CXaml_CIApplication;
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationFactory _q_CMicrosoft_CUI_CXaml_CIApplicationFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams;
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationOverrides _q_CMicrosoft_CUI_CXaml_CIApplicationOverrides;
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationStatics _q_CMicrosoft_CUI_CXaml_CIApplicationStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CIBrushTransition _q_CMicrosoft_CUI_CXaml_CIBrushTransition;
typedef struct _q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory _q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIDataTemplate _q_CMicrosoft_CUI_CXaml_CIDataTemplate;
typedef struct _q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory _q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIDebugSettings _q_CMicrosoft_CUI_CXaml_CIDebugSettings;
typedef struct _q_CMicrosoft_CUI_CXaml_CIDependencyObject _q_CMicrosoft_CUI_CXaml_CIDependencyObject;
typedef struct _q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory _q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIDependencyProperty _q_CMicrosoft_CUI_CXaml_CIDependencyProperty;
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkElement _q_CMicrosoft_CUI_CXaml_CIFrameworkElement;
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory _q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate;
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CInput_CICommand _q_CMicrosoft_CUI_CXaml_CInput_CICommand;
typedef struct _q_CMicrosoft_CUI_CXaml_CIResourceDictionary _q_CMicrosoft_CUI_CXaml_CIResourceDictionary;
typedef struct _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIUIElement _q_CMicrosoft_CUI_CXaml_CIUIElement;
typedef struct _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindow _q_CMicrosoft_CUI_CXaml_CIWindow;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowEventArgs _q_CMicrosoft_CUI_CXaml_CIWindowEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowFactory _q_CMicrosoft_CUI_CXaml_CIWindowFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowStatics _q_CMicrosoft_CUI_CXaml_CIWindowStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory;
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics;
typedef struct _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics;
typedef struct _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2 _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocument _q_CWindows_CData_CXml_CDom_CIXmlDocument;
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO;
typedef struct _q_CWindows_CFoundation_CIAsyncAction _q_CWindows_CFoundation_CIAsyncAction;
typedef struct _q_CWindows_CFoundation_CIAsyncInfo _q_CWindows_CFoundation_CIAsyncInfo;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClass _q_CWindows_CFoundation_CIUriRuntimeClass;
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory _q_CWindows_CFoundation_CIUriRuntimeClassFactory;
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics;
typedef struct _q_CWindows_CStorage_CStreams_CIBuffer _q_CWindows_CStorage_CStreams_CIBuffer;
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStream _q_CWindows_CStorage_CStreams_CIOutputStream;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueController _q_CWindows_CSystem_CIDispatcherQueueController;
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics _q_CWindows_CSystem_CIDispatcherQueueControllerStatics;
typedef struct _q_CWindows_CSystem_CIUser _q_CWindows_CSystem_CIUser;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo;
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics;
typedef struct _q_CWindows_CUI_CCore_CICoreDispatcher _q_CWindows_CUI_CCore_CICoreDispatcher;
typedef struct _q_CWindows_CUI_CCore_CICoreWindow _q_CWindows_CUI_CCore_CICoreWindow;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotification _q_CWindows_CUI_CNotifications_CIToastNotification;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory _q_CWindows_CUI_CNotifications_CIToastNotificationFactory;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics;
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifier _q_CWindows_CUI_CNotifications_CIToastNotifier;
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClient _q_CWindows_CWeb_CHttp_CIHttpClient;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory _q_CWindows_CWeb_CHttp_CIHttpClientFactory;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContent _q_CWindows_CWeb_CHttp_CIHttpContent;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage _q_CWindows_CWeb_CHttp_CIHttpResponseMessage;
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory;
// forward decls for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean _cg_CWindows_CFoundation_IAsyncOperation_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64 _cg_CWindows_CFoundation_IReference_1_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64 _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64;
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable _cg_CWindows_CFoundation_IEventHandler_1_IInspectable;
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode;
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter;
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition;
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop;
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement;
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement;
// definition of structs for value types
struct _q_CMicrosoft_CUI_CXaml_CCornerRadius
{
    DOUBLE TopLeft;
    DOUBLE TopRight;
    DOUBLE BottomRight;
    DOUBLE BottomLeft;
};
struct _q_CMicrosoft_CUI_CXaml_CThickness
{
    DOUBLE Left;
    DOUBLE Top;
    DOUBLE Right;
    DOUBLE Bottom;
};
struct _q_CWindows_CFoundation_CEventRegistrationToken
{
    INT64 Value;
};
struct _q_CWindows_CFoundation_CHResult
{
    INT32 Value;
};
struct _q_CWindows_CFoundation_CPoint
{
    FLOAT X;
    FLOAT Y;
};
struct _q_CWindows_CFoundation_CRect
{
    FLOAT X;
    FLOAT Y;
    FLOAT Width;
    FLOAT Height;
};
struct _q_CWindows_CFoundation_CTimeSpan
{
    INT64 Duration;
};
struct _q_CWindows_CUI_CColor
{
    UINT8 A;
    UINT8 R;
    UINT8 G;
    UINT8 B;
};
struct _q_CWindows_CUI_CText_CFontWeight
{
    UINT16 Weight;
};
struct _q_CWindows_CWeb_CHttp_CHttpProgress
{
    _q_CWindows_CWeb_CHttp_CHttpProgressStage Stage;
    UINT64 BytesSent;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToSend;
    UINT64 BytesReceived;
    _cg_CWindows_CFoundation_IReference_1_UINT64* TotalBytesToReceive;
    UINT32 Retries;
};
// definitions for delegates
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback* pThis, _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* p);
} _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback
{
    _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* e);
} _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* e);
} _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandlerVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler
{
    _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* e);
} _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler
{
    _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_q_CWindows_CFoundation_CIAsyncActionCompletedHandler* pThis, _q_CWindows_CFoundation_CIAsyncAction* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl;
struct _q_CWindows_CFoundation_CIAsyncActionCompletedHandler
{
    _q_CWindows_CFoundation_CIAsyncActionCompletedHandlerVtbl* lpVtbl;
};
// definitions for interface types
typedef struct _q_CMicrosoft_CUI_CComposition_CICompositionBrushVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CComposition_CICompositionBrush* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CComposition_CICompositionBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CComposition_CICompositionBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CComposition_CICompositionBrush* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CComposition_CICompositionBrush* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CComposition_CICompositionBrush* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CComposition_CICompositionBrushVtbl;
struct _q_CMicrosoft_CUI_CComposition_CICompositionBrush
{
    _q_CMicrosoft_CUI_CComposition_CICompositionBrushVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CComposition_CICompositionObjectVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CComposition_CICompositionObject* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CComposition_CICompositionObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CComposition_CICompositionObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CComposition_CICompositionObject* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CComposition_CICompositionObject* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CComposition_CICompositionObject* This, TrustLevel* trustLevel);
    void* unneeded_get_Compositor;
    void* unneeded_get_Properties;
    void* unneeded_StartAnimation;
    void* unneeded_StopAnimation;
} _q_CMicrosoft_CUI_CComposition_CICompositionObjectVtbl;
struct _q_CMicrosoft_CUI_CComposition_CICompositionObject
{
    _q_CMicrosoft_CUI_CComposition_CICompositionObjectVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CComposition_CICompositorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CComposition_CICompositor* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CComposition_CICompositor* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CComposition_CICompositor* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CComposition_CICompositor* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CComposition_CICompositor* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CComposition_CICompositor* This, TrustLevel* trustLevel);
    void* unneeded_CreateColorKeyFrameAnimation;
    void* unneeded_CreateColorBrush;
    void* unneeded_CreateColorBrushWithColor;
    void* unneeded_CreateContainerVisual;
    void* unneeded_CreateCubicBezierEasingFunction;
    void* unneeded_CreateEffectFactory;
    void* unneeded_CreateEffectFactoryWithProperties;
    void* unneeded_CreateExpressionAnimation;
    void* unneeded_CreateExpressionAnimationWithExpression;
    void* unneeded_CreateInsetClip;
    void* unneeded_CreateInsetClipWithInsets;
    void* unneeded_CreateLinearEasingFunction;
    void* unneeded_CreatePropertySet;
    void* unneeded_CreateQuaternionKeyFrameAnimation;
    void* unneeded_CreateScalarKeyFrameAnimation;
    void* unneeded_CreateScopedBatch;
    void* unneeded_CreateSpriteVisual;
    void* unneeded_CreateSurfaceBrush;
    void* unneeded_CreateSurfaceBrushWithSurface;
    void* unneeded_CreateVector2KeyFrameAnimation;
    void* unneeded_CreateVector3KeyFrameAnimation;
    void* unneeded_CreateVector4KeyFrameAnimation;
    void* unneeded_GetCommitBatch;
} _q_CMicrosoft_CUI_CComposition_CICompositorVtbl;
struct _q_CMicrosoft_CUI_CComposition_CICompositor
{
    _q_CMicrosoft_CUI_CComposition_CICompositorVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueueVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue* This, TrustLevel* trustLevel);
    void* unneeded_CreateTimer;
    void* unneeded_TryEnqueue;
    void* unneeded_TryEnqueueWithPriority;
    void* unneeded_add_ShutdownStarting;
    void* unneeded_remove_ShutdownStarting;
    void* unneeded_add_ShutdownCompleted;
    void* unneeded_remove_ShutdownCompleted;
} _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueueVtbl;
struct _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue
{
    _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueueVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CIColorsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CIColors* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CIColors* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CIColors* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CIColors* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CIColors* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CIColors* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CIColorsVtbl;
struct _q_CMicrosoft_CUI_CIColors
{
    _q_CMicrosoft_CUI_CIColorsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CIColorsStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CIColorsStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CIColorsStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CIColorsStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CIColorsStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CIColorsStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CIColorsStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AliceBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AntiqueWhite)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Aqua)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Aquamarine)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Azure)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Beige)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Bisque)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Black)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BlanchedAlmond)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Blue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BlueViolet)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Brown)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_BurlyWood)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CadetBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Chartreuse)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Chocolate)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Coral)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_CornflowerBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Cornsilk)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Crimson)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Cyan)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkCyan)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkGoldenrod)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkGray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkKhaki)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkMagenta)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkOliveGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkOrange)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkOrchid)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkRed)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkSalmon)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkSeaGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkSlateBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkSlateGray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkTurquoise)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DarkViolet)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeepPink)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DeepSkyBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DimGray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_DodgerBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Firebrick)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_FloralWhite)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ForestGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Fuchsia)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gainsboro)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_GhostWhite)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gold)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Goldenrod)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Gray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Green)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_GreenYellow)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Honeydew)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HotPink)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IndianRed)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Indigo)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Ivory)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Khaki)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Lavender)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LavenderBlush)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LawnGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LemonChiffon)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightCoral)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightCyan)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightGoldenrodYellow)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightGray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightPink)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightSalmon)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightSeaGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightSkyBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightSlateGray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightSteelBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LightYellow)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Lime)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_LimeGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Linen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Magenta)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Maroon)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumAquamarine)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumOrchid)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumPurple)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumSeaGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumSlateBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumSpringGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumTurquoise)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MediumVioletRed)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MidnightBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MintCream)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_MistyRose)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Moccasin)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_NavajoWhite)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Navy)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OldLace)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Olive)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OliveDrab)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Orange)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_OrangeRed)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Orchid)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PaleGoldenrod)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PaleGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PaleTurquoise)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PaleVioletRed)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PapayaWhip)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PeachPuff)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Peru)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Pink)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Plum)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_PowderBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Purple)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Red)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RosyBrown)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_RoyalBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SaddleBrown)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Salmon)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SandyBrown)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SeaGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SeaShell)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Sienna)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Silver)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SkyBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SlateBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SlateGray)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Snow)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SpringGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SteelBlue)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Tan)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Teal)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Thistle)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Tomato)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Transparent)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Turquoise)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Violet)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Wheat)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_White)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_WhiteSmoke)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Yellow)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* get_YellowGreen)(_q_CMicrosoft_CUI_CIColorsStatics* pThis, _q_CWindows_CUI_CColor* __pret);
} _q_CMicrosoft_CUI_CIColorsStaticsVtbl;
struct _q_CMicrosoft_CUI_CIColorsStatics
{
    _q_CMicrosoft_CUI_CIColorsStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Flyout)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Flyout)(_q_CMicrosoft_CUI_CXaml_CControls_CIButton* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
} _q_CMicrosoft_CUI_CXaml_CControls_CIButtonVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIButton
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIButtonVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CIButton** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIButtonFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FlyoutProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIButtonStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIButtonStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIButtonStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Content)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplate)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _q_CMicrosoft_CUI_CXaml_CIDataTemplate** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplate)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _q_CMicrosoft_CUI_CXaml_CIDataTemplate* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateSelector)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentTemplateSelector)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTransitions)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ContentTransitions)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateRoot)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControl* pThis, _q_CMicrosoft_CUI_CXaml_CIUIElement** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControl
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CIContentControl** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverridesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnContentChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* pThis, IInspectable* oldContent, IInspectable* newContent);
    HRESULT (STDMETHODCALLTYPE* OnContentTemplateChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* pThis, _q_CMicrosoft_CUI_CXaml_CIDataTemplate* oldContentTemplate, _q_CMicrosoft_CUI_CXaml_CIDataTemplate* newContentTemplate);
    HRESULT (STDMETHODCALLTYPE* OnContentTemplateSelectorChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* oldContentTemplateSelector, _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* newContentTemplateSelector);
} _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverridesVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverrides
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlOverridesVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ContentProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentTemplateSelectorProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentTransitionsProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIContentControlStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
    void* unneeded_get_CursorLeft;
    void* unneeded_get_CursorTop;
} _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIControlVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIControl* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIControl* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIControl* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIControl* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIControl* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIControl* This, TrustLevel* trustLevel);
    void* unneeded_get_IsFocusEngagementEnabled;
    void* unneeded_put_IsFocusEngagementEnabled;
    void* unneeded_get_IsFocusEngaged;
    void* unneeded_put_IsFocusEngaged;
    void* unneeded_get_RequiresPointer;
    void* unneeded_put_RequiresPointer;
    void* unneeded_get_FontSize;
    void* unneeded_put_FontSize;
    void* unneeded_get_FontFamily;
    void* unneeded_put_FontFamily;
    void* unneeded_get_FontWeight;
    void* unneeded_put_FontWeight;
    void* unneeded_get_FontStyle;
    void* unneeded_put_FontStyle;
    void* unneeded_get_FontStretch;
    void* unneeded_put_FontStretch;
    void* unneeded_get_CharacterSpacing;
    void* unneeded_put_CharacterSpacing;
    void* unneeded_get_Foreground;
    void* unneeded_put_Foreground;
    void* unneeded_get_IsTextScaleFactorEnabled;
    void* unneeded_put_IsTextScaleFactorEnabled;
    void* unneeded_get_IsEnabled;
    void* unneeded_put_IsEnabled;
    void* unneeded_get_TabNavigation;
    void* unneeded_put_TabNavigation;
    void* unneeded_get_Template;
    void* unneeded_put_Template;
    void* unneeded_get_Padding;
    void* unneeded_put_Padding;
    void* unneeded_get_HorizontalContentAlignment;
    void* unneeded_put_HorizontalContentAlignment;
    void* unneeded_get_VerticalContentAlignment;
    void* unneeded_put_VerticalContentAlignment;
    void* unneeded_get_Background;
    void* unneeded_put_Background;
    void* unneeded_get_BackgroundSizing;
    void* unneeded_put_BackgroundSizing;
    void* unneeded_get_BorderThickness;
    void* unneeded_put_BorderThickness;
    void* unneeded_get_BorderBrush;
    void* unneeded_put_BorderBrush;
    void* unneeded_get_DefaultStyleResourceUri;
    void* unneeded_put_DefaultStyleResourceUri;
    void* unneeded_get_ElementSoundMode;
    void* unneeded_put_ElementSoundMode;
    void* unneeded_get_CornerRadius;
    void* unneeded_put_CornerRadius;
    void* unneeded_add_FocusEngaged;
    void* unneeded_remove_FocusEngaged;
    void* unneeded_add_FocusDisengaged;
    void* unneeded_remove_FocusDisengaged;
    void* unneeded_add_IsEnabledChanged;
    void* unneeded_remove_IsEnabledChanged;
    void* unneeded_RemoveFocusEngagement;
    void* unneeded_ApplyTemplate;
} _q_CMicrosoft_CUI_CXaml_CControls_CIControlVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIControl
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIControlVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIControlFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CIControl** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIControlFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIControlFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIControlFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector* This, TrustLevel* trustLevel);
    void* unneeded_SelectTemplate;
    void* unneeded_SelectTemplateForItem;
} _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelector** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIDataTemplateSelectorFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetInsertionIndexes)(_q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel* pThis, _q_CWindows_CFoundation_CPoint position, INT32* first, INT32* second);
} _q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanelVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanel
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIInsertionPanelVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Children)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Background)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Background)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_IsItemsHost)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenTransitions)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ChildrenTransitions)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundTransition)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _q_CMicrosoft_CUI_CXaml_CIBrushTransition** __pret);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundTransition)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanel* pThis, _q_CMicrosoft_CUI_CXaml_CIBrushTransition* value);
} _q_CMicrosoft_CUI_CXaml_CControls_CIPanelVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanel
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIPanelVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CIPanel** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIPanelFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsItemsHostProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ChildrenTransitionsProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIPanelStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIPanelStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIPanelStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IntermediateValue)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IntermediateValue)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_StepFrequency)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_StepFrequency)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_SnapsTo)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo* __pret);
    HRESULT (STDMETHODCALLTYPE* put_SnapsTo)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSliderSnapsTo value);
    HRESULT (STDMETHODCALLTYPE* get_TickFrequency)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TickFrequency)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_TickPlacement)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TickPlacement)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CTickPlacement value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CControls_COrientation* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_IsDirectionReversed)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsDirectionReversed)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_IsThumbToolTipEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsThumbToolTipEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ThumbToolTipValueConverter)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CData_CIValueConverter** __pret);
    HRESULT (STDMETHODCALLTYPE* put_ThumbToolTipValueConverter)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* value);
    HRESULT (STDMETHODCALLTYPE* get_Header)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Header)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplate)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CIDataTemplate** __pret);
    HRESULT (STDMETHODCALLTYPE* put_HeaderTemplate)(_q_CMicrosoft_CUI_CXaml_CControls_CISlider* pThis, _q_CMicrosoft_CUI_CXaml_CIDataTemplate* value);
} _q_CMicrosoft_CUI_CXaml_CControls_CISliderVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CISlider
{
    _q_CMicrosoft_CUI_CXaml_CControls_CISliderVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CISlider** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CISliderFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CISliderFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_IntermediateValueProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_StepFrequencyProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SnapsToProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TickFrequencyProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TickPlacementProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsDirectionReversedProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsThumbToolTipEnabledProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ThumbToolTipValueConverterProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HeaderProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HeaderTemplateProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CISliderStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CISliderStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CISliderStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AreScrollSnapPointsRegular)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_AreScrollSnapPointsRegular)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CControls_COrientation* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Orientation)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CControls_COrientation value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundSizing)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CBackgroundSizing* __pret);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundSizing)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CBackgroundSizing value);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrush)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush** __pret);
    HRESULT (STDMETHODCALLTYPE* put_BorderBrush)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_BorderThickness)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CThickness* __pret);
    HRESULT (STDMETHODCALLTYPE* put_BorderThickness)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadius)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CCornerRadius* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CornerRadius)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CCornerRadius value);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CThickness* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, _q_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_Spacing)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Spacing)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel* pThis, DOUBLE value);
} _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanel** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AreScrollSnapPointsRegularProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OrientationProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundSizingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BorderBrushProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BorderThicknessProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CornerRadiusProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SpacingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIStackPanelStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FontSize)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FontSize)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_FontFamily)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily** __pret);
    HRESULT (STDMETHODCALLTYPE* put_FontFamily)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CFontWeight* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FontWeight)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CFontWeight value);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CFontStyle* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FontStyle)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CFontStyle value);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CFontStretch* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FontStretch)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CFontStretch value);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacing)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_CharacterSpacing)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_TextWrapping)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextWrapping* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TextWrapping)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextWrapping value);
    HRESULT (STDMETHODCALLTYPE* get_TextTrimming)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextTrimming* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TextTrimming)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextTrimming value);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignment)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextAlignment* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TextAlignment)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_Text)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Text)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_Inlines)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Padding)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CThickness* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Padding)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CThickness value);
    HRESULT (STDMETHODCALLTYPE* get_LineHeight)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_LineHeight)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, DOUBLE value);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategy)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy* __pret);
    HRESULT (STDMETHODCALLTYPE* put_LineStackingStrategy)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CLineStackingStrategy value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSelectionEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsTextSelectionEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_SelectedText)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentStart)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ContentEnd)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionStart)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionEnd)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_BaselineOffset)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColor)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SelectionHighlightColor)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLines)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* put_MaxLines)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBounds)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextLineBounds* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TextLineBounds)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextLineBounds value);
    HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignment)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_COpticalMarginAlignment* __pret);
    HRESULT (STDMETHODCALLTYPE* put_OpticalMarginAlignment)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_COpticalMarginAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsColorFontEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrder)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextReadingOrder* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TextReadingOrder)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextReadingOrder value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_IsTextScaleFactorEnabled)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* get_TextDecorations)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CTextDecorations* __pret);
    HRESULT (STDMETHODCALLTYPE* put_TextDecorations)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CUI_CText_CTextDecorations value);
    HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmed)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignment)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextAlignment* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HorizontalTextAlignment)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CTextAlignment value);
    HRESULT (STDMETHODCALLTYPE* get_TextHighlighters)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyout)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** __pret);
    HRESULT (STDMETHODCALLTYPE* put_SelectionFlyout)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* value);
    HRESULT (STDMETHODCALLTYPE* add_SelectionChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_SelectionChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ContextMenuOpening)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CIContextMenuOpeningEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_ContextMenuOpening)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_IsTextTrimmedChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_IsTextTrimmedChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SelectAll)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis);
    HRESULT (STDMETHODCALLTYPE* Select)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* start, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* end);
    HRESULT (STDMETHODCALLTYPE* GetAlphaMask)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis, _q_CMicrosoft_CUI_CComposition_CICompositionBrush** __pret);
    HRESULT (STDMETHODCALLTYPE* CopySelectionToClipboard)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* pThis);
} _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CITextBlock
{
    _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_FontSizeProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FontFamilyProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FontWeightProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FontStyleProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_FontStretchProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CharacterSpacingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_ForegroundProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextWrappingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextTrimmingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextAlignmentProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_PaddingProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LineHeightProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_LineStackingStrategyProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsTextSelectionEnabledProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectedTextProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionHighlightColorProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_MaxLinesProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextLineBoundsProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OpticalMarginAlignmentProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsColorFontEnabledProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextReadingOrderProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsTextScaleFactorEnabledProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_TextDecorationsProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsTextTrimmedProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_HorizontalTextAlignmentProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_SelectionFlyoutProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CITextBlockStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollectionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Move)(_q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection* pThis, UINT32 oldIndex, UINT32 newIndex);
} _q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollectionVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollection
{
    _q_CMicrosoft_CUI_CXaml_CControls_CIUIElementCollectionVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ClickMode)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CClickMode* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ClickMode)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CClickMode value);
    HRESULT (STDMETHODCALLTYPE* get_IsPointerOver)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsPressed)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Command)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, _q_CMicrosoft_CUI_CXaml_CInput_CICommand** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Command)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, _q_CMicrosoft_CUI_CXaml_CInput_CICommand* value);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameter)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, IInspectable** __pret);
    HRESULT (STDMETHODCALLTYPE* put_CommandParameter)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, IInspectable* value);
    HRESULT (STDMETHODCALLTYPE* add_Click)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, _q_CMicrosoft_CUI_CXaml_CIRoutedEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Click)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBase** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ClickModeProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsPointerOverProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_IsPressedProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CommandProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_CommandParameterProperty)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStatics
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIButtonBaseStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase* This, TrustLevel* trustLevel);
    void* unneeded_get_Placement;
    void* unneeded_put_Placement;
    void* unneeded_get_Target;
    void* unneeded_get_AllowFocusOnInteraction;
    void* unneeded_put_AllowFocusOnInteraction;
    void* unneeded_get_LightDismissOverlayMode;
    void* unneeded_put_LightDismissOverlayMode;
    void* unneeded_get_AllowFocusWhenDisabled;
    void* unneeded_put_AllowFocusWhenDisabled;
    void* unneeded_get_ShowMode;
    void* unneeded_put_ShowMode;
    void* unneeded_get_InputDevicePrefersPrimaryCommands;
    void* unneeded_get_AreOpenCloseAnimationsEnabled;
    void* unneeded_put_AreOpenCloseAnimationsEnabled;
    void* unneeded_get_ShouldConstrainToRootBounds;
    void* unneeded_put_ShouldConstrainToRootBounds;
    void* unneeded_get_IsConstrainedToRootBounds;
    void* unneeded_get_ElementSoundMode;
    void* unneeded_put_ElementSoundMode;
    void* unneeded_get_OverlayInputPassThroughElement;
    void* unneeded_put_OverlayInputPassThroughElement;
    void* unneeded_get_IsOpen;
    void* unneeded_get_XamlRoot;
    void* unneeded_put_XamlRoot;
    void* unneeded_add_Opened;
    void* unneeded_remove_Opened;
    void* unneeded_add_Closed;
    void* unneeded_remove_Closed;
    void* unneeded_add_Opening;
    void* unneeded_remove_Opening;
    void* unneeded_add_Closing;
    void* unneeded_remove_Closing;
    void* unneeded_ShowAt;
    void* unneeded_ShowAtWithOptions;
    void* unneeded_Hide;
    void* unneeded_TryInvokeKeyboardAccelerator;
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBaseFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase* This, TrustLevel* trustLevel);
    void* unneeded_get_Minimum;
    void* unneeded_put_Minimum;
    void* unneeded_get_Maximum;
    void* unneeded_put_Maximum;
    void* unneeded_get_SmallChange;
    void* unneeded_put_SmallChange;
    void* unneeded_get_LargeChange;
    void* unneeded_put_LargeChange;
    void* unneeded_get_Value;
    void* unneeded_put_Value;
    void* unneeded_add_ValueChanged;
    void* unneeded_remove_ValueChanged;
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBase** __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactory
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIRangeBaseFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_AreHorizontalSnapPointsRegular)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_AreVerticalSnapPointsRegular)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* add_HorizontalSnapPointsChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_HorizontalSnapPointsChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VerticalSnapPointsChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_VerticalSnapPointsChanged)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetIrregularSnapPoints)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, _q_CMicrosoft_CUI_CXaml_CControls_COrientation orientation, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment alignment, _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT** __pret);
    HRESULT (STDMETHODCALLTYPE* GetRegularSnapPoints)(_q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo* pThis, _q_CMicrosoft_CUI_CXaml_CControls_COrientation orientation, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CSnapPointsAlignment alignment, FLOAT* offset, FLOAT* __pret);
} _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfoVtbl;
struct _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfo
{
    _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CIScrollSnapPointsInfoVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CData_CIValueConverterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CData_CIValueConverter* This, TrustLevel* trustLevel);
    void* unneeded_Convert;
    void* unneeded_ConvertBack;
} _q_CMicrosoft_CUI_CXaml_CData_CIValueConverterVtbl;
struct _q_CMicrosoft_CUI_CXaml_CData_CIValueConverter
{
    _q_CMicrosoft_CUI_CXaml_CData_CIValueConverterVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineVtbl;
struct _q_CMicrosoft_CUI_CXaml_CDocuments_CIInline
{
    _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CDocuments_CIInline** __pret);
} _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactory
{
    _q_CMicrosoft_CUI_CXaml_CDocuments_CIInlineFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement* This, TrustLevel* trustLevel);
    void* unneeded_get_Name;
    void* unneeded_get_FontSize;
    void* unneeded_put_FontSize;
    void* unneeded_get_FontFamily;
    void* unneeded_put_FontFamily;
    void* unneeded_get_FontWeight;
    void* unneeded_put_FontWeight;
    void* unneeded_get_FontStyle;
    void* unneeded_put_FontStyle;
    void* unneeded_get_FontStretch;
    void* unneeded_put_FontStretch;
    void* unneeded_get_CharacterSpacing;
    void* unneeded_put_CharacterSpacing;
    void* unneeded_get_Foreground;
    void* unneeded_put_Foreground;
    void* unneeded_get_Language;
    void* unneeded_put_Language;
    void* unneeded_get_IsTextScaleFactorEnabled;
    void* unneeded_put_IsTextScaleFactorEnabled;
    void* unneeded_get_TextDecorations;
    void* unneeded_put_TextDecorations;
    void* unneeded_get_ContentStart;
    void* unneeded_get_ContentEnd;
    void* unneeded_get_ElementStart;
    void* unneeded_get_ElementEnd;
    void* unneeded_get_AllowFocusOnInteraction;
    void* unneeded_put_AllowFocusOnInteraction;
    void* unneeded_get_AccessKey;
    void* unneeded_put_AccessKey;
    void* unneeded_get_ExitDisplayModeOnAccessKeyInvoked;
    void* unneeded_put_ExitDisplayModeOnAccessKeyInvoked;
    void* unneeded_get_IsAccessKeyScope;
    void* unneeded_put_IsAccessKeyScope;
    void* unneeded_get_AccessKeyScopeOwner;
    void* unneeded_put_AccessKeyScopeOwner;
    void* unneeded_get_KeyTipPlacementMode;
    void* unneeded_put_KeyTipPlacementMode;
    void* unneeded_get_KeyTipHorizontalOffset;
    void* unneeded_put_KeyTipHorizontalOffset;
    void* unneeded_get_KeyTipVerticalOffset;
    void* unneeded_put_KeyTipVerticalOffset;
    void* unneeded_get_XamlRoot;
    void* unneeded_put_XamlRoot;
    void* unneeded_add_AccessKeyDisplayRequested;
    void* unneeded_remove_AccessKeyDisplayRequested;
    void* unneeded_add_AccessKeyDisplayDismissed;
    void* unneeded_remove_AccessKeyDisplayDismissed;
    void* unneeded_add_AccessKeyInvoked;
    void* unneeded_remove_AccessKeyInvoked;
    void* unneeded_FindName;
} _q_CMicrosoft_CUI_CXaml_CDocuments_CITextElementVtbl;
struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextElement
{
    _q_CMicrosoft_CUI_CXaml_CDocuments_CITextElementVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* This, TrustLevel* trustLevel);
    void* unneeded_get_Ranges;
    void* unneeded_get_Foreground;
    void* unneeded_put_Foreground;
    void* unneeded_get_Background;
    void* unneeded_put_Background;
} _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterVtbl;
struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter
{
    _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter** __pret);
} _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactory
{
    _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighterFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer* This, TrustLevel* trustLevel);
    void* unneeded_get_Parent;
    void* unneeded_get_VisualParent;
    void* unneeded_get_LogicalDirection;
    void* unneeded_get_Offset;
    void* unneeded_GetCharacterRect;
    void* unneeded_GetPositionAtOffset;
} _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointerVtbl;
struct _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointer
{
    _q_CMicrosoft_CUI_CXaml_CDocuments_CITextPointerVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIApplication* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIApplication* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIApplication* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIApplication* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIApplication* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIApplication* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Resources)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CIResourceDictionary** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Resources)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CIResourceDictionary* value);
    HRESULT (STDMETHODCALLTYPE* get_DebugSettings)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CIDebugSettings** __pret);
    HRESULT (STDMETHODCALLTYPE* get_RequestedTheme)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CApplicationTheme* __pret);
    HRESULT (STDMETHODCALLTYPE* put_RequestedTheme)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CApplicationTheme value);
    HRESULT (STDMETHODCALLTYPE* get_FocusVisualKind)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CFocusVisualKind* __pret);
    HRESULT (STDMETHODCALLTYPE* put_FocusVisualKind)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CFocusVisualKind value);
    HRESULT (STDMETHODCALLTYPE* get_HighContrastAdjustment)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CApplicationHighContrastAdjustment* __pret);
    HRESULT (STDMETHODCALLTYPE* put_HighContrastAdjustment)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CApplicationHighContrastAdjustment value);
    HRESULT (STDMETHODCALLTYPE* add_UnhandledException)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventHandler* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UnhandledException)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Exit)(_q_CMicrosoft_CUI_CXaml_CIApplication* pThis);
} _q_CMicrosoft_CUI_CXaml_CIApplicationVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIApplication
{
    _q_CMicrosoft_CUI_CXaml_CIApplicationVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIApplicationFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIApplication** __pret);
} _q_CMicrosoft_CUI_CXaml_CIApplicationFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIApplicationFactory
{
    _q_CMicrosoft_CUI_CXaml_CIApplicationFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParams
{
    _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationOverridesVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* OnLaunched)(_q_CMicrosoft_CUI_CXaml_CIApplicationOverrides* pThis, _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* args);
} _q_CMicrosoft_CUI_CXaml_CIApplicationOverridesVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIApplicationOverrides
{
    _q_CMicrosoft_CUI_CXaml_CIApplicationOverridesVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIApplicationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIApplication** __pret);
    HRESULT (STDMETHODCALLTYPE* Start)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIApplicationInitializationCallback* callback);
    HRESULT (STDMETHODCALLTYPE* LoadComponent)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* pThis, IInspectable* component, _q_CWindows_CFoundation_CIUriRuntimeClass* resourceLocator);
    HRESULT (STDMETHODCALLTYPE* LoadComponentWithResourceLocation)(_q_CMicrosoft_CUI_CXaml_CIApplicationStatics* pThis, IInspectable* component, _q_CWindows_CFoundation_CIUriRuntimeClass* resourceLocator, _q_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation componentResourceLocation);
} _q_CMicrosoft_CUI_CXaml_CIApplicationStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIApplicationStatics
{
    _q_CMicrosoft_CUI_CXaml_CIApplicationStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIBrushTransitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIBrushTransition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIBrushTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIBrushTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIBrushTransition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIBrushTransition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIBrushTransition* This, TrustLevel* trustLevel);
    void* unneeded_get_Duration;
    void* unneeded_put_Duration;
} _q_CMicrosoft_CUI_CXaml_CIBrushTransitionVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIBrushTransition
{
    _q_CMicrosoft_CUI_CXaml_CIBrushTransitionVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIBrushTransition** __pret);
} _q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactory
{
    _q_CMicrosoft_CUI_CXaml_CIBrushTransitionFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIDataTemplateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIDataTemplate* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIDataTemplate* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIDataTemplate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIDataTemplate* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIDataTemplate* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIDataTemplate* This, TrustLevel* trustLevel);
    void* unneeded_LoadContent;
} _q_CMicrosoft_CUI_CXaml_CIDataTemplateVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIDataTemplate
{
    _q_CMicrosoft_CUI_CXaml_CIDataTemplateVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIDataTemplateFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIDataTemplate** __pret);
} _q_CMicrosoft_CUI_CXaml_CIDataTemplateFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIDataTemplateFactory
{
    _q_CMicrosoft_CUI_CXaml_CIDataTemplateFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIDebugSettingsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIDebugSettings* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIDebugSettings* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIDebugSettings* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIDebugSettings* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIDebugSettings* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIDebugSettings* This, TrustLevel* trustLevel);
    void* unneeded_get_EnableFrameRateCounter;
    void* unneeded_put_EnableFrameRateCounter;
    void* unneeded_get_IsBindingTracingEnabled;
    void* unneeded_put_IsBindingTracingEnabled;
    void* unneeded_get_IsTextPerformanceVisualizationEnabled;
    void* unneeded_put_IsTextPerformanceVisualizationEnabled;
    void* unneeded_get_FailFastOnErrors;
    void* unneeded_put_FailFastOnErrors;
    void* unneeded_add_BindingFailed;
    void* unneeded_remove_BindingFailed;
} _q_CMicrosoft_CUI_CXaml_CIDebugSettingsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIDebugSettings
{
    _q_CMicrosoft_CUI_CXaml_CIDebugSettingsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIDependencyObjectVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIDependencyObject* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIDependencyObject* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIDependencyObject* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIDependencyObject* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIDependencyObject* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIDependencyObject* This, TrustLevel* trustLevel);
    void* unneeded_GetValue;
    void* unneeded_SetValue;
    void* unneeded_ClearValue;
    void* unneeded_ReadLocalValue;
    void* unneeded_GetAnimationBaseValue;
    void* unneeded_RegisterPropertyChangedCallback;
    void* unneeded_UnregisterPropertyChangedCallback;
    void* unneeded_get_Dispatcher;
    void* unneeded_get_DispatcherQueue;
} _q_CMicrosoft_CUI_CXaml_CIDependencyObjectVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIDependencyObject
{
    _q_CMicrosoft_CUI_CXaml_CIDependencyObjectVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIDependencyObject** __pret);
} _q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactory
{
    _q_CMicrosoft_CUI_CXaml_CIDependencyObjectFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIDependencyPropertyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIDependencyProperty* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIDependencyProperty* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIDependencyProperty* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIDependencyProperty* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIDependencyProperty* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIDependencyProperty* This, TrustLevel* trustLevel);
    void* unneeded_GetMetadata;
} _q_CMicrosoft_CUI_CXaml_CIDependencyPropertyVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIDependencyProperty
{
    _q_CMicrosoft_CUI_CXaml_CIDependencyPropertyVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElement* This, TrustLevel* trustLevel);
    void* unneeded_get_Triggers;
    void* unneeded_get_Resources;
    void* unneeded_put_Resources;
    void* unneeded_get_Tag;
    void* unneeded_put_Tag;
    void* unneeded_get_Language;
    void* unneeded_put_Language;
    void* unneeded_get_ActualWidth;
    void* unneeded_get_ActualHeight;
    void* unneeded_get_Width;
    void* unneeded_put_Width;
    void* unneeded_get_Height;
    void* unneeded_put_Height;
    void* unneeded_get_MinWidth;
    void* unneeded_put_MinWidth;
    void* unneeded_get_MaxWidth;
    void* unneeded_put_MaxWidth;
    void* unneeded_get_MinHeight;
    void* unneeded_put_MinHeight;
    void* unneeded_get_MaxHeight;
    void* unneeded_put_MaxHeight;
    void* unneeded_get_HorizontalAlignment;
    void* unneeded_put_HorizontalAlignment;
    void* unneeded_get_VerticalAlignment;
    void* unneeded_put_VerticalAlignment;
    void* unneeded_get_Margin;
    void* unneeded_put_Margin;
    void* unneeded_get_Name;
    void* unneeded_put_Name;
    void* unneeded_get_BaseUri;
    void* unneeded_get_DataContext;
    void* unneeded_put_DataContext;
    void* unneeded_get_AllowFocusOnInteraction;
    void* unneeded_put_AllowFocusOnInteraction;
    void* unneeded_get_FocusVisualMargin;
    void* unneeded_put_FocusVisualMargin;
    void* unneeded_get_FocusVisualSecondaryThickness;
    void* unneeded_put_FocusVisualSecondaryThickness;
    void* unneeded_get_FocusVisualPrimaryThickness;
    void* unneeded_put_FocusVisualPrimaryThickness;
    void* unneeded_get_FocusVisualSecondaryBrush;
    void* unneeded_put_FocusVisualSecondaryBrush;
    void* unneeded_get_FocusVisualPrimaryBrush;
    void* unneeded_put_FocusVisualPrimaryBrush;
    void* unneeded_get_AllowFocusWhenDisabled;
    void* unneeded_put_AllowFocusWhenDisabled;
    void* unneeded_get_Style;
    void* unneeded_put_Style;
    void* unneeded_get_Parent;
    void* unneeded_get_FlowDirection;
    void* unneeded_put_FlowDirection;
    void* unneeded_get_RequestedTheme;
    void* unneeded_put_RequestedTheme;
    void* unneeded_get_IsLoaded;
    void* unneeded_get_ActualTheme;
    void* unneeded_add_Loaded;
    void* unneeded_remove_Loaded;
    void* unneeded_add_Unloaded;
    void* unneeded_remove_Unloaded;
    void* unneeded_add_DataContextChanged;
    void* unneeded_remove_DataContextChanged;
    void* unneeded_add_SizeChanged;
    void* unneeded_remove_SizeChanged;
    void* unneeded_add_LayoutUpdated;
    void* unneeded_remove_LayoutUpdated;
    void* unneeded_add_Loading;
    void* unneeded_remove_Loading;
    void* unneeded_add_ActualThemeChanged;
    void* unneeded_remove_ActualThemeChanged;
    void* unneeded_add_EffectiveViewportChanged;
    void* unneeded_remove_EffectiveViewportChanged;
    void* unneeded_FindName;
    void* unneeded_SetBinding;
    void* unneeded_GetBindingExpression;
} _q_CMicrosoft_CUI_CXaml_CIFrameworkElementVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIFrameworkElement
{
    _q_CMicrosoft_CUI_CXaml_CIFrameworkElementVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIFrameworkElement** __pret);
} _q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactory
{
    _q_CMicrosoft_CUI_CXaml_CIFrameworkElementFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate
{
    _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplate** __pret);
} _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactory
{
    _q_CMicrosoft_CUI_CXaml_CIFrameworkTemplateFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Arguments;
    void* unneeded_get_UWPLaunchActivatedEventArgs;
} _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CILaunchActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CInput_CICommandVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CInput_CICommand* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CInput_CICommand* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CInput_CICommand* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CInput_CICommand* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CInput_CICommand* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CInput_CICommand* This, TrustLevel* trustLevel);
    void* unneeded_add_CanExecuteChanged;
    void* unneeded_remove_CanExecuteChanged;
    void* unneeded_CanExecute;
    void* unneeded_Execute;
} _q_CMicrosoft_CUI_CXaml_CInput_CICommandVtbl;
struct _q_CMicrosoft_CUI_CXaml_CInput_CICommand
{
    _q_CMicrosoft_CUI_CXaml_CInput_CICommandVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionary* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionary* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionary* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionary* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionary* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionary* This, TrustLevel* trustLevel);
    void* unneeded_get_Source;
    void* unneeded_put_Source;
    void* unneeded_get_MergedDictionaries;
    void* unneeded_get_ThemeDictionaries;
} _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIResourceDictionary
{
    _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIResourceDictionary** __pret);
} _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactory
{
    _q_CMicrosoft_CUI_CXaml_CIResourceDictionaryFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_OriginalSource;
} _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgs** __pret);
} _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactory
{
    _q_CMicrosoft_CUI_CXaml_CIRoutedEventArgsFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIUIElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIUIElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIUIElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIUIElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIUIElement* This, TrustLevel* trustLevel);
    void* unneeded_get_DesiredSize;
    void* unneeded_get_AllowDrop;
    void* unneeded_put_AllowDrop;
    void* unneeded_get_Opacity;
    void* unneeded_put_Opacity;
    void* unneeded_get_Clip;
    void* unneeded_put_Clip;
    void* unneeded_get_RenderTransform;
    void* unneeded_put_RenderTransform;
    void* unneeded_get_Projection;
    void* unneeded_put_Projection;
    void* unneeded_get_Transform3D;
    void* unneeded_put_Transform3D;
    void* unneeded_get_RenderTransformOrigin;
    void* unneeded_put_RenderTransformOrigin;
    void* unneeded_get_IsHitTestVisible;
    void* unneeded_put_IsHitTestVisible;
    void* unneeded_get_Visibility;
    void* unneeded_put_Visibility;
    void* unneeded_get_RenderSize;
    void* unneeded_get_UseLayoutRounding;
    void* unneeded_put_UseLayoutRounding;
    void* unneeded_get_Transitions;
    void* unneeded_put_Transitions;
    void* unneeded_get_CacheMode;
    void* unneeded_put_CacheMode;
    void* unneeded_get_IsTapEnabled;
    void* unneeded_put_IsTapEnabled;
    void* unneeded_get_IsDoubleTapEnabled;
    void* unneeded_put_IsDoubleTapEnabled;
    void* unneeded_get_CanDrag;
    void* unneeded_put_CanDrag;
    void* unneeded_get_IsRightTapEnabled;
    void* unneeded_put_IsRightTapEnabled;
    void* unneeded_get_IsHoldingEnabled;
    void* unneeded_put_IsHoldingEnabled;
    void* unneeded_get_ManipulationMode;
    void* unneeded_put_ManipulationMode;
    void* unneeded_get_PointerCaptures;
    void* unneeded_get_ContextFlyout;
    void* unneeded_put_ContextFlyout;
    void* unneeded_get_CompositeMode;
    void* unneeded_put_CompositeMode;
    void* unneeded_get_Lights;
    void* unneeded_get_CanBeScrollAnchor;
    void* unneeded_put_CanBeScrollAnchor;
    void* unneeded_get_ExitDisplayModeOnAccessKeyInvoked;
    void* unneeded_put_ExitDisplayModeOnAccessKeyInvoked;
    void* unneeded_get_IsAccessKeyScope;
    void* unneeded_put_IsAccessKeyScope;
    void* unneeded_get_AccessKeyScopeOwner;
    void* unneeded_put_AccessKeyScopeOwner;
    void* unneeded_get_AccessKey;
    void* unneeded_put_AccessKey;
    void* unneeded_get_KeyTipPlacementMode;
    void* unneeded_put_KeyTipPlacementMode;
    void* unneeded_get_KeyTipHorizontalOffset;
    void* unneeded_put_KeyTipHorizontalOffset;
    void* unneeded_get_KeyTipVerticalOffset;
    void* unneeded_put_KeyTipVerticalOffset;
    void* unneeded_get_KeyTipTarget;
    void* unneeded_put_KeyTipTarget;
    void* unneeded_get_XYFocusKeyboardNavigation;
    void* unneeded_put_XYFocusKeyboardNavigation;
    void* unneeded_get_XYFocusUpNavigationStrategy;
    void* unneeded_put_XYFocusUpNavigationStrategy;
    void* unneeded_get_XYFocusDownNavigationStrategy;
    void* unneeded_put_XYFocusDownNavigationStrategy;
    void* unneeded_get_XYFocusLeftNavigationStrategy;
    void* unneeded_put_XYFocusLeftNavigationStrategy;
    void* unneeded_get_XYFocusRightNavigationStrategy;
    void* unneeded_put_XYFocusRightNavigationStrategy;
    void* unneeded_get_KeyboardAccelerators;
    void* unneeded_get_KeyboardAcceleratorPlacementTarget;
    void* unneeded_put_KeyboardAcceleratorPlacementTarget;
    void* unneeded_get_KeyboardAcceleratorPlacementMode;
    void* unneeded_put_KeyboardAcceleratorPlacementMode;
    void* unneeded_get_HighContrastAdjustment;
    void* unneeded_put_HighContrastAdjustment;
    void* unneeded_get_TabFocusNavigation;
    void* unneeded_put_TabFocusNavigation;
    void* unneeded_get_OpacityTransition;
    void* unneeded_put_OpacityTransition;
    void* unneeded_get_Translation;
    void* unneeded_put_Translation;
    void* unneeded_get_TranslationTransition;
    void* unneeded_put_TranslationTransition;
    void* unneeded_get_Rotation;
    void* unneeded_put_Rotation;
    void* unneeded_get_RotationTransition;
    void* unneeded_put_RotationTransition;
    void* unneeded_get_Scale;
    void* unneeded_put_Scale;
    void* unneeded_get_ScaleTransition;
    void* unneeded_put_ScaleTransition;
    void* unneeded_get_TransformMatrix;
    void* unneeded_put_TransformMatrix;
    void* unneeded_get_CenterPoint;
    void* unneeded_put_CenterPoint;
    void* unneeded_get_RotationAxis;
    void* unneeded_put_RotationAxis;
    void* unneeded_get_ActualOffset;
    void* unneeded_get_ActualSize;
    void* unneeded_get_XamlRoot;
    void* unneeded_put_XamlRoot;
    void* unneeded_get_Shadow;
    void* unneeded_put_Shadow;
    void* unneeded_get_RasterizationScale;
    void* unneeded_put_RasterizationScale;
    void* unneeded_get_FocusState;
    void* unneeded_get_UseSystemFocusVisuals;
    void* unneeded_put_UseSystemFocusVisuals;
    void* unneeded_get_XYFocusLeft;
    void* unneeded_put_XYFocusLeft;
    void* unneeded_get_XYFocusRight;
    void* unneeded_put_XYFocusRight;
    void* unneeded_get_XYFocusUp;
    void* unneeded_put_XYFocusUp;
    void* unneeded_get_XYFocusDown;
    void* unneeded_put_XYFocusDown;
    void* unneeded_get_IsTabStop;
    void* unneeded_put_IsTabStop;
    void* unneeded_get_TabIndex;
    void* unneeded_put_TabIndex;
    void* unneeded_add_KeyUp;
    void* unneeded_remove_KeyUp;
    void* unneeded_add_KeyDown;
    void* unneeded_remove_KeyDown;
    void* unneeded_add_GotFocus;
    void* unneeded_remove_GotFocus;
    void* unneeded_add_LostFocus;
    void* unneeded_remove_LostFocus;
    void* unneeded_add_DragStarting;
    void* unneeded_remove_DragStarting;
    void* unneeded_add_DropCompleted;
    void* unneeded_remove_DropCompleted;
    void* unneeded_add_CharacterReceived;
    void* unneeded_remove_CharacterReceived;
    void* unneeded_add_DragEnter;
    void* unneeded_remove_DragEnter;
    void* unneeded_add_DragLeave;
    void* unneeded_remove_DragLeave;
    void* unneeded_add_DragOver;
    void* unneeded_remove_DragOver;
    void* unneeded_add_Drop;
    void* unneeded_remove_Drop;
    void* unneeded_add_PointerPressed;
    void* unneeded_remove_PointerPressed;
    void* unneeded_add_PointerMoved;
    void* unneeded_remove_PointerMoved;
    void* unneeded_add_PointerReleased;
    void* unneeded_remove_PointerReleased;
    void* unneeded_add_PointerEntered;
    void* unneeded_remove_PointerEntered;
    void* unneeded_add_PointerExited;
    void* unneeded_remove_PointerExited;
    void* unneeded_add_PointerCaptureLost;
    void* unneeded_remove_PointerCaptureLost;
    void* unneeded_add_PointerCanceled;
    void* unneeded_remove_PointerCanceled;
    void* unneeded_add_PointerWheelChanged;
    void* unneeded_remove_PointerWheelChanged;
    void* unneeded_add_Tapped;
    void* unneeded_remove_Tapped;
    void* unneeded_add_DoubleTapped;
    void* unneeded_remove_DoubleTapped;
    void* unneeded_add_Holding;
    void* unneeded_remove_Holding;
    void* unneeded_add_ContextRequested;
    void* unneeded_remove_ContextRequested;
    void* unneeded_add_ContextCanceled;
    void* unneeded_remove_ContextCanceled;
    void* unneeded_add_RightTapped;
    void* unneeded_remove_RightTapped;
    void* unneeded_add_ManipulationStarting;
    void* unneeded_remove_ManipulationStarting;
    void* unneeded_add_ManipulationInertiaStarting;
    void* unneeded_remove_ManipulationInertiaStarting;
    void* unneeded_add_ManipulationStarted;
    void* unneeded_remove_ManipulationStarted;
    void* unneeded_add_ManipulationDelta;
    void* unneeded_remove_ManipulationDelta;
    void* unneeded_add_ManipulationCompleted;
    void* unneeded_remove_ManipulationCompleted;
    void* unneeded_add_AccessKeyDisplayRequested;
    void* unneeded_remove_AccessKeyDisplayRequested;
    void* unneeded_add_AccessKeyDisplayDismissed;
    void* unneeded_remove_AccessKeyDisplayDismissed;
    void* unneeded_add_AccessKeyInvoked;
    void* unneeded_remove_AccessKeyInvoked;
    void* unneeded_add_ProcessKeyboardAccelerators;
    void* unneeded_remove_ProcessKeyboardAccelerators;
    void* unneeded_add_GettingFocus;
    void* unneeded_remove_GettingFocus;
    void* unneeded_add_LosingFocus;
    void* unneeded_remove_LosingFocus;
    void* unneeded_add_NoFocusCandidateFound;
    void* unneeded_remove_NoFocusCandidateFound;
    void* unneeded_add_PreviewKeyDown;
    void* unneeded_remove_PreviewKeyDown;
    void* unneeded_add_PreviewKeyUp;
    void* unneeded_remove_PreviewKeyUp;
    void* unneeded_add_BringIntoViewRequested;
    void* unneeded_remove_BringIntoViewRequested;
    void* unneeded_Measure;
    void* unneeded_Arrange;
    void* unneeded_CapturePointer;
    void* unneeded_ReleasePointerCapture;
    void* unneeded_ReleasePointerCaptures;
    void* unneeded_AddHandler;
    void* unneeded_RemoveHandler;
    void* unneeded_TransformToVisual;
    void* unneeded_InvalidateMeasure;
    void* unneeded_InvalidateArrange;
    void* unneeded_UpdateLayout;
    void* unneeded_CancelDirectManipulations;
    void* unneeded_StartDragAsync;
    void* unneeded_StartBringIntoView;
    void* unneeded_StartBringIntoViewWithOptions;
    void* unneeded_TryInvokeKeyboardAccelerator;
    void* unneeded_Focus;
    void* unneeded_StartAnimation;
    void* unneeded_StopAnimation;
} _q_CMicrosoft_CUI_CXaml_CIUIElementVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIUIElement
{
    _q_CMicrosoft_CUI_CXaml_CIUIElementVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Exception;
    void* unneeded_get_Message;
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
} _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindow* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindow* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindow* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindow* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindow* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Bounds)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CFoundation_CRect* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Visible)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CMicrosoft_CUI_CXaml_CIUIElement** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Content)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CMicrosoft_CUI_CXaml_CIUIElement* value);
    HRESULT (STDMETHODCALLTYPE* get_CoreWindow)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CUI_CCore_CICoreWindow** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Compositor)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CMicrosoft_CUI_CComposition_CICompositor** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Dispatcher)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CUI_CCore_CICoreDispatcher** __pret);
    HRESULT (STDMETHODCALLTYPE* get_DispatcherQueue)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CMicrosoft_CUI_CDispatching_CIDispatcherQueue** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Title)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, HSTRING* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Title)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendsContentIntoTitleBar)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, boolean* __pret);
    HRESULT (STDMETHODCALLTYPE* put_ExtendsContentIntoTitleBar)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, boolean value);
    HRESULT (STDMETHODCALLTYPE* add_Activated)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Activated)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Closed)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_Closed)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SizeChanged)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_SizeChanged)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_VisibilityChanged)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_VisibilityChanged)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* Activate)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis);
    HRESULT (STDMETHODCALLTYPE* SetTitleBar)(_q_CMicrosoft_CUI_CXaml_CIWindow* pThis, _q_CMicrosoft_CUI_CXaml_CIUIElement* titleBar);
} _q_CMicrosoft_CUI_CXaml_CIWindowVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindow
{
    _q_CMicrosoft_CUI_CXaml_CIWindowVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
    void* unneeded_get_WindowActivationState;
} _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
} _q_CMicrosoft_CUI_CXaml_CIWindowEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindowEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CIWindowEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CIWindowFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CIWindow** __pret);
} _q_CMicrosoft_CUI_CXaml_CIWindowFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindowFactory
{
    _q_CMicrosoft_CUI_CXaml_CIWindowFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
    void* unneeded_get_Size;
} _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Current)(_q_CMicrosoft_CUI_CXaml_CIWindowStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIWindow** __pret);
} _q_CMicrosoft_CUI_CXaml_CIWindowStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindowStatics
{
    _q_CMicrosoft_CUI_CXaml_CIWindowStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* This, TrustLevel* trustLevel);
    void* unneeded_get_Handled;
    void* unneeded_put_Handled;
    void* unneeded_get_Visible;
} _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs
{
    _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* This, TrustLevel* trustLevel);
} _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrush* This, TrustLevel* trustLevel);
    void* unneeded_get_Opacity;
    void* unneeded_put_Opacity;
    void* unneeded_get_Transform;
    void* unneeded_put_Transform;
    void* unneeded_get_RelativeTransform;
    void* unneeded_put_RelativeTransform;
} _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CMedia_CIBrush** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactory
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIBrushFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily* This, TrustLevel* trustLevel);
    void* unneeded_get_Source;
} _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory* pThis, HSTRING familyName, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamily** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactory
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush* This, TrustLevel* trustLevel);
    void* unneeded_get_SpreadMethod;
    void* unneeded_put_SpreadMethod;
    void* unneeded_get_MappingMode;
    void* unneeded_put_MappingMode;
    void* unneeded_get_ColorInterpolationMode;
    void* unneeded_put_ColorInterpolationMode;
    void* unneeded_get_GradientStops;
    void* unneeded_put_GradientStops;
} _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstance)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory* pThis, IInspectable* baseInterface, IInspectable** innerInterface, _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrush** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactory
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Color)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* pThis, _q_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* pThis, DOUBLE* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* pThis, DOUBLE value);
} _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_OffsetProperty)(_q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStatics
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartPoint)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* pThis, _q_CWindows_CFoundation_CPoint* __pret);
    HRESULT (STDMETHODCALLTYPE* put_StartPoint)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* pThis, _q_CWindows_CFoundation_CPoint value);
    HRESULT (STDMETHODCALLTYPE* get_EndPoint)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* pThis, _q_CWindows_CFoundation_CPoint* __pret);
    HRESULT (STDMETHODCALLTYPE* put_EndPoint)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush* pThis, _q_CWindows_CFoundation_CPoint value);
} _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithGradientStopCollectionAndAngle)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory* pThis, _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* gradientStopCollection, DOUBLE angle, _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrush** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactory
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_StartPointProperty)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
    HRESULT (STDMETHODCALLTYPE* get_EndPointProperty)(_q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStatics
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Color)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* pThis, _q_CWindows_CUI_CColor* __pret);
    HRESULT (STDMETHODCALLTYPE* put_Color)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush* pThis, _q_CWindows_CUI_CColor value);
} _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceWithColor)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory* pThis, _q_CWindows_CUI_CColor color, _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrush** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactory
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ColorProperty)(_q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics* pThis, _q_CMicrosoft_CUI_CXaml_CIDependencyProperty** __pret);
} _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl;
struct _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStatics
{
    _q_CMicrosoft_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EnergySaverStatus)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CEnergySaverStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_EnergySaverStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EnergySaverStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_BatteryStatus)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CBatteryStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_BatteryStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_BatteryStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_PowerSupplyStatus)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSupplyStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_PowerSupplyStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_PowerSupplyStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_RemainingChargePercent)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, INT32* __pret);
    HRESULT (STDMETHODCALLTYPE* add_RemainingChargePercentChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RemainingChargePercentChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_RemainingDischargeTime)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CTimeSpan* __pret);
    HRESULT (STDMETHODCALLTYPE* add_RemainingDischargeTimeChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_RemainingDischargeTimeChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_PowerSourceKind)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CPowerSourceKind* __pret);
    HRESULT (STDMETHODCALLTYPE* add_PowerSourceKindChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_PowerSourceKindChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_DisplayStatus)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CDisplayStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_DisplayStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_DisplayStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_SystemIdleStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_SystemIdleStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_EffectivePowerMode)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode** __pret);
    HRESULT (STDMETHODCALLTYPE* add_EffectivePowerModeChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_EffectivePowerModeChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_UserPresenceStatus)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CUserPresenceStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_UserPresenceStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_UserPresenceStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_SystemSuspendStatus)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CSystemSuspendStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* add_SystemSuspendStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _cg_CWindows_CFoundation_IEventHandler_1_IInspectable* handler, _q_CWindows_CFoundation_CEventRegistrationToken* __pret);
    HRESULT (STDMETHODCALLTYPE* remove_SystemSuspendStatusChanged)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics* pThis, _q_CWindows_CFoundation_CEventRegistrationToken token);
} _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl;
struct _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_EffectivePowerMode2)(_q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* __pret);
} _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2Vtbl;
struct _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2
{
    _q_CMicrosoft_CWindows_CSystem_CPower_CIPowerManagerStatics2Vtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocument* This, TrustLevel* trustLevel);
    void* unneeded_get_Doctype;
    void* unneeded_get_Implementation;
    void* unneeded_get_DocumentElement;
    void* unneeded_CreateElement;
    void* unneeded_CreateDocumentFragment;
    void* unneeded_CreateTextNode;
    void* unneeded_CreateComment;
    void* unneeded_CreateProcessingInstruction;
    void* unneeded_CreateAttribute;
    void* unneeded_CreateEntityReference;
    void* unneeded_GetElementsByTagName;
    void* unneeded_CreateCDataSection;
    void* unneeded_get_DocumentUri;
    void* unneeded_CreateAttributeNS;
    void* unneeded_CreateElementNS;
    void* unneeded_GetElementById;
    void* unneeded_ImportNode;
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocument
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* LoadXml)(_q_CWindows_CData_CXml_CDom_CIXmlDocumentIO* pThis, HSTRING xml);
    void* unneeded_LoadXmlWithSettings;
    void* unneeded_SaveToFileAsync;
} _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl;
struct _q_CWindows_CData_CXml_CDom_CIXmlDocumentIO
{
    _q_CWindows_CData_CXml_CDom_CIXmlDocumentIOVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncActionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncAction* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncAction* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncAction* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncAction* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncAction* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncAction* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_q_CWindows_CFoundation_CIAsyncAction* pThis, _q_CWindows_CFoundation_CIAsyncActionCompletedHandler** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_q_CWindows_CFoundation_CIAsyncAction* pThis);
} _q_CWindows_CFoundation_CIAsyncActionVtbl;
struct _q_CWindows_CFoundation_CIAsyncAction
{
    _q_CWindows_CFoundation_CIAsyncActionVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIAsyncInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIAsyncInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIAsyncInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIAsyncInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIAsyncInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIAsyncInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, UINT32* __pret);
    HRESULT (STDMETHODCALLTYPE* get_Status)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CAsyncStatus* __pret);
    HRESULT (STDMETHODCALLTYPE* get_ErrorCode)(_q_CWindows_CFoundation_CIAsyncInfo* pThis, _q_CWindows_CFoundation_CHResult* __pret);
    HRESULT (STDMETHODCALLTYPE* Cancel)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
    HRESULT (STDMETHODCALLTYPE* Close)(_q_CWindows_CFoundation_CIAsyncInfo* pThis);
} _q_CWindows_CFoundation_CIAsyncInfoVtbl;
struct _q_CWindows_CFoundation_CIAsyncInfo
{
    _q_CWindows_CFoundation_CIAsyncInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClass* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClass* This, TrustLevel* trustLevel);
    void* unneeded_get_AbsoluteUri;
    void* unneeded_get_DisplayUri;
    void* unneeded_get_Domain;
    void* unneeded_get_Extension;
    void* unneeded_get_Fragment;
    void* unneeded_get_Host;
    void* unneeded_get_Password;
    void* unneeded_get_Path;
    void* unneeded_get_Query;
    void* unneeded_get_QueryParsed;
    void* unneeded_get_RawUri;
    void* unneeded_get_SchemeName;
    void* unneeded_get_UserName;
    void* unneeded_get_Port;
    void* unneeded_get_Suspicious;
    void* unneeded_Equals;
    void* unneeded_CombineUri;
} _q_CWindows_CFoundation_CIUriRuntimeClassVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClass
{
    _q_CWindows_CFoundation_CIUriRuntimeClassVtbl* lpVtbl;
};
typedef struct _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING uri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
    HRESULT (STDMETHODCALLTYPE* CreateWithRelativeUri)(_q_CWindows_CFoundation_CIUriRuntimeClassFactory* pThis, HSTRING baseUri, HSTRING relativeUri, _q_CWindows_CFoundation_CIUriRuntimeClass** __pret);
} _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl;
struct _q_CWindows_CFoundation_CIUriRuntimeClassFactory
{
    _q_CWindows_CFoundation_CIUriRuntimeClassFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* This, TrustLevel* trustLevel);
    void* unneeded_Compare;
    void* unneeded_GenerateRandom;
    void* unneeded_GenerateRandomNumber;
    void* unneeded_CreateFromByteArray;
    void* unneeded_CopyToByteArray;
    void* unneeded_DecodeFromHexString;
    HRESULT (STDMETHODCALLTYPE* EncodeToHexString)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    void* unneeded_DecodeFromBase64String;
    HRESULT (STDMETHODCALLTYPE* EncodeToBase64String)(_q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics* pThis, _q_CWindows_CStorage_CStreams_CIBuffer* buffer, HSTRING* __pret);
    void* unneeded_ConvertStringToBinary;
    void* unneeded_ConvertBinaryToString;
} _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl;
struct _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStatics
{
    _q_CWindows_CSecurity_CCryptography_CICryptographicBufferStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIBufferVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIBuffer* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIBuffer* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIBuffer* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIBuffer* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIBuffer* This, TrustLevel* trustLevel);
    void* unneeded_get_Capacity;
    void* unneeded_get_Length;
    void* unneeded_put_Length;
} _q_CWindows_CStorage_CStreams_CIBufferVtbl;
struct _q_CWindows_CStorage_CStreams_CIBuffer
{
    _q_CWindows_CStorage_CStreams_CIBufferVtbl* lpVtbl;
};
typedef struct _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CStorage_CStreams_CIOutputStream* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CStorage_CStreams_CIOutputStream* This, TrustLevel* trustLevel);
    void* unneeded_WriteAsync;
    HRESULT (STDMETHODCALLTYPE* FlushAsync)(_q_CWindows_CStorage_CStreams_CIOutputStream* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean** __pret);
} _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl;
struct _q_CWindows_CStorage_CStreams_CIOutputStream
{
    _q_CWindows_CStorage_CStreams_CIOutputStreamVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueController* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueController* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueController* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueController* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueController* This, TrustLevel* trustLevel);
    void* unneeded_get_DispatcherQueue;
    HRESULT (STDMETHODCALLTYPE* ShutdownQueueAsync)(_q_CWindows_CSystem_CIDispatcherQueueController* pThis, _q_CWindows_CFoundation_CIAsyncAction** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueController
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateOnDedicatedThread)(_q_CWindows_CSystem_CIDispatcherQueueControllerStatics* pThis, _q_CWindows_CSystem_CIDispatcherQueueController** __pret);
} _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl;
struct _q_CWindows_CSystem_CIDispatcherQueueControllerStatics
{
    _q_CWindows_CSystem_CIDispatcherQueueControllerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CIUserVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CIUser* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CIUser* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CIUser* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CIUser* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CIUser* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CIUser* This, TrustLevel* trustLevel);
    void* unneeded_get_NonRoamableId;
    void* unneeded_get_AuthenticationStatus;
    void* unneeded_get_Type;
    void* unneeded_GetPropertyAsync;
    void* unneeded_GetPropertiesAsync;
    void* unneeded_GetPictureAsync;
} _q_CWindows_CSystem_CIUserVtbl;
struct _q_CWindows_CSystem_CIUser
{
    _q_CWindows_CSystem_CIUserVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Id)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CStorage_CStreams_CIBuffer** __pret);
    HRESULT (STDMETHODCALLTYPE* get_Source)(_q_CWindows_CSystem_CProfile_CISystemIdentificationInfo* pThis, _q_CWindows_CSystem_CProfile_CSystemIdentificationSource* __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationInfoVtbl* lpVtbl;
};
typedef struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForPublisher)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
    HRESULT (STDMETHODCALLTYPE* GetSystemIdForUser)(_q_CWindows_CSystem_CProfile_CISystemIdentificationStatics* pThis, _q_CWindows_CSystem_CIUser* user, _q_CWindows_CSystem_CProfile_CISystemIdentificationInfo** __pret);
} _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl;
struct _q_CWindows_CSystem_CProfile_CISystemIdentificationStatics
{
    _q_CWindows_CSystem_CProfile_CISystemIdentificationStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CCore_CICoreDispatcherVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CCore_CICoreDispatcher* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CCore_CICoreDispatcher* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CCore_CICoreDispatcher* This, TrustLevel* trustLevel);
    void* unneeded_get_HasThreadAccess;
    void* unneeded_ProcessEvents;
    void* unneeded_RunAsync;
    void* unneeded_RunIdleAsync;
} _q_CWindows_CUI_CCore_CICoreDispatcherVtbl;
struct _q_CWindows_CUI_CCore_CICoreDispatcher
{
    _q_CWindows_CUI_CCore_CICoreDispatcherVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CCore_CICoreWindowVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CCore_CICoreWindow* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CCore_CICoreWindow* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CCore_CICoreWindow* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CCore_CICoreWindow* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CCore_CICoreWindow* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CCore_CICoreWindow* This, TrustLevel* trustLevel);
    void* unneeded_get_AutomationHostProvider;
    void* unneeded_get_Bounds;
    void* unneeded_get_CustomProperties;
    void* unneeded_get_Dispatcher;
    void* unneeded_get_FlowDirection;
    void* unneeded_put_FlowDirection;
    void* unneeded_get_IsInputEnabled;
    void* unneeded_put_IsInputEnabled;
    void* unneeded_get_PointerCursor;
    void* unneeded_put_PointerCursor;
    void* unneeded_get_PointerPosition;
    void* unneeded_get_Visible;
    void* unneeded_Activate;
    void* unneeded_Close;
    void* unneeded_GetAsyncKeyState;
    void* unneeded_GetKeyState;
    void* unneeded_ReleasePointerCapture;
    void* unneeded_SetPointerCapture;
    void* unneeded_add_Activated;
    void* unneeded_remove_Activated;
    void* unneeded_add_AutomationProviderRequested;
    void* unneeded_remove_AutomationProviderRequested;
    void* unneeded_add_CharacterReceived;
    void* unneeded_remove_CharacterReceived;
    void* unneeded_add_Closed;
    void* unneeded_remove_Closed;
    void* unneeded_add_InputEnabled;
    void* unneeded_remove_InputEnabled;
    void* unneeded_add_KeyDown;
    void* unneeded_remove_KeyDown;
    void* unneeded_add_KeyUp;
    void* unneeded_remove_KeyUp;
    void* unneeded_add_PointerCaptureLost;
    void* unneeded_remove_PointerCaptureLost;
    void* unneeded_add_PointerEntered;
    void* unneeded_remove_PointerEntered;
    void* unneeded_add_PointerExited;
    void* unneeded_remove_PointerExited;
    void* unneeded_add_PointerMoved;
    void* unneeded_remove_PointerMoved;
    void* unneeded_add_PointerPressed;
    void* unneeded_remove_PointerPressed;
    void* unneeded_add_PointerReleased;
    void* unneeded_remove_PointerReleased;
    void* unneeded_add_TouchHitTesting;
    void* unneeded_remove_TouchHitTesting;
    void* unneeded_add_PointerWheelChanged;
    void* unneeded_remove_PointerWheelChanged;
    void* unneeded_add_SizeChanged;
    void* unneeded_remove_SizeChanged;
    void* unneeded_add_VisibilityChanged;
    void* unneeded_remove_VisibilityChanged;
} _q_CWindows_CUI_CCore_CICoreWindowVtbl;
struct _q_CWindows_CUI_CCore_CICoreWindow
{
    _q_CWindows_CUI_CCore_CICoreWindowVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotification* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotification* This, TrustLevel* trustLevel);
    void* unneeded_get_Content;
    void* unneeded_put_ExpirationTime;
    void* unneeded_get_ExpirationTime;
    void* unneeded_add_Dismissed;
    void* unneeded_remove_Dismissed;
    void* unneeded_add_Activated;
    void* unneeded_remove_Activated;
    void* unneeded_add_Failed;
    void* unneeded_remove_Failed;
} _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotification
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* CreateToastNotification)(_q_CWindows_CUI_CNotifications_CIToastNotificationFactory* pThis, _q_CWindows_CData_CXml_CDom_CIXmlDocument* content, _q_CWindows_CUI_CNotifications_CIToastNotification** __pret);
} _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationFactory
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* This, TrustLevel* trustLevel);
    void* unneeded_CreateToastNotifier;
    HRESULT (STDMETHODCALLTYPE* CreateToastNotifierWithId)(_q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics* pThis, HSTRING applicationId, _q_CWindows_CUI_CNotifications_CIToastNotifier** __pret);
    void* unneeded_GetTemplateContent;
} _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStatics
{
    _q_CWindows_CUI_CNotifications_CIToastNotificationManagerStaticsVtbl* lpVtbl;
};
typedef struct _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CUI_CNotifications_CIToastNotifier* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Show)(_q_CWindows_CUI_CNotifications_CIToastNotifier* pThis, _q_CWindows_CUI_CNotifications_CIToastNotification* notification);
    void* unneeded_Hide;
    void* unneeded_get_Setting;
    void* unneeded_AddToSchedule;
    void* unneeded_RemoveFromSchedule;
    void* unneeded_GetScheduledToastNotifications;
} _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl;
struct _q_CWindows_CUI_CNotifications_CIToastNotifier
{
    _q_CWindows_CUI_CNotifications_CIToastNotifierVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* This, TrustLevel* trustLevel);
    void* unneeded_SendRequestAsync;
} _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl;
struct _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter
{
    _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilterVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClient* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClient* This, TrustLevel* trustLevel);
    void* unneeded_DeleteAsync;
    HRESULT (STDMETHODCALLTYPE* GetAsync)(_q_CWindows_CWeb_CHttp_CIHttpClient* pThis, _q_CWindows_CFoundation_CIUriRuntimeClass* uri, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    void* unneeded_GetWithOptionAsync;
    void* unneeded_GetBufferAsync;
    void* unneeded_GetInputStreamAsync;
    void* unneeded_GetStringAsync;
    void* unneeded_PostAsync;
    void* unneeded_PutAsync;
    void* unneeded_SendRequestAsync;
    void* unneeded_SendRequestWithOptionAsync;
    void* unneeded_get_DefaultRequestHeaders;
} _q_CWindows_CWeb_CHttp_CIHttpClientVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClient
{
    _q_CWindows_CWeb_CHttp_CIHttpClientVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpClientFactory* pThis, _q_CWindows_CWeb_CHttp_CFilters_CIHttpFilter* filter, _q_CWindows_CWeb_CHttp_CIHttpClient** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpClientFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpClientFactoryVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpContentVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpContent* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpContent* This, TrustLevel* trustLevel);
    void* unneeded_get_Headers;
    void* unneeded_BufferAllAsync;
    void* unneeded_ReadAsBufferAsync;
    void* unneeded_ReadAsInputStreamAsync;
    HRESULT (STDMETHODCALLTYPE* ReadAsStringAsync)(_q_CWindows_CWeb_CHttp_CIHttpContent* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64** __pret);
    void* unneeded_TryComputeLength;
    void* unneeded_WriteToStreamAsync;
} _q_CWindows_CWeb_CHttp_CIHttpContentVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpContent
{
    _q_CWindows_CWeb_CHttp_CIHttpContentVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_Content)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpContent** __pret);
    void* unneeded_put_Content;
    void* unneeded_get_Headers;
    void* unneeded_get_IsSuccessStatusCode;
    void* unneeded_get_ReasonPhrase;
    void* unneeded_put_ReasonPhrase;
    void* unneeded_get_RequestMessage;
    void* unneeded_put_RequestMessage;
    void* unneeded_get_Source;
    void* unneeded_put_Source;
    void* unneeded_get_StatusCode;
    void* unneeded_put_StatusCode;
    void* unneeded_get_Version;
    void* unneeded_put_Version;
    HRESULT (STDMETHODCALLTYPE* EnsureSuccessStatusCode)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessage* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessage
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageVtbl* lpVtbl;
};
typedef struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    ULONG (STDMETHODCALLTYPE* Release)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* Create)(_q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory* pThis, _q_CWindows_CWeb_CHttp_CHttpStatusCode statusCode, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl;
struct _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactory
{
    _q_CWindows_CWeb_CHttp_CIHttpResponseMessageFactoryVtbl* lpVtbl;
};
// definitions for parameterized interfaces
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1_boolean* pThis, boolean* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperation_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1_boolean* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_boolean
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _q_CWindows_CWeb_CHttp_CIHttpResponseMessage** __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CWeb_CHttp_CHttpProgress progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IReference_1_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IReference_1_UINT64* This, TrustLevel* trustLevel);
    void* unneeded_get_Value;
} _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IReference_1_UINT64
{
    _cg_CWindows_CFoundation_IReference_1_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgress
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2__q_CWindows_CWeb_CHttp_CHttpResponseMessage__q_CWindows_CWeb_CHttp_CHttpProgressVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* pThis, HSTRING* __pret);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, UINT64 progressInfo);
} _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationProgressHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64* pThis, _cg_CWindows_CFoundation_IAsyncOperationWithProgress_2_HSTRING_UINT64* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64
{
    _cg_CWindows_CFoundation_IAsyncOperationWithProgressCompletedHandler_2_HSTRING_UINT64Vtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IEventHandler_1_IInspectable* pThis, IInspectable* sender, IInspectable* args);
} _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl;
struct _cg_CWindows_CFoundation_IEventHandler_1_IInspectable
{
    _cg_CWindows_CFoundation_IEventHandler_1_IInspectableVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerModeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This, TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* pThis, _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode** __pret);
    HRESULT (STDMETHODCALLTYPE* GetResults)(_cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* pThis, _q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* __pret);
} _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerModeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode
{
    _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerModeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerModeVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* pThis, _cg_CWindows_CFoundation_IAsyncOperation_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode* asyncInfo, _q_CWindows_CFoundation_CAsyncStatus asyncStatus);
} _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerModeVtbl;
struct _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerMode
{
    _cg_CWindows_CFoundation_IAsyncOperationCompletedHandler_1__q_CMicrosoft_CWindows_CSystem_CPower_CEffectivePowerModeVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CIWindowActivatedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowActivatedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CIWindowEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CIWindowSizeChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowSizeChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs* pThis, IInspectable* sender, _q_CMicrosoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2_IInspectable__q_CMicrosoft_CUI_CXaml_CWindowVisibilityChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInlineVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_GetView;
    void* unneeded_IndexOf;
    void* unneeded_SetAt;
    void* unneeded_InsertAt;
    void* unneeded_RemoveAt;
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CIInline* value);
    void* unneeded_RemoveAtEnd;
    void* unneeded_Clear;
    void* unneeded_GetMany;
    void* unneeded_ReplaceAll;
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInlineVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInlineVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInlineVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInlineVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInline
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CInlineVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_GetView;
    void* unneeded_IndexOf;
    void* unneeded_SetAt;
    void* unneeded_InsertAt;
    void* unneeded_RemoveAt;
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* pThis, _q_CMicrosoft_CUI_CXaml_CDocuments_CITextHighlighter* value);
    void* unneeded_RemoveAtEnd;
    void* unneeded_Clear;
    void* unneeded_GetMany;
    void* unneeded_ReplaceAll;
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighterVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighterVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighterVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighterVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighter
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CDocuments_CTextHighlighterVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgsVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs* This);
    HRESULT (STDMETHODCALLTYPE* Invoke)(_cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs* pThis, _q_CMicrosoft_CUI_CXaml_CControls_CITextBlock* sender, _q_CMicrosoft_CUI_CXaml_CControls_CIIsTextTrimmedChangedEventArgs* args);
} _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgsVtbl;
struct _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgs
{
    _cg_CWindows_CFoundation_ITypedEventHandler_2__q_CMicrosoft_CUI_CXaml_CControls_CTextBlock__q_CMicrosoft_CUI_CXaml_CControls_CIsTextTrimmedChangedEventArgsVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOAT
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1_FLOATVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_GetView;
    void* unneeded_IndexOf;
    void* unneeded_SetAt;
    void* unneeded_InsertAt;
    void* unneeded_RemoveAt;
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement* pThis, _q_CMicrosoft_CUI_CXaml_CIUIElement* value);
    void* unneeded_RemoveAtEnd;
    void* unneeded_Clear;
    void* unneeded_GetMany;
    void* unneeded_ReplaceAll;
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElement
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElement
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_GetView;
    void* unneeded_IndexOf;
    void* unneeded_SetAt;
    void* unneeded_InsertAt;
    void* unneeded_RemoveAt;
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition* value);
    void* unneeded_RemoveAtEnd;
    void* unneeded_Clear;
    void* unneeded_GetMany;
    void* unneeded_ReplaceAll;
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransitionVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransitionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransitionVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransitionVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransition
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CTransitionVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_GetView;
    void* unneeded_IndexOf;
    void* unneeded_SetAt;
    void* unneeded_InsertAt;
    void* unneeded_RemoveAt;
    HRESULT (STDMETHODCALLTYPE* Append)(_cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* pThis, _q_CMicrosoft_CUI_CXaml_CMedia_CIGradientStop* value);
    void* unneeded_RemoveAtEnd;
    void* unneeded_Clear;
    void* unneeded_GetMany;
    void* unneeded_ReplaceAll;
} _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
{
    _cg_CWindows_CFoundation_CCollections_IVector_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, TrustLevel* trustLevel);
    void* unneeded_GetAt;
    void* unneeded_get_Size;
    void* unneeded_IndexOf;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl;
struct _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
{
    _cg_CWindows_CFoundation_CCollections_IVectorView_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStop
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CMedia_CGradientStopVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, TrustLevel* trustLevel);
    void* unneeded_First;
} _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElement
{
    _cg_CWindows_CFoundation_CCollections_IIterable_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl* lpVtbl;
};
typedef struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl
{
    HRESULT (STDMETHODCALLTYPE* QueryInterface)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, REFIID riid, void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    ULONG (STDMETHODCALLTYPE* Release)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, ULONG* iidCount, IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(_cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement* This, TrustLevel* trustLevel);
    void* unneeded_get_Current;
    void* unneeded_get_HasCurrent;
    void* unneeded_MoveNext;
    void* unneeded_GetMany;
} _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl;
struct _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElement
{
    _cg_CWindows_CFoundation_CCollections_IIterator_1__q_CMicrosoft_CUI_CXaml_CUIElementVtbl* lpVtbl;
};
